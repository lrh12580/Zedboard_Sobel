// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "addWeighted.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic addWeighted::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic addWeighted::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> addWeighted::ap_ST_fsm_state1 = "1";
const sc_lv<3> addWeighted::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> addWeighted::ap_ST_fsm_state23 = "100";
const bool addWeighted::ap_const_boolean_1 = true;
const sc_lv<32> addWeighted::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> addWeighted::ap_const_lv32_1 = "1";
const bool addWeighted::ap_const_boolean_0 = false;
const sc_lv<1> addWeighted::ap_const_lv1_0 = "0";
const sc_lv<1> addWeighted::ap_const_lv1_1 = "1";
const sc_lv<19> addWeighted::ap_const_lv19_0 = "0000000000000000000";
const sc_lv<64> addWeighted::ap_const_lv64_3FE0000000000000 = "11111111100000000000000000000000000000000000000000000000000000";
const sc_lv<19> addWeighted::ap_const_lv19_40000 = "1000000000000000000";
const sc_lv<19> addWeighted::ap_const_lv19_1 = "1";
const sc_lv<32> addWeighted::ap_const_lv32_34 = "110100";
const sc_lv<32> addWeighted::ap_const_lv32_3E = "111110";
const sc_lv<12> addWeighted::ap_const_lv12_C01 = "110000000001";
const sc_lv<32> addWeighted::ap_const_lv32_B = "1011";
const sc_lv<11> addWeighted::ap_const_lv11_3FF = "1111111111";
const sc_lv<32> addWeighted::ap_const_lv32_35 = "110101";
const sc_lv<32> addWeighted::ap_const_lv32_3C = "111100";
const sc_lv<32> addWeighted::ap_const_lv32_2 = "10";

addWeighted::addWeighted(sc_module_name name) : sc_module(name), mVcdFile(0) {
    image_filter_daddcud_U40 = new image_filter_daddcud<1,5,64,64,64>("image_filter_daddcud_U40");
    image_filter_daddcud_U40->clk(ap_clk);
    image_filter_daddcud_U40->reset(ap_rst);
    image_filter_daddcud_U40->din0(tmp_34_reg_336);
    image_filter_daddcud_U40->din1(tmp_37_reg_341);
    image_filter_daddcud_U40->ce(grp_fu_138_ce);
    image_filter_daddcud_U40->dout(grp_fu_138_p2);
    image_filter_dmuldEe_U41 = new image_filter_dmuldEe<1,6,64,64,64>("image_filter_dmuldEe_U41");
    image_filter_dmuldEe_U41->clk(ap_clk);
    image_filter_dmuldEe_U41->reset(ap_rst);
    image_filter_dmuldEe_U41->din0(tmp_s_reg_326);
    image_filter_dmuldEe_U41->din1(ap_var_for_const0);
    image_filter_dmuldEe_U41->ce(grp_fu_142_ce);
    image_filter_dmuldEe_U41->dout(grp_fu_142_p2);
    image_filter_dmuldEe_U42 = new image_filter_dmuldEe<1,6,64,64,64>("image_filter_dmuldEe_U42");
    image_filter_dmuldEe_U42->clk(ap_clk);
    image_filter_dmuldEe_U42->reset(ap_rst);
    image_filter_dmuldEe_U42->din0(tmp_36_reg_331);
    image_filter_dmuldEe_U42->din1(ap_var_for_const0);
    image_filter_dmuldEe_U42->ce(grp_fu_147_ce);
    image_filter_dmuldEe_U42->dout(grp_fu_147_p2);
    image_filter_sitoeOg_U43 = new image_filter_sitoeOg<1,6,32,64>("image_filter_sitoeOg_U43");
    image_filter_sitoeOg_U43->clk(ap_clk);
    image_filter_sitoeOg_U43->reset(ap_rst);
    image_filter_sitoeOg_U43->din0(grp_fu_152_p0);
    image_filter_sitoeOg_U43->ce(grp_fu_152_ce);
    image_filter_sitoeOg_U43->dout(grp_fu_152_p1);
    image_filter_sitoeOg_U44 = new image_filter_sitoeOg<1,6,32,64>("image_filter_sitoeOg_U44");
    image_filter_sitoeOg_U44->clk(ap_clk);
    image_filter_sitoeOg_U44->reset(ap_rst);
    image_filter_sitoeOg_U44->din0(grp_fu_155_p0);
    image_filter_sitoeOg_U44->ce(grp_fu_155_ce);
    image_filter_sitoeOg_U44->dout(grp_fu_155_p1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( src_x_V_V_empty_n );
    sensitive << ( src_y_V_V_empty_n );
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_297 );
    sensitive << ( ap_enable_reg_pp0_iter20 );
    sensitive << ( ap_reg_pp0_iter19_exitcond_reg_297 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( src_x_V_V_empty_n );
    sensitive << ( src_y_V_V_empty_n );
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_297 );
    sensitive << ( ap_enable_reg_pp0_iter20 );
    sensitive << ( ap_reg_pp0_iter19_exitcond_reg_297 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( src_x_V_V_empty_n );
    sensitive << ( src_y_V_V_empty_n );
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_297 );
    sensitive << ( ap_enable_reg_pp0_iter20 );
    sensitive << ( ap_reg_pp0_iter19_exitcond_reg_297 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter10);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter11);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter12);

    SC_METHOD(thread_ap_block_state15_pp0_stage0_iter13);

    SC_METHOD(thread_ap_block_state16_pp0_stage0_iter14);

    SC_METHOD(thread_ap_block_state17_pp0_stage0_iter15);

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter16);

    SC_METHOD(thread_ap_block_state19_pp0_stage0_iter17);

    SC_METHOD(thread_ap_block_state20_pp0_stage0_iter18);

    SC_METHOD(thread_ap_block_state21_pp0_stage0_iter19);

    SC_METHOD(thread_ap_block_state22_pp0_stage0_iter20);
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_reg_pp0_iter19_exitcond_reg_297 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( src_x_V_V_empty_n );
    sensitive << ( src_y_V_V_empty_n );
    sensitive << ( exitcond_reg_297 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter7);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_fu_158_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter20 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( ap_enable_reg_pp0_iter12 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_enable_reg_pp0_iter14 );
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( ap_enable_reg_pp0_iter17 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_enable_reg_pp0_iter19 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_dst_V_V_blk_n);
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter20 );
    sensitive << ( ap_reg_pp0_iter19_exitcond_reg_297 );

    SC_METHOD(thread_dst_V_V_din);
    sensitive << ( ap_enable_reg_pp0_iter20 );
    sensitive << ( ap_reg_pp0_iter19_exitcond_reg_297 );
    sensitive << ( p_Val2_8_reg_357 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_dst_V_V_write);
    sensitive << ( ap_enable_reg_pp0_iter20 );
    sensitive << ( ap_reg_pp0_iter19_exitcond_reg_297 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_exitcond_fu_158_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_reg_127 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_grp_fu_138_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_142_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_147_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_152_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_152_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_V_7_reg_306 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_grp_fu_155_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_155_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_V_8_reg_311 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_i_4_fu_164_p2);
    sensitive << ( i_reg_127 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_isNeg_fu_218_p3);
    sensitive << ( sh_assign_fu_212_p2 );

    SC_METHOD(thread_loc_V_2_fu_192_p1);
    sensitive << ( p_Val2_s_fu_178_p1 );

    SC_METHOD(thread_p_Val2_8_fu_289_p3);
    sensitive << ( isNeg_fu_218_p3 );
    sensitive << ( tmp_38_fu_275_p1 );
    sensitive << ( tmp_39_fu_279_p4 );

    SC_METHOD(thread_p_Val2_s_fu_178_p1);
    sensitive << ( grp_fu_138_p2 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_sh_assign_3_fu_235_p3);
    sensitive << ( sh_assign_fu_212_p2 );
    sensitive << ( isNeg_fu_218_p3 );
    sensitive << ( tmp_32_i_i_i_cast_fu_231_p1 );

    SC_METHOD(thread_sh_assign_3_i_i_i_ca_fu_243_p1);
    sensitive << ( sh_assign_3_fu_235_p3 );

    SC_METHOD(thread_sh_assign_fu_212_p2);
    sensitive << ( tmp_i_i_i_i_cast_fu_209_p1 );

    SC_METHOD(thread_src_x_V_V_blk_n);
    sensitive << ( src_x_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_reg_297 );

    SC_METHOD(thread_src_x_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_297 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_src_y_V_V_blk_n);
    sensitive << ( src_y_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_reg_297 );

    SC_METHOD(thread_src_y_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_297 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp_32_i_i_i_cast_fu_231_p1);
    sensitive << ( tmp_32_i_i_i_fu_226_p2 );

    SC_METHOD(thread_tmp_32_i_i_i_fu_226_p2);
    sensitive << ( loc_V_reg_346 );

    SC_METHOD(thread_tmp_33_i_i_i_cast_fu_251_p1);
    sensitive << ( sh_assign_3_i_i_i_ca_fu_243_p1 );

    SC_METHOD(thread_tmp_33_i_i_i_fu_247_p1);
    sensitive << ( sh_assign_3_i_i_i_ca_fu_243_p1 );

    SC_METHOD(thread_tmp_34_i_i_i_fu_255_p2);
    sensitive << ( tmp_i_i_i_fu_196_p4 );
    sensitive << ( tmp_33_i_i_i_cast_fu_251_p1 );

    SC_METHOD(thread_tmp_35_i_i_i_fu_261_p2);
    sensitive << ( tmp_i_i_i_cast_fu_205_p1 );
    sensitive << ( tmp_33_i_i_i_fu_247_p1 );

    SC_METHOD(thread_tmp_38_fu_275_p1);
    sensitive << ( tmp_47_fu_267_p3 );

    SC_METHOD(thread_tmp_39_fu_279_p4);
    sensitive << ( tmp_35_i_i_i_fu_261_p2 );

    SC_METHOD(thread_tmp_47_fu_267_p3);
    sensitive << ( tmp_34_i_i_i_fu_255_p2 );

    SC_METHOD(thread_tmp_i_i_i_cast_fu_205_p1);
    sensitive << ( tmp_i_i_i_fu_196_p4 );

    SC_METHOD(thread_tmp_i_i_i_fu_196_p4);
    sensitive << ( loc_V_2_reg_352 );

    SC_METHOD(thread_tmp_i_i_i_i_cast_fu_209_p1);
    sensitive << ( loc_V_reg_346 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter20 );
    sensitive << ( exitcond_fu_158_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter19 );

    SC_THREAD(thread_ap_var_for_const0);

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter20 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter12 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter13 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter14 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter15 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter16 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter17 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter18 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter19 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "addWeighted_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, src_x_V_V_dout, "(port)src_x_V_V_dout");
    sc_trace(mVcdFile, src_x_V_V_empty_n, "(port)src_x_V_V_empty_n");
    sc_trace(mVcdFile, src_x_V_V_read, "(port)src_x_V_V_read");
    sc_trace(mVcdFile, src_y_V_V_dout, "(port)src_y_V_V_dout");
    sc_trace(mVcdFile, src_y_V_V_empty_n, "(port)src_y_V_V_empty_n");
    sc_trace(mVcdFile, src_y_V_V_read, "(port)src_y_V_V_read");
    sc_trace(mVcdFile, dst_V_V_din, "(port)dst_V_V_din");
    sc_trace(mVcdFile, dst_V_V_full_n, "(port)dst_V_V_full_n");
    sc_trace(mVcdFile, dst_V_V_write, "(port)dst_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, src_x_V_V_blk_n, "src_x_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, exitcond_reg_297, "exitcond_reg_297");
    sc_trace(mVcdFile, src_y_V_V_blk_n, "src_y_V_V_blk_n");
    sc_trace(mVcdFile, dst_V_V_blk_n, "dst_V_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter20, "ap_enable_reg_pp0_iter20");
    sc_trace(mVcdFile, ap_reg_pp0_iter19_exitcond_reg_297, "ap_reg_pp0_iter19_exitcond_reg_297");
    sc_trace(mVcdFile, i_reg_127, "i_reg_127");
    sc_trace(mVcdFile, exitcond_fu_158_p2, "exitcond_fu_158_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter7, "ap_block_state9_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter8, "ap_block_state10_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter9, "ap_block_state11_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter10, "ap_block_state12_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter11, "ap_block_state13_pp0_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter12, "ap_block_state14_pp0_stage0_iter12");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage0_iter13, "ap_block_state15_pp0_stage0_iter13");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage0_iter14, "ap_block_state16_pp0_stage0_iter14");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage0_iter15, "ap_block_state17_pp0_stage0_iter15");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter16, "ap_block_state18_pp0_stage0_iter16");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage0_iter17, "ap_block_state19_pp0_stage0_iter17");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage0_iter18, "ap_block_state20_pp0_stage0_iter18");
    sc_trace(mVcdFile, ap_block_state21_pp0_stage0_iter19, "ap_block_state21_pp0_stage0_iter19");
    sc_trace(mVcdFile, ap_block_state22_pp0_stage0_iter20, "ap_block_state22_pp0_stage0_iter20");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_reg_297, "ap_reg_pp0_iter1_exitcond_reg_297");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond_reg_297, "ap_reg_pp0_iter2_exitcond_reg_297");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_exitcond_reg_297, "ap_reg_pp0_iter3_exitcond_reg_297");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_exitcond_reg_297, "ap_reg_pp0_iter4_exitcond_reg_297");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_exitcond_reg_297, "ap_reg_pp0_iter5_exitcond_reg_297");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_exitcond_reg_297, "ap_reg_pp0_iter6_exitcond_reg_297");
    sc_trace(mVcdFile, ap_reg_pp0_iter7_exitcond_reg_297, "ap_reg_pp0_iter7_exitcond_reg_297");
    sc_trace(mVcdFile, ap_reg_pp0_iter8_exitcond_reg_297, "ap_reg_pp0_iter8_exitcond_reg_297");
    sc_trace(mVcdFile, ap_reg_pp0_iter9_exitcond_reg_297, "ap_reg_pp0_iter9_exitcond_reg_297");
    sc_trace(mVcdFile, ap_reg_pp0_iter10_exitcond_reg_297, "ap_reg_pp0_iter10_exitcond_reg_297");
    sc_trace(mVcdFile, ap_reg_pp0_iter11_exitcond_reg_297, "ap_reg_pp0_iter11_exitcond_reg_297");
    sc_trace(mVcdFile, ap_reg_pp0_iter12_exitcond_reg_297, "ap_reg_pp0_iter12_exitcond_reg_297");
    sc_trace(mVcdFile, ap_reg_pp0_iter13_exitcond_reg_297, "ap_reg_pp0_iter13_exitcond_reg_297");
    sc_trace(mVcdFile, ap_reg_pp0_iter14_exitcond_reg_297, "ap_reg_pp0_iter14_exitcond_reg_297");
    sc_trace(mVcdFile, ap_reg_pp0_iter15_exitcond_reg_297, "ap_reg_pp0_iter15_exitcond_reg_297");
    sc_trace(mVcdFile, ap_reg_pp0_iter16_exitcond_reg_297, "ap_reg_pp0_iter16_exitcond_reg_297");
    sc_trace(mVcdFile, ap_reg_pp0_iter17_exitcond_reg_297, "ap_reg_pp0_iter17_exitcond_reg_297");
    sc_trace(mVcdFile, ap_reg_pp0_iter18_exitcond_reg_297, "ap_reg_pp0_iter18_exitcond_reg_297");
    sc_trace(mVcdFile, i_4_fu_164_p2, "i_4_fu_164_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_V_7_reg_306, "tmp_V_7_reg_306");
    sc_trace(mVcdFile, tmp_V_8_reg_311, "tmp_V_8_reg_311");
    sc_trace(mVcdFile, grp_fu_152_p1, "grp_fu_152_p1");
    sc_trace(mVcdFile, tmp_s_reg_326, "tmp_s_reg_326");
    sc_trace(mVcdFile, grp_fu_155_p1, "grp_fu_155_p1");
    sc_trace(mVcdFile, tmp_36_reg_331, "tmp_36_reg_331");
    sc_trace(mVcdFile, grp_fu_142_p2, "grp_fu_142_p2");
    sc_trace(mVcdFile, tmp_34_reg_336, "tmp_34_reg_336");
    sc_trace(mVcdFile, grp_fu_147_p2, "grp_fu_147_p2");
    sc_trace(mVcdFile, tmp_37_reg_341, "tmp_37_reg_341");
    sc_trace(mVcdFile, loc_V_reg_346, "loc_V_reg_346");
    sc_trace(mVcdFile, loc_V_2_fu_192_p1, "loc_V_2_fu_192_p1");
    sc_trace(mVcdFile, loc_V_2_reg_352, "loc_V_2_reg_352");
    sc_trace(mVcdFile, p_Val2_8_fu_289_p3, "p_Val2_8_fu_289_p3");
    sc_trace(mVcdFile, p_Val2_8_reg_357, "p_Val2_8_reg_357");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter11, "ap_enable_reg_pp0_iter11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter12, "ap_enable_reg_pp0_iter12");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter13, "ap_enable_reg_pp0_iter13");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter14, "ap_enable_reg_pp0_iter14");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter15, "ap_enable_reg_pp0_iter15");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter16, "ap_enable_reg_pp0_iter16");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter17, "ap_enable_reg_pp0_iter17");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter18, "ap_enable_reg_pp0_iter18");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter19, "ap_enable_reg_pp0_iter19");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, grp_fu_152_p0, "grp_fu_152_p0");
    sc_trace(mVcdFile, grp_fu_155_p0, "grp_fu_155_p0");
    sc_trace(mVcdFile, grp_fu_138_p2, "grp_fu_138_p2");
    sc_trace(mVcdFile, p_Val2_s_fu_178_p1, "p_Val2_s_fu_178_p1");
    sc_trace(mVcdFile, tmp_i_i_i_fu_196_p4, "tmp_i_i_i_fu_196_p4");
    sc_trace(mVcdFile, tmp_i_i_i_i_cast_fu_209_p1, "tmp_i_i_i_i_cast_fu_209_p1");
    sc_trace(mVcdFile, sh_assign_fu_212_p2, "sh_assign_fu_212_p2");
    sc_trace(mVcdFile, tmp_32_i_i_i_fu_226_p2, "tmp_32_i_i_i_fu_226_p2");
    sc_trace(mVcdFile, isNeg_fu_218_p3, "isNeg_fu_218_p3");
    sc_trace(mVcdFile, tmp_32_i_i_i_cast_fu_231_p1, "tmp_32_i_i_i_cast_fu_231_p1");
    sc_trace(mVcdFile, sh_assign_3_fu_235_p3, "sh_assign_3_fu_235_p3");
    sc_trace(mVcdFile, sh_assign_3_i_i_i_ca_fu_243_p1, "sh_assign_3_i_i_i_ca_fu_243_p1");
    sc_trace(mVcdFile, tmp_33_i_i_i_cast_fu_251_p1, "tmp_33_i_i_i_cast_fu_251_p1");
    sc_trace(mVcdFile, tmp_i_i_i_cast_fu_205_p1, "tmp_i_i_i_cast_fu_205_p1");
    sc_trace(mVcdFile, tmp_33_i_i_i_fu_247_p1, "tmp_33_i_i_i_fu_247_p1");
    sc_trace(mVcdFile, tmp_34_i_i_i_fu_255_p2, "tmp_34_i_i_i_fu_255_p2");
    sc_trace(mVcdFile, tmp_47_fu_267_p3, "tmp_47_fu_267_p3");
    sc_trace(mVcdFile, tmp_35_i_i_i_fu_261_p2, "tmp_35_i_i_i_fu_261_p2");
    sc_trace(mVcdFile, tmp_38_fu_275_p1, "tmp_38_fu_275_p1");
    sc_trace(mVcdFile, tmp_39_fu_279_p4, "tmp_39_fu_279_p4");
    sc_trace(mVcdFile, grp_fu_138_ce, "grp_fu_138_ce");
    sc_trace(mVcdFile, grp_fu_142_ce, "grp_fu_142_ce");
    sc_trace(mVcdFile, grp_fu_147_ce, "grp_fu_147_ce");
    sc_trace(mVcdFile, grp_fu_152_ce, "grp_fu_152_ce");
    sc_trace(mVcdFile, grp_fu_155_ce, "grp_fu_155_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

addWeighted::~addWeighted() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete image_filter_daddcud_U40;
    delete image_filter_dmuldEe_U41;
    delete image_filter_dmuldEe_U42;
    delete image_filter_sitoeOg_U43;
    delete image_filter_sitoeOg_U44;
}

void addWeighted::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv64_3FE0000000000000;
}

void addWeighted::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter11 = ap_enable_reg_pp0_iter10.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter12 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter12 = ap_enable_reg_pp0_iter11.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter13 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter13 = ap_enable_reg_pp0_iter12.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter14 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter14 = ap_enable_reg_pp0_iter13.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter15 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter15 = ap_enable_reg_pp0_iter14.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter16 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter16 = ap_enable_reg_pp0_iter15.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter17 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter17 = ap_enable_reg_pp0_iter16.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter18 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter18 = ap_enable_reg_pp0_iter17.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter19 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter19 = ap_enable_reg_pp0_iter18.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter20 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter20 = ap_enable_reg_pp0_iter19.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter20 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_158_p2.read()))) {
        i_reg_127 = i_4_fu_164_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_reg_127 = ap_const_lv19_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        ap_reg_pp0_iter10_exitcond_reg_297 = ap_reg_pp0_iter9_exitcond_reg_297.read();
        ap_reg_pp0_iter11_exitcond_reg_297 = ap_reg_pp0_iter10_exitcond_reg_297.read();
        ap_reg_pp0_iter12_exitcond_reg_297 = ap_reg_pp0_iter11_exitcond_reg_297.read();
        ap_reg_pp0_iter13_exitcond_reg_297 = ap_reg_pp0_iter12_exitcond_reg_297.read();
        ap_reg_pp0_iter14_exitcond_reg_297 = ap_reg_pp0_iter13_exitcond_reg_297.read();
        ap_reg_pp0_iter15_exitcond_reg_297 = ap_reg_pp0_iter14_exitcond_reg_297.read();
        ap_reg_pp0_iter16_exitcond_reg_297 = ap_reg_pp0_iter15_exitcond_reg_297.read();
        ap_reg_pp0_iter17_exitcond_reg_297 = ap_reg_pp0_iter16_exitcond_reg_297.read();
        ap_reg_pp0_iter18_exitcond_reg_297 = ap_reg_pp0_iter17_exitcond_reg_297.read();
        ap_reg_pp0_iter19_exitcond_reg_297 = ap_reg_pp0_iter18_exitcond_reg_297.read();
        ap_reg_pp0_iter2_exitcond_reg_297 = ap_reg_pp0_iter1_exitcond_reg_297.read();
        ap_reg_pp0_iter3_exitcond_reg_297 = ap_reg_pp0_iter2_exitcond_reg_297.read();
        ap_reg_pp0_iter4_exitcond_reg_297 = ap_reg_pp0_iter3_exitcond_reg_297.read();
        ap_reg_pp0_iter5_exitcond_reg_297 = ap_reg_pp0_iter4_exitcond_reg_297.read();
        ap_reg_pp0_iter6_exitcond_reg_297 = ap_reg_pp0_iter5_exitcond_reg_297.read();
        ap_reg_pp0_iter7_exitcond_reg_297 = ap_reg_pp0_iter6_exitcond_reg_297.read();
        ap_reg_pp0_iter8_exitcond_reg_297 = ap_reg_pp0_iter7_exitcond_reg_297.read();
        ap_reg_pp0_iter9_exitcond_reg_297 = ap_reg_pp0_iter8_exitcond_reg_297.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond_reg_297 = exitcond_reg_297.read();
        exitcond_reg_297 = exitcond_fu_158_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter17_exitcond_reg_297.read()))) {
        loc_V_2_reg_352 = loc_V_2_fu_192_p1.read();
        loc_V_reg_346 = p_Val2_s_fu_178_p1.read().range(62, 52);
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter18_exitcond_reg_297.read()))) {
        p_Val2_8_reg_357 = p_Val2_8_fu_289_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter12_exitcond_reg_297.read()))) {
        tmp_34_reg_336 = grp_fu_142_p2.read();
        tmp_37_reg_341 = grp_fu_147_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter6_exitcond_reg_297.read()))) {
        tmp_36_reg_331 = grp_fu_155_p1.read();
        tmp_s_reg_326 = grp_fu_152_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(exitcond_reg_297.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_V_7_reg_306 = src_x_V_V_dout.read();
        tmp_V_8_reg_311 = src_y_V_V_dout.read();
    }
}

void addWeighted::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void addWeighted::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void addWeighted::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[2];
}

void addWeighted::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void addWeighted::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(exitcond_reg_297.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_x_V_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(exitcond_reg_297.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_y_V_V_empty_n.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter19_exitcond_reg_297.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read())));
}

void addWeighted::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(exitcond_reg_297.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_x_V_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(exitcond_reg_297.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_y_V_V_empty_n.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter19_exitcond_reg_297.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read())));
}

void addWeighted::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(exitcond_reg_297.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_x_V_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(exitcond_reg_297.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_y_V_V_empty_n.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter19_exitcond_reg_297.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read())));
}

void addWeighted::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void addWeighted::thread_ap_block_state10_pp0_stage0_iter8() {
    ap_block_state10_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void addWeighted::thread_ap_block_state11_pp0_stage0_iter9() {
    ap_block_state11_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void addWeighted::thread_ap_block_state12_pp0_stage0_iter10() {
    ap_block_state12_pp0_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void addWeighted::thread_ap_block_state13_pp0_stage0_iter11() {
    ap_block_state13_pp0_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void addWeighted::thread_ap_block_state14_pp0_stage0_iter12() {
    ap_block_state14_pp0_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void addWeighted::thread_ap_block_state15_pp0_stage0_iter13() {
    ap_block_state15_pp0_stage0_iter13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void addWeighted::thread_ap_block_state16_pp0_stage0_iter14() {
    ap_block_state16_pp0_stage0_iter14 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void addWeighted::thread_ap_block_state17_pp0_stage0_iter15() {
    ap_block_state17_pp0_stage0_iter15 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void addWeighted::thread_ap_block_state18_pp0_stage0_iter16() {
    ap_block_state18_pp0_stage0_iter16 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void addWeighted::thread_ap_block_state19_pp0_stage0_iter17() {
    ap_block_state19_pp0_stage0_iter17 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void addWeighted::thread_ap_block_state20_pp0_stage0_iter18() {
    ap_block_state20_pp0_stage0_iter18 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void addWeighted::thread_ap_block_state21_pp0_stage0_iter19() {
    ap_block_state21_pp0_stage0_iter19 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void addWeighted::thread_ap_block_state22_pp0_stage0_iter20() {
    ap_block_state22_pp0_stage0_iter20 = (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter19_exitcond_reg_297.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read()));
}

void addWeighted::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void addWeighted::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(exitcond_reg_297.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_x_V_V_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_reg_297.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_y_V_V_empty_n.read())));
}

void addWeighted::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void addWeighted::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void addWeighted::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void addWeighted::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void addWeighted::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void addWeighted::thread_ap_block_state9_pp0_stage0_iter7() {
    ap_block_state9_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void addWeighted::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_fu_158_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void addWeighted::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void addWeighted::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void addWeighted::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void addWeighted::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter13.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter14.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter15.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter16.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter17.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter18.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter19.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter20.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void addWeighted::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void addWeighted::thread_dst_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter19_exitcond_reg_297.read()))) {
        dst_V_V_blk_n = dst_V_V_full_n.read();
    } else {
        dst_V_V_blk_n = ap_const_logic_1;
    }
}

void addWeighted::thread_dst_V_V_din() {
    dst_V_V_din = p_Val2_8_reg_357.read();
}

void addWeighted::thread_dst_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter19_exitcond_reg_297.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        dst_V_V_write = ap_const_logic_1;
    } else {
        dst_V_V_write = ap_const_logic_0;
    }
}

void addWeighted::thread_exitcond_fu_158_p2() {
    exitcond_fu_158_p2 = (!i_reg_127.read().is_01() || !ap_const_lv19_40000.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_127.read() == ap_const_lv19_40000);
}

void addWeighted::thread_grp_fu_138_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_138_ce = ap_const_logic_1;
    } else {
        grp_fu_138_ce = ap_const_logic_0;
    }
}

void addWeighted::thread_grp_fu_142_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_142_ce = ap_const_logic_1;
    } else {
        grp_fu_142_ce = ap_const_logic_0;
    }
}

void addWeighted::thread_grp_fu_147_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_147_ce = ap_const_logic_1;
    } else {
        grp_fu_147_ce = ap_const_logic_0;
    }
}

void addWeighted::thread_grp_fu_152_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_152_ce = ap_const_logic_1;
    } else {
        grp_fu_152_ce = ap_const_logic_0;
    }
}

void addWeighted::thread_grp_fu_152_p0() {
    grp_fu_152_p0 = esl_zext<32,8>(tmp_V_7_reg_306.read());
}

void addWeighted::thread_grp_fu_155_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_155_ce = ap_const_logic_1;
    } else {
        grp_fu_155_ce = ap_const_logic_0;
    }
}

void addWeighted::thread_grp_fu_155_p0() {
    grp_fu_155_p0 = esl_zext<32,8>(tmp_V_8_reg_311.read());
}

void addWeighted::thread_i_4_fu_164_p2() {
    i_4_fu_164_p2 = (!i_reg_127.read().is_01() || !ap_const_lv19_1.is_01())? sc_lv<19>(): (sc_biguint<19>(i_reg_127.read()) + sc_biguint<19>(ap_const_lv19_1));
}

void addWeighted::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void addWeighted::thread_isNeg_fu_218_p3() {
    isNeg_fu_218_p3 = sh_assign_fu_212_p2.read().range(11, 11);
}

void addWeighted::thread_loc_V_2_fu_192_p1() {
    loc_V_2_fu_192_p1 = p_Val2_s_fu_178_p1.read().range(52-1, 0);
}

void addWeighted::thread_p_Val2_8_fu_289_p3() {
    p_Val2_8_fu_289_p3 = (!isNeg_fu_218_p3.read()[0].is_01())? sc_lv<8>(): ((isNeg_fu_218_p3.read()[0].to_bool())? tmp_38_fu_275_p1.read(): tmp_39_fu_279_p4.read());
}

void addWeighted::thread_p_Val2_s_fu_178_p1() {
    p_Val2_s_fu_178_p1 = grp_fu_138_p2.read();
}

void addWeighted::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void addWeighted::thread_sh_assign_3_fu_235_p3() {
    sh_assign_3_fu_235_p3 = (!isNeg_fu_218_p3.read()[0].is_01())? sc_lv<12>(): ((isNeg_fu_218_p3.read()[0].to_bool())? tmp_32_i_i_i_cast_fu_231_p1.read(): sh_assign_fu_212_p2.read());
}

void addWeighted::thread_sh_assign_3_i_i_i_ca_fu_243_p1() {
    sh_assign_3_i_i_i_ca_fu_243_p1 = esl_sext<32,12>(sh_assign_3_fu_235_p3.read());
}

void addWeighted::thread_sh_assign_fu_212_p2() {
    sh_assign_fu_212_p2 = (!ap_const_lv12_C01.is_01() || !tmp_i_i_i_i_cast_fu_209_p1.read().is_01())? sc_lv<12>(): (sc_bigint<12>(ap_const_lv12_C01) + sc_biguint<12>(tmp_i_i_i_i_cast_fu_209_p1.read()));
}

void addWeighted::thread_src_x_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_reg_297.read(), ap_const_lv1_0))) {
        src_x_V_V_blk_n = src_x_V_V_empty_n.read();
    } else {
        src_x_V_V_blk_n = ap_const_logic_1;
    }
}

void addWeighted::thread_src_x_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_297.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        src_x_V_V_read = ap_const_logic_1;
    } else {
        src_x_V_V_read = ap_const_logic_0;
    }
}

void addWeighted::thread_src_y_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_reg_297.read(), ap_const_lv1_0))) {
        src_y_V_V_blk_n = src_y_V_V_empty_n.read();
    } else {
        src_y_V_V_blk_n = ap_const_logic_1;
    }
}

void addWeighted::thread_src_y_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_297.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        src_y_V_V_read = ap_const_logic_1;
    } else {
        src_y_V_V_read = ap_const_logic_0;
    }
}

void addWeighted::thread_start_out() {
    start_out = real_start.read();
}

void addWeighted::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void addWeighted::thread_tmp_32_i_i_i_cast_fu_231_p1() {
    tmp_32_i_i_i_cast_fu_231_p1 = esl_sext<12,11>(tmp_32_i_i_i_fu_226_p2.read());
}

void addWeighted::thread_tmp_32_i_i_i_fu_226_p2() {
    tmp_32_i_i_i_fu_226_p2 = (!ap_const_lv11_3FF.is_01() || !loc_V_reg_346.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_3FF) - sc_biguint<11>(loc_V_reg_346.read()));
}

void addWeighted::thread_tmp_33_i_i_i_cast_fu_251_p1() {
    tmp_33_i_i_i_cast_fu_251_p1 = esl_zext<54,32>(sh_assign_3_i_i_i_ca_fu_243_p1.read());
}

void addWeighted::thread_tmp_33_i_i_i_fu_247_p1() {
    tmp_33_i_i_i_fu_247_p1 = esl_zext<113,32>(sh_assign_3_i_i_i_ca_fu_243_p1.read());
}

void addWeighted::thread_tmp_34_i_i_i_fu_255_p2() {
    tmp_34_i_i_i_fu_255_p2 = (!tmp_33_i_i_i_cast_fu_251_p1.read().is_01())? sc_lv<54>(): tmp_i_i_i_fu_196_p4.read() >> (unsigned short)tmp_33_i_i_i_cast_fu_251_p1.read().to_uint();
}

void addWeighted::thread_tmp_35_i_i_i_fu_261_p2() {
    tmp_35_i_i_i_fu_261_p2 = (!tmp_33_i_i_i_fu_247_p1.read().is_01())? sc_lv<113>(): tmp_i_i_i_cast_fu_205_p1.read() << (unsigned short)tmp_33_i_i_i_fu_247_p1.read().to_uint();
}

void addWeighted::thread_tmp_38_fu_275_p1() {
    tmp_38_fu_275_p1 = esl_zext<8,1>(tmp_47_fu_267_p3.read());
}

void addWeighted::thread_tmp_39_fu_279_p4() {
    tmp_39_fu_279_p4 = tmp_35_i_i_i_fu_261_p2.read().range(60, 53);
}

void addWeighted::thread_tmp_47_fu_267_p3() {
    tmp_47_fu_267_p3 = tmp_34_i_i_i_fu_255_p2.read().range(53, 53);
}

void addWeighted::thread_tmp_i_i_i_cast_fu_205_p1() {
    tmp_i_i_i_cast_fu_205_p1 = esl_zext<113,54>(tmp_i_i_i_fu_196_p4.read());
}

void addWeighted::thread_tmp_i_i_i_fu_196_p4() {
    tmp_i_i_i_fu_196_p4 = esl_concat<53,1>(esl_concat<1,52>(ap_const_lv1_1, loc_V_2_reg_352.read()), ap_const_lv1_0);
}

void addWeighted::thread_tmp_i_i_i_i_cast_fu_209_p1() {
    tmp_i_i_i_i_cast_fu_209_p1 = esl_zext<12,11>(loc_V_reg_346.read());
}

void addWeighted::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter19.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_fu_158_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter19.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_fu_158_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state23;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

