// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _addWeighted_HH_
#define _addWeighted_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "image_filter_daddcud.h"
#include "image_filter_dmuldEe.h"
#include "image_filter_sitoeOg.h"

namespace ap_rtl {

struct addWeighted : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > src_x_V_V_dout;
    sc_in< sc_logic > src_x_V_V_empty_n;
    sc_out< sc_logic > src_x_V_V_read;
    sc_in< sc_lv<8> > src_y_V_V_dout;
    sc_in< sc_logic > src_y_V_V_empty_n;
    sc_out< sc_logic > src_y_V_V_read;
    sc_out< sc_lv<8> > dst_V_V_din;
    sc_in< sc_logic > dst_V_V_full_n;
    sc_out< sc_logic > dst_V_V_write;
    sc_signal< sc_lv<64> > ap_var_for_const0;


    // Module declarations
    addWeighted(sc_module_name name);
    SC_HAS_PROCESS(addWeighted);

    ~addWeighted();

    sc_trace_file* mVcdFile;

    image_filter_daddcud<1,5,64,64,64>* image_filter_daddcud_U40;
    image_filter_dmuldEe<1,6,64,64,64>* image_filter_dmuldEe_U41;
    image_filter_dmuldEe<1,6,64,64,64>* image_filter_dmuldEe_U42;
    image_filter_sitoeOg<1,6,32,64>* image_filter_sitoeOg_U43;
    image_filter_sitoeOg<1,6,32,64>* image_filter_sitoeOg_U44;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > src_x_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_reg_297;
    sc_signal< sc_logic > src_y_V_V_blk_n;
    sc_signal< sc_logic > dst_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter20;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter19_exitcond_reg_297;
    sc_signal< sc_lv<19> > i_reg_127;
    sc_signal< sc_lv<1> > exitcond_fu_158_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter9;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter10;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter11;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter12;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter13;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter14;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter15;
    sc_signal< bool > ap_block_state18_pp0_stage0_iter16;
    sc_signal< bool > ap_block_state19_pp0_stage0_iter17;
    sc_signal< bool > ap_block_state20_pp0_stage0_iter18;
    sc_signal< bool > ap_block_state21_pp0_stage0_iter19;
    sc_signal< bool > ap_block_state22_pp0_stage0_iter20;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_exitcond_reg_297;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter2_exitcond_reg_297;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter3_exitcond_reg_297;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter4_exitcond_reg_297;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter5_exitcond_reg_297;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter6_exitcond_reg_297;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter7_exitcond_reg_297;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter8_exitcond_reg_297;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter9_exitcond_reg_297;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter10_exitcond_reg_297;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter11_exitcond_reg_297;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter12_exitcond_reg_297;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter13_exitcond_reg_297;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter14_exitcond_reg_297;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter15_exitcond_reg_297;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter16_exitcond_reg_297;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter17_exitcond_reg_297;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter18_exitcond_reg_297;
    sc_signal< sc_lv<19> > i_4_fu_164_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<8> > tmp_V_7_reg_306;
    sc_signal< sc_lv<8> > tmp_V_8_reg_311;
    sc_signal< sc_lv<64> > grp_fu_152_p1;
    sc_signal< sc_lv<64> > tmp_s_reg_326;
    sc_signal< sc_lv<64> > grp_fu_155_p1;
    sc_signal< sc_lv<64> > tmp_36_reg_331;
    sc_signal< sc_lv<64> > grp_fu_142_p2;
    sc_signal< sc_lv<64> > tmp_34_reg_336;
    sc_signal< sc_lv<64> > grp_fu_147_p2;
    sc_signal< sc_lv<64> > tmp_37_reg_341;
    sc_signal< sc_lv<11> > loc_V_reg_346;
    sc_signal< sc_lv<52> > loc_V_2_fu_192_p1;
    sc_signal< sc_lv<52> > loc_V_2_reg_352;
    sc_signal< sc_lv<8> > p_Val2_8_fu_289_p3;
    sc_signal< sc_lv<8> > p_Val2_8_reg_357;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter10;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter11;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter12;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter13;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter14;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter15;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter16;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter17;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter18;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter19;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<32> > grp_fu_152_p0;
    sc_signal< sc_lv<32> > grp_fu_155_p0;
    sc_signal< sc_lv<64> > grp_fu_138_p2;
    sc_signal< sc_lv<64> > p_Val2_s_fu_178_p1;
    sc_signal< sc_lv<54> > tmp_i_i_i_fu_196_p4;
    sc_signal< sc_lv<12> > tmp_i_i_i_i_cast_fu_209_p1;
    sc_signal< sc_lv<12> > sh_assign_fu_212_p2;
    sc_signal< sc_lv<11> > tmp_32_i_i_i_fu_226_p2;
    sc_signal< sc_lv<1> > isNeg_fu_218_p3;
    sc_signal< sc_lv<12> > tmp_32_i_i_i_cast_fu_231_p1;
    sc_signal< sc_lv<12> > sh_assign_3_fu_235_p3;
    sc_signal< sc_lv<32> > sh_assign_3_i_i_i_ca_fu_243_p1;
    sc_signal< sc_lv<54> > tmp_33_i_i_i_cast_fu_251_p1;
    sc_signal< sc_lv<113> > tmp_i_i_i_cast_fu_205_p1;
    sc_signal< sc_lv<113> > tmp_33_i_i_i_fu_247_p1;
    sc_signal< sc_lv<54> > tmp_34_i_i_i_fu_255_p2;
    sc_signal< sc_lv<1> > tmp_47_fu_267_p3;
    sc_signal< sc_lv<113> > tmp_35_i_i_i_fu_261_p2;
    sc_signal< sc_lv<8> > tmp_38_fu_275_p1;
    sc_signal< sc_lv<8> > tmp_39_fu_279_p4;
    sc_signal< sc_logic > grp_fu_138_ce;
    sc_signal< sc_logic > grp_fu_142_ce;
    sc_signal< sc_logic > grp_fu_147_ce;
    sc_signal< sc_logic > grp_fu_152_ce;
    sc_signal< sc_logic > grp_fu_155_ce;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state23;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<19> ap_const_lv19_0;
    static const sc_lv<64> ap_const_lv64_3FE0000000000000;
    static const sc_lv<19> ap_const_lv19_40000;
    static const sc_lv<19> ap_const_lv19_1;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<12> ap_const_lv12_C01;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<11> ap_const_lv11_3FF;
    static const sc_lv<32> ap_const_lv32_35;
    static const sc_lv<32> ap_const_lv32_3C;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state23();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state10_pp0_stage0_iter8();
    void thread_ap_block_state11_pp0_stage0_iter9();
    void thread_ap_block_state12_pp0_stage0_iter10();
    void thread_ap_block_state13_pp0_stage0_iter11();
    void thread_ap_block_state14_pp0_stage0_iter12();
    void thread_ap_block_state15_pp0_stage0_iter13();
    void thread_ap_block_state16_pp0_stage0_iter14();
    void thread_ap_block_state17_pp0_stage0_iter15();
    void thread_ap_block_state18_pp0_stage0_iter16();
    void thread_ap_block_state19_pp0_stage0_iter17();
    void thread_ap_block_state20_pp0_stage0_iter18();
    void thread_ap_block_state21_pp0_stage0_iter19();
    void thread_ap_block_state22_pp0_stage0_iter20();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_block_state7_pp0_stage0_iter5();
    void thread_ap_block_state8_pp0_stage0_iter6();
    void thread_ap_block_state9_pp0_stage0_iter7();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_dst_V_V_blk_n();
    void thread_dst_V_V_din();
    void thread_dst_V_V_write();
    void thread_exitcond_fu_158_p2();
    void thread_grp_fu_138_ce();
    void thread_grp_fu_142_ce();
    void thread_grp_fu_147_ce();
    void thread_grp_fu_152_ce();
    void thread_grp_fu_152_p0();
    void thread_grp_fu_155_ce();
    void thread_grp_fu_155_p0();
    void thread_i_4_fu_164_p2();
    void thread_internal_ap_ready();
    void thread_isNeg_fu_218_p3();
    void thread_loc_V_2_fu_192_p1();
    void thread_p_Val2_8_fu_289_p3();
    void thread_p_Val2_s_fu_178_p1();
    void thread_real_start();
    void thread_sh_assign_3_fu_235_p3();
    void thread_sh_assign_3_i_i_i_ca_fu_243_p1();
    void thread_sh_assign_fu_212_p2();
    void thread_src_x_V_V_blk_n();
    void thread_src_x_V_V_read();
    void thread_src_y_V_V_blk_n();
    void thread_src_y_V_V_read();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp_32_i_i_i_cast_fu_231_p1();
    void thread_tmp_32_i_i_i_fu_226_p2();
    void thread_tmp_33_i_i_i_cast_fu_251_p1();
    void thread_tmp_33_i_i_i_fu_247_p1();
    void thread_tmp_34_i_i_i_fu_255_p2();
    void thread_tmp_35_i_i_i_fu_261_p2();
    void thread_tmp_38_fu_275_p1();
    void thread_tmp_39_fu_279_p4();
    void thread_tmp_47_fu_267_p3();
    void thread_tmp_i_i_i_cast_fu_205_p1();
    void thread_tmp_i_i_i_fu_196_p4();
    void thread_tmp_i_i_i_i_cast_fu_209_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
