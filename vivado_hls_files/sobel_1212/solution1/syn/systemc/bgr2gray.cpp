// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "bgr2gray.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic bgr2gray::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic bgr2gray::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> bgr2gray::ap_ST_fsm_state1 = "1";
const sc_lv<3> bgr2gray::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> bgr2gray::ap_ST_fsm_state29 = "100";
const bool bgr2gray::ap_const_boolean_1 = true;
const sc_lv<32> bgr2gray::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> bgr2gray::ap_const_lv32_1 = "1";
const bool bgr2gray::ap_const_boolean_0 = false;
const sc_lv<1> bgr2gray::ap_const_lv1_0 = "0";
const sc_lv<1> bgr2gray::ap_const_lv1_1 = "1";
const sc_lv<19> bgr2gray::ap_const_lv19_0 = "0000000000000000000";
const sc_lv<64> bgr2gray::ap_const_lv64_3FBD2F1A9FBE76C9 = "11111110111101001011110001101010011111101111100111011011001001";
const sc_lv<64> bgr2gray::ap_const_lv64_3FE2C8B439581062 = "11111111100010110010001011010000111001010110000001000001100010";
const sc_lv<64> bgr2gray::ap_const_lv64_3FD322D0E5604189 = "11111111010011001000101101000011100101011000000100000110001001";
const sc_lv<19> bgr2gray::ap_const_lv19_40000 = "1000000000000000000";
const sc_lv<19> bgr2gray::ap_const_lv19_1 = "1";
const sc_lv<32> bgr2gray::ap_const_lv32_8 = "1000";
const sc_lv<32> bgr2gray::ap_const_lv32_F = "1111";
const sc_lv<32> bgr2gray::ap_const_lv32_10 = "10000";
const sc_lv<32> bgr2gray::ap_const_lv32_17 = "10111";
const sc_lv<32> bgr2gray::ap_const_lv32_1E = "11110";
const sc_lv<9> bgr2gray::ap_const_lv9_181 = "110000001";
const sc_lv<8> bgr2gray::ap_const_lv8_7F = "1111111";
const sc_lv<32> bgr2gray::ap_const_lv32_18 = "11000";
const sc_lv<32> bgr2gray::ap_const_lv32_1F = "11111";
const sc_lv<32> bgr2gray::ap_const_lv32_2 = "10";

bgr2gray::bgr2gray(sc_module_name name) : sc_module(name), mVcdFile(0) {
    image_filter_fptrbkb_U14 = new image_filter_fptrbkb<1,1,64,32>("image_filter_fptrbkb_U14");
    image_filter_fptrbkb_U14->din0(tmp_32_reg_400);
    image_filter_fptrbkb_U14->dout(tmp_6_fu_124_p1);
    image_filter_daddcud_U15 = new image_filter_daddcud<1,5,64,64,64>("image_filter_daddcud_U15");
    image_filter_daddcud_U15->clk(ap_clk);
    image_filter_daddcud_U15->reset(ap_rst);
    image_filter_daddcud_U15->din0(tmp_24_reg_380);
    image_filter_daddcud_U15->din1(tmp_27_reg_385);
    image_filter_daddcud_U15->ce(grp_fu_127_ce);
    image_filter_daddcud_U15->dout(grp_fu_127_p2);
    image_filter_daddcud_U16 = new image_filter_daddcud<1,5,64,64,64>("image_filter_daddcud_U16");
    image_filter_daddcud_U16->clk(ap_clk);
    image_filter_daddcud_U16->reset(ap_rst);
    image_filter_daddcud_U16->din0(tmp_28_reg_390);
    image_filter_daddcud_U16->din1(tmp_31_reg_395);
    image_filter_daddcud_U16->ce(grp_fu_131_ce);
    image_filter_daddcud_U16->dout(grp_fu_131_p2);
    image_filter_dmuldEe_U17 = new image_filter_dmuldEe<1,6,64,64,64>("image_filter_dmuldEe_U17");
    image_filter_dmuldEe_U17->clk(ap_clk);
    image_filter_dmuldEe_U17->reset(ap_rst);
    image_filter_dmuldEe_U17->din0(tmp_s_reg_360);
    image_filter_dmuldEe_U17->din1(ap_var_for_const0);
    image_filter_dmuldEe_U17->ce(grp_fu_135_ce);
    image_filter_dmuldEe_U17->dout(grp_fu_135_p2);
    image_filter_dmuldEe_U18 = new image_filter_dmuldEe<1,6,64,64,64>("image_filter_dmuldEe_U18");
    image_filter_dmuldEe_U18->clk(ap_clk);
    image_filter_dmuldEe_U18->reset(ap_rst);
    image_filter_dmuldEe_U18->din0(tmp_26_reg_365);
    image_filter_dmuldEe_U18->din1(ap_var_for_const1);
    image_filter_dmuldEe_U18->ce(grp_fu_140_ce);
    image_filter_dmuldEe_U18->dout(grp_fu_140_p2);
    image_filter_dmuldEe_U19 = new image_filter_dmuldEe<1,6,64,64,64>("image_filter_dmuldEe_U19");
    image_filter_dmuldEe_U19->clk(ap_clk);
    image_filter_dmuldEe_U19->reset(ap_rst);
    image_filter_dmuldEe_U19->din0(tmp_30_reg_375);
    image_filter_dmuldEe_U19->din1(ap_var_for_const2);
    image_filter_dmuldEe_U19->ce(grp_fu_145_ce);
    image_filter_dmuldEe_U19->dout(grp_fu_145_p2);
    image_filter_sitoeOg_U20 = new image_filter_sitoeOg<1,6,32,64>("image_filter_sitoeOg_U20");
    image_filter_sitoeOg_U20->clk(ap_clk);
    image_filter_sitoeOg_U20->reset(ap_rst);
    image_filter_sitoeOg_U20->din0(grp_fu_150_p0);
    image_filter_sitoeOg_U20->ce(grp_fu_150_ce);
    image_filter_sitoeOg_U20->dout(grp_fu_150_p1);
    image_filter_sitoeOg_U21 = new image_filter_sitoeOg<1,6,32,64>("image_filter_sitoeOg_U21");
    image_filter_sitoeOg_U21->clk(ap_clk);
    image_filter_sitoeOg_U21->reset(ap_rst);
    image_filter_sitoeOg_U21->din0(grp_fu_153_p0);
    image_filter_sitoeOg_U21->ce(grp_fu_153_ce);
    image_filter_sitoeOg_U21->dout(grp_fu_153_p1);
    image_filter_sitoeOg_U22 = new image_filter_sitoeOg<1,6,32,64>("image_filter_sitoeOg_U22");
    image_filter_sitoeOg_U22->clk(ap_clk);
    image_filter_sitoeOg_U22->reset(ap_rst);
    image_filter_sitoeOg_U22->din0(grp_fu_156_p0);
    image_filter_sitoeOg_U22->ce(grp_fu_156_ce);
    image_filter_sitoeOg_U22->dout(grp_fu_156_p1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( src_V_V_empty_n );
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_326 );
    sensitive << ( ap_enable_reg_pp0_iter26 );
    sensitive << ( ap_reg_pp0_iter25_exitcond_reg_326 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( src_V_V_empty_n );
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_326 );
    sensitive << ( ap_enable_reg_pp0_iter26 );
    sensitive << ( ap_reg_pp0_iter25_exitcond_reg_326 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( src_V_V_empty_n );
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_326 );
    sensitive << ( ap_enable_reg_pp0_iter26 );
    sensitive << ( ap_reg_pp0_iter25_exitcond_reg_326 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter10);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter11);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter12);

    SC_METHOD(thread_ap_block_state15_pp0_stage0_iter13);

    SC_METHOD(thread_ap_block_state16_pp0_stage0_iter14);

    SC_METHOD(thread_ap_block_state17_pp0_stage0_iter15);

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter16);

    SC_METHOD(thread_ap_block_state19_pp0_stage0_iter17);

    SC_METHOD(thread_ap_block_state20_pp0_stage0_iter18);

    SC_METHOD(thread_ap_block_state21_pp0_stage0_iter19);

    SC_METHOD(thread_ap_block_state22_pp0_stage0_iter20);

    SC_METHOD(thread_ap_block_state23_pp0_stage0_iter21);

    SC_METHOD(thread_ap_block_state24_pp0_stage0_iter22);

    SC_METHOD(thread_ap_block_state25_pp0_stage0_iter23);

    SC_METHOD(thread_ap_block_state26_pp0_stage0_iter24);

    SC_METHOD(thread_ap_block_state27_pp0_stage0_iter25);

    SC_METHOD(thread_ap_block_state28_pp0_stage0_iter26);
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_reg_pp0_iter25_exitcond_reg_326 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( src_V_V_empty_n );
    sensitive << ( exitcond_reg_326 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter7);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_fu_159_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter26 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( ap_enable_reg_pp0_iter12 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_enable_reg_pp0_iter14 );
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( ap_enable_reg_pp0_iter17 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_enable_reg_pp0_iter19 );
    sensitive << ( ap_enable_reg_pp0_iter20 );
    sensitive << ( ap_enable_reg_pp0_iter21 );
    sensitive << ( ap_enable_reg_pp0_iter22 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( ap_enable_reg_pp0_iter24 );
    sensitive << ( ap_enable_reg_pp0_iter25 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_blue_V_fu_171_p1);
    sensitive << ( src_V_V_dout );

    SC_METHOD(thread_dst_V_V_blk_n);
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter26 );
    sensitive << ( ap_reg_pp0_iter25_exitcond_reg_326 );

    SC_METHOD(thread_dst_V_V_din);
    sensitive << ( ap_enable_reg_pp0_iter26 );
    sensitive << ( ap_reg_pp0_iter25_exitcond_reg_326 );
    sensitive << ( p_Val2_s_reg_416 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_dst_V_V_write);
    sensitive << ( ap_enable_reg_pp0_iter26 );
    sensitive << ( ap_reg_pp0_iter25_exitcond_reg_326 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_exitcond_fu_159_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_reg_113 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_grp_fu_127_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_131_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_135_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_140_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_145_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_150_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_150_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( blue_V_reg_335 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_grp_fu_153_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_153_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( green_V_reg_340 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_grp_fu_156_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_156_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_reg_pp0_iter6_red_V_reg_345 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    SC_METHOD(thread_i_3_fu_165_p2);
    sensitive << ( i_reg_113 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_isNeg_fu_247_p3);
    sensitive << ( sh_assign_fu_241_p2 );

    SC_METHOD(thread_loc_V_1_fu_221_p1);
    sensitive << ( p_Val2_1_fu_207_p1 );

    SC_METHOD(thread_p_Val2_1_fu_207_p1);
    sensitive << ( tmp_6_fu_124_p1 );

    SC_METHOD(thread_p_Val2_s_fu_318_p3);
    sensitive << ( isNeg_fu_247_p3 );
    sensitive << ( tmp_33_fu_304_p1 );
    sensitive << ( tmp_34_fu_308_p4 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_sh_assign_2_fu_264_p3);
    sensitive << ( sh_assign_fu_241_p2 );
    sensitive << ( isNeg_fu_247_p3 );
    sensitive << ( tmp_27_i_i_i_cast_fu_260_p1 );

    SC_METHOD(thread_sh_assign_2_i_i_i_ca_1_fu_276_p1);
    sensitive << ( sh_assign_2_fu_264_p3 );

    SC_METHOD(thread_sh_assign_2_i_i_i_ca_fu_272_p1);
    sensitive << ( sh_assign_2_fu_264_p3 );

    SC_METHOD(thread_sh_assign_fu_241_p2);
    sensitive << ( tmp_i_i_i_i_cast_fu_238_p1 );

    SC_METHOD(thread_src_V_V_blk_n);
    sensitive << ( src_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_reg_326 );

    SC_METHOD(thread_src_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_326 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp_26_i_i_i_cast2_fu_234_p1);
    sensitive << ( tmp_26_i_i_i_fu_225_p4 );

    SC_METHOD(thread_tmp_26_i_i_i_fu_225_p4);
    sensitive << ( loc_V_1_reg_411 );

    SC_METHOD(thread_tmp_27_i_i_i_cast_fu_260_p1);
    sensitive << ( tmp_27_i_i_i_fu_255_p2 );

    SC_METHOD(thread_tmp_27_i_i_i_fu_255_p2);
    sensitive << ( loc_V_reg_405 );

    SC_METHOD(thread_tmp_28_i_i_i_fu_280_p1);
    sensitive << ( sh_assign_2_i_i_i_ca_fu_272_p1 );

    SC_METHOD(thread_tmp_29_i_i_i_fu_284_p2);
    sensitive << ( tmp_26_i_i_i_fu_225_p4 );
    sensitive << ( sh_assign_2_i_i_i_ca_1_fu_276_p1 );

    SC_METHOD(thread_tmp_30_i_i_i_fu_290_p2);
    sensitive << ( tmp_26_i_i_i_cast2_fu_234_p1 );
    sensitive << ( tmp_28_i_i_i_fu_280_p1 );

    SC_METHOD(thread_tmp_33_fu_304_p1);
    sensitive << ( tmp_44_fu_296_p3 );

    SC_METHOD(thread_tmp_34_fu_308_p4);
    sensitive << ( tmp_30_i_i_i_fu_290_p2 );

    SC_METHOD(thread_tmp_44_fu_296_p3);
    sensitive << ( tmp_29_i_i_i_fu_284_p2 );

    SC_METHOD(thread_tmp_i_i_i_i_cast_fu_238_p1);
    sensitive << ( loc_V_reg_405 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter26 );
    sensitive << ( exitcond_fu_159_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter25 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter26 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter12 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter13 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter14 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter15 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter16 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter17 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter18 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter19 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter20 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter21 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter22 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter23 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter24 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter25 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "bgr2gray_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, src_V_V_dout, "(port)src_V_V_dout");
    sc_trace(mVcdFile, src_V_V_empty_n, "(port)src_V_V_empty_n");
    sc_trace(mVcdFile, src_V_V_read, "(port)src_V_V_read");
    sc_trace(mVcdFile, dst_V_V_din, "(port)dst_V_V_din");
    sc_trace(mVcdFile, dst_V_V_full_n, "(port)dst_V_V_full_n");
    sc_trace(mVcdFile, dst_V_V_write, "(port)dst_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, src_V_V_blk_n, "src_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, exitcond_reg_326, "exitcond_reg_326");
    sc_trace(mVcdFile, dst_V_V_blk_n, "dst_V_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter26, "ap_enable_reg_pp0_iter26");
    sc_trace(mVcdFile, ap_reg_pp0_iter25_exitcond_reg_326, "ap_reg_pp0_iter25_exitcond_reg_326");
    sc_trace(mVcdFile, i_reg_113, "i_reg_113");
    sc_trace(mVcdFile, exitcond_fu_159_p2, "exitcond_fu_159_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter7, "ap_block_state9_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter8, "ap_block_state10_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter9, "ap_block_state11_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter10, "ap_block_state12_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter11, "ap_block_state13_pp0_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter12, "ap_block_state14_pp0_stage0_iter12");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage0_iter13, "ap_block_state15_pp0_stage0_iter13");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage0_iter14, "ap_block_state16_pp0_stage0_iter14");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage0_iter15, "ap_block_state17_pp0_stage0_iter15");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter16, "ap_block_state18_pp0_stage0_iter16");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage0_iter17, "ap_block_state19_pp0_stage0_iter17");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage0_iter18, "ap_block_state20_pp0_stage0_iter18");
    sc_trace(mVcdFile, ap_block_state21_pp0_stage0_iter19, "ap_block_state21_pp0_stage0_iter19");
    sc_trace(mVcdFile, ap_block_state22_pp0_stage0_iter20, "ap_block_state22_pp0_stage0_iter20");
    sc_trace(mVcdFile, ap_block_state23_pp0_stage0_iter21, "ap_block_state23_pp0_stage0_iter21");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage0_iter22, "ap_block_state24_pp0_stage0_iter22");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage0_iter23, "ap_block_state25_pp0_stage0_iter23");
    sc_trace(mVcdFile, ap_block_state26_pp0_stage0_iter24, "ap_block_state26_pp0_stage0_iter24");
    sc_trace(mVcdFile, ap_block_state27_pp0_stage0_iter25, "ap_block_state27_pp0_stage0_iter25");
    sc_trace(mVcdFile, ap_block_state28_pp0_stage0_iter26, "ap_block_state28_pp0_stage0_iter26");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_reg_326, "ap_reg_pp0_iter1_exitcond_reg_326");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond_reg_326, "ap_reg_pp0_iter2_exitcond_reg_326");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_exitcond_reg_326, "ap_reg_pp0_iter3_exitcond_reg_326");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_exitcond_reg_326, "ap_reg_pp0_iter4_exitcond_reg_326");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_exitcond_reg_326, "ap_reg_pp0_iter5_exitcond_reg_326");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_exitcond_reg_326, "ap_reg_pp0_iter6_exitcond_reg_326");
    sc_trace(mVcdFile, ap_reg_pp0_iter7_exitcond_reg_326, "ap_reg_pp0_iter7_exitcond_reg_326");
    sc_trace(mVcdFile, ap_reg_pp0_iter8_exitcond_reg_326, "ap_reg_pp0_iter8_exitcond_reg_326");
    sc_trace(mVcdFile, ap_reg_pp0_iter9_exitcond_reg_326, "ap_reg_pp0_iter9_exitcond_reg_326");
    sc_trace(mVcdFile, ap_reg_pp0_iter10_exitcond_reg_326, "ap_reg_pp0_iter10_exitcond_reg_326");
    sc_trace(mVcdFile, ap_reg_pp0_iter11_exitcond_reg_326, "ap_reg_pp0_iter11_exitcond_reg_326");
    sc_trace(mVcdFile, ap_reg_pp0_iter12_exitcond_reg_326, "ap_reg_pp0_iter12_exitcond_reg_326");
    sc_trace(mVcdFile, ap_reg_pp0_iter13_exitcond_reg_326, "ap_reg_pp0_iter13_exitcond_reg_326");
    sc_trace(mVcdFile, ap_reg_pp0_iter14_exitcond_reg_326, "ap_reg_pp0_iter14_exitcond_reg_326");
    sc_trace(mVcdFile, ap_reg_pp0_iter15_exitcond_reg_326, "ap_reg_pp0_iter15_exitcond_reg_326");
    sc_trace(mVcdFile, ap_reg_pp0_iter16_exitcond_reg_326, "ap_reg_pp0_iter16_exitcond_reg_326");
    sc_trace(mVcdFile, ap_reg_pp0_iter17_exitcond_reg_326, "ap_reg_pp0_iter17_exitcond_reg_326");
    sc_trace(mVcdFile, ap_reg_pp0_iter18_exitcond_reg_326, "ap_reg_pp0_iter18_exitcond_reg_326");
    sc_trace(mVcdFile, ap_reg_pp0_iter19_exitcond_reg_326, "ap_reg_pp0_iter19_exitcond_reg_326");
    sc_trace(mVcdFile, ap_reg_pp0_iter20_exitcond_reg_326, "ap_reg_pp0_iter20_exitcond_reg_326");
    sc_trace(mVcdFile, ap_reg_pp0_iter21_exitcond_reg_326, "ap_reg_pp0_iter21_exitcond_reg_326");
    sc_trace(mVcdFile, ap_reg_pp0_iter22_exitcond_reg_326, "ap_reg_pp0_iter22_exitcond_reg_326");
    sc_trace(mVcdFile, ap_reg_pp0_iter23_exitcond_reg_326, "ap_reg_pp0_iter23_exitcond_reg_326");
    sc_trace(mVcdFile, ap_reg_pp0_iter24_exitcond_reg_326, "ap_reg_pp0_iter24_exitcond_reg_326");
    sc_trace(mVcdFile, i_3_fu_165_p2, "i_3_fu_165_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, blue_V_fu_171_p1, "blue_V_fu_171_p1");
    sc_trace(mVcdFile, blue_V_reg_335, "blue_V_reg_335");
    sc_trace(mVcdFile, green_V_reg_340, "green_V_reg_340");
    sc_trace(mVcdFile, red_V_reg_345, "red_V_reg_345");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_red_V_reg_345, "ap_reg_pp0_iter2_red_V_reg_345");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_red_V_reg_345, "ap_reg_pp0_iter3_red_V_reg_345");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_red_V_reg_345, "ap_reg_pp0_iter4_red_V_reg_345");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_red_V_reg_345, "ap_reg_pp0_iter5_red_V_reg_345");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_red_V_reg_345, "ap_reg_pp0_iter6_red_V_reg_345");
    sc_trace(mVcdFile, grp_fu_150_p1, "grp_fu_150_p1");
    sc_trace(mVcdFile, tmp_s_reg_360, "tmp_s_reg_360");
    sc_trace(mVcdFile, grp_fu_153_p1, "grp_fu_153_p1");
    sc_trace(mVcdFile, tmp_26_reg_365, "tmp_26_reg_365");
    sc_trace(mVcdFile, grp_fu_156_p1, "grp_fu_156_p1");
    sc_trace(mVcdFile, tmp_30_reg_375, "tmp_30_reg_375");
    sc_trace(mVcdFile, grp_fu_135_p2, "grp_fu_135_p2");
    sc_trace(mVcdFile, tmp_24_reg_380, "tmp_24_reg_380");
    sc_trace(mVcdFile, grp_fu_140_p2, "grp_fu_140_p2");
    sc_trace(mVcdFile, tmp_27_reg_385, "tmp_27_reg_385");
    sc_trace(mVcdFile, grp_fu_127_p2, "grp_fu_127_p2");
    sc_trace(mVcdFile, tmp_28_reg_390, "tmp_28_reg_390");
    sc_trace(mVcdFile, grp_fu_145_p2, "grp_fu_145_p2");
    sc_trace(mVcdFile, tmp_31_reg_395, "tmp_31_reg_395");
    sc_trace(mVcdFile, grp_fu_131_p2, "grp_fu_131_p2");
    sc_trace(mVcdFile, tmp_32_reg_400, "tmp_32_reg_400");
    sc_trace(mVcdFile, loc_V_reg_405, "loc_V_reg_405");
    sc_trace(mVcdFile, loc_V_1_fu_221_p1, "loc_V_1_fu_221_p1");
    sc_trace(mVcdFile, loc_V_1_reg_411, "loc_V_1_reg_411");
    sc_trace(mVcdFile, p_Val2_s_fu_318_p3, "p_Val2_s_fu_318_p3");
    sc_trace(mVcdFile, p_Val2_s_reg_416, "p_Val2_s_reg_416");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter11, "ap_enable_reg_pp0_iter11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter12, "ap_enable_reg_pp0_iter12");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter13, "ap_enable_reg_pp0_iter13");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter14, "ap_enable_reg_pp0_iter14");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter15, "ap_enable_reg_pp0_iter15");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter16, "ap_enable_reg_pp0_iter16");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter17, "ap_enable_reg_pp0_iter17");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter18, "ap_enable_reg_pp0_iter18");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter19, "ap_enable_reg_pp0_iter19");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter20, "ap_enable_reg_pp0_iter20");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter21, "ap_enable_reg_pp0_iter21");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter22, "ap_enable_reg_pp0_iter22");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter23, "ap_enable_reg_pp0_iter23");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter24, "ap_enable_reg_pp0_iter24");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter25, "ap_enable_reg_pp0_iter25");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, grp_fu_150_p0, "grp_fu_150_p0");
    sc_trace(mVcdFile, grp_fu_153_p0, "grp_fu_153_p0");
    sc_trace(mVcdFile, grp_fu_156_p0, "grp_fu_156_p0");
    sc_trace(mVcdFile, tmp_6_fu_124_p1, "tmp_6_fu_124_p1");
    sc_trace(mVcdFile, p_Val2_1_fu_207_p1, "p_Val2_1_fu_207_p1");
    sc_trace(mVcdFile, tmp_26_i_i_i_fu_225_p4, "tmp_26_i_i_i_fu_225_p4");
    sc_trace(mVcdFile, tmp_i_i_i_i_cast_fu_238_p1, "tmp_i_i_i_i_cast_fu_238_p1");
    sc_trace(mVcdFile, sh_assign_fu_241_p2, "sh_assign_fu_241_p2");
    sc_trace(mVcdFile, tmp_27_i_i_i_fu_255_p2, "tmp_27_i_i_i_fu_255_p2");
    sc_trace(mVcdFile, isNeg_fu_247_p3, "isNeg_fu_247_p3");
    sc_trace(mVcdFile, tmp_27_i_i_i_cast_fu_260_p1, "tmp_27_i_i_i_cast_fu_260_p1");
    sc_trace(mVcdFile, sh_assign_2_fu_264_p3, "sh_assign_2_fu_264_p3");
    sc_trace(mVcdFile, sh_assign_2_i_i_i_ca_fu_272_p1, "sh_assign_2_i_i_i_ca_fu_272_p1");
    sc_trace(mVcdFile, sh_assign_2_i_i_i_ca_1_fu_276_p1, "sh_assign_2_i_i_i_ca_1_fu_276_p1");
    sc_trace(mVcdFile, tmp_26_i_i_i_cast2_fu_234_p1, "tmp_26_i_i_i_cast2_fu_234_p1");
    sc_trace(mVcdFile, tmp_28_i_i_i_fu_280_p1, "tmp_28_i_i_i_fu_280_p1");
    sc_trace(mVcdFile, tmp_29_i_i_i_fu_284_p2, "tmp_29_i_i_i_fu_284_p2");
    sc_trace(mVcdFile, tmp_44_fu_296_p3, "tmp_44_fu_296_p3");
    sc_trace(mVcdFile, tmp_30_i_i_i_fu_290_p2, "tmp_30_i_i_i_fu_290_p2");
    sc_trace(mVcdFile, tmp_33_fu_304_p1, "tmp_33_fu_304_p1");
    sc_trace(mVcdFile, tmp_34_fu_308_p4, "tmp_34_fu_308_p4");
    sc_trace(mVcdFile, grp_fu_127_ce, "grp_fu_127_ce");
    sc_trace(mVcdFile, grp_fu_131_ce, "grp_fu_131_ce");
    sc_trace(mVcdFile, grp_fu_135_ce, "grp_fu_135_ce");
    sc_trace(mVcdFile, grp_fu_140_ce, "grp_fu_140_ce");
    sc_trace(mVcdFile, grp_fu_145_ce, "grp_fu_145_ce");
    sc_trace(mVcdFile, grp_fu_150_ce, "grp_fu_150_ce");
    sc_trace(mVcdFile, grp_fu_153_ce, "grp_fu_153_ce");
    sc_trace(mVcdFile, grp_fu_156_ce, "grp_fu_156_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

bgr2gray::~bgr2gray() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete image_filter_fptrbkb_U14;
    delete image_filter_daddcud_U15;
    delete image_filter_daddcud_U16;
    delete image_filter_dmuldEe_U17;
    delete image_filter_dmuldEe_U18;
    delete image_filter_dmuldEe_U19;
    delete image_filter_sitoeOg_U20;
    delete image_filter_sitoeOg_U21;
    delete image_filter_sitoeOg_U22;
}

void bgr2gray::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv64_3FBD2F1A9FBE76C9;
}

void bgr2gray::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv64_3FE2C8B439581062;
}

void bgr2gray::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv64_3FD322D0E5604189;
}

void bgr2gray::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter11 = ap_enable_reg_pp0_iter10.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter12 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter12 = ap_enable_reg_pp0_iter11.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter13 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter13 = ap_enable_reg_pp0_iter12.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter14 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter14 = ap_enable_reg_pp0_iter13.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter15 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter15 = ap_enable_reg_pp0_iter14.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter16 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter16 = ap_enable_reg_pp0_iter15.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter17 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter17 = ap_enable_reg_pp0_iter16.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter18 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter18 = ap_enable_reg_pp0_iter17.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter19 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter19 = ap_enable_reg_pp0_iter18.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter20 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter20 = ap_enable_reg_pp0_iter19.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter21 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter21 = ap_enable_reg_pp0_iter20.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter22 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter22 = ap_enable_reg_pp0_iter21.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter23 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter23 = ap_enable_reg_pp0_iter22.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter24 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter24 = ap_enable_reg_pp0_iter23.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter25 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter25 = ap_enable_reg_pp0_iter24.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter26 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter26 = ap_enable_reg_pp0_iter25.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter26 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_159_p2.read()))) {
        i_reg_113 = i_3_fu_165_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_reg_113 = ap_const_lv19_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        ap_reg_pp0_iter10_exitcond_reg_326 = ap_reg_pp0_iter9_exitcond_reg_326.read();
        ap_reg_pp0_iter11_exitcond_reg_326 = ap_reg_pp0_iter10_exitcond_reg_326.read();
        ap_reg_pp0_iter12_exitcond_reg_326 = ap_reg_pp0_iter11_exitcond_reg_326.read();
        ap_reg_pp0_iter13_exitcond_reg_326 = ap_reg_pp0_iter12_exitcond_reg_326.read();
        ap_reg_pp0_iter14_exitcond_reg_326 = ap_reg_pp0_iter13_exitcond_reg_326.read();
        ap_reg_pp0_iter15_exitcond_reg_326 = ap_reg_pp0_iter14_exitcond_reg_326.read();
        ap_reg_pp0_iter16_exitcond_reg_326 = ap_reg_pp0_iter15_exitcond_reg_326.read();
        ap_reg_pp0_iter17_exitcond_reg_326 = ap_reg_pp0_iter16_exitcond_reg_326.read();
        ap_reg_pp0_iter18_exitcond_reg_326 = ap_reg_pp0_iter17_exitcond_reg_326.read();
        ap_reg_pp0_iter19_exitcond_reg_326 = ap_reg_pp0_iter18_exitcond_reg_326.read();
        ap_reg_pp0_iter20_exitcond_reg_326 = ap_reg_pp0_iter19_exitcond_reg_326.read();
        ap_reg_pp0_iter21_exitcond_reg_326 = ap_reg_pp0_iter20_exitcond_reg_326.read();
        ap_reg_pp0_iter22_exitcond_reg_326 = ap_reg_pp0_iter21_exitcond_reg_326.read();
        ap_reg_pp0_iter23_exitcond_reg_326 = ap_reg_pp0_iter22_exitcond_reg_326.read();
        ap_reg_pp0_iter24_exitcond_reg_326 = ap_reg_pp0_iter23_exitcond_reg_326.read();
        ap_reg_pp0_iter25_exitcond_reg_326 = ap_reg_pp0_iter24_exitcond_reg_326.read();
        ap_reg_pp0_iter2_exitcond_reg_326 = ap_reg_pp0_iter1_exitcond_reg_326.read();
        ap_reg_pp0_iter2_red_V_reg_345 = red_V_reg_345.read();
        ap_reg_pp0_iter3_exitcond_reg_326 = ap_reg_pp0_iter2_exitcond_reg_326.read();
        ap_reg_pp0_iter3_red_V_reg_345 = ap_reg_pp0_iter2_red_V_reg_345.read();
        ap_reg_pp0_iter4_exitcond_reg_326 = ap_reg_pp0_iter3_exitcond_reg_326.read();
        ap_reg_pp0_iter4_red_V_reg_345 = ap_reg_pp0_iter3_red_V_reg_345.read();
        ap_reg_pp0_iter5_exitcond_reg_326 = ap_reg_pp0_iter4_exitcond_reg_326.read();
        ap_reg_pp0_iter5_red_V_reg_345 = ap_reg_pp0_iter4_red_V_reg_345.read();
        ap_reg_pp0_iter6_exitcond_reg_326 = ap_reg_pp0_iter5_exitcond_reg_326.read();
        ap_reg_pp0_iter6_red_V_reg_345 = ap_reg_pp0_iter5_red_V_reg_345.read();
        ap_reg_pp0_iter7_exitcond_reg_326 = ap_reg_pp0_iter6_exitcond_reg_326.read();
        ap_reg_pp0_iter8_exitcond_reg_326 = ap_reg_pp0_iter7_exitcond_reg_326.read();
        ap_reg_pp0_iter9_exitcond_reg_326 = ap_reg_pp0_iter8_exitcond_reg_326.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond_reg_326 = exitcond_reg_326.read();
        exitcond_reg_326 = exitcond_fu_159_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(exitcond_reg_326.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        blue_V_reg_335 = blue_V_fu_171_p1.read();
        green_V_reg_340 = src_V_V_dout.read().range(15, 8);
        red_V_reg_345 = src_V_V_dout.read().range(23, 16);
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter23_exitcond_reg_326.read()))) {
        loc_V_1_reg_411 = loc_V_1_fu_221_p1.read();
        loc_V_reg_405 = p_Val2_1_fu_207_p1.read().range(30, 23);
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter24_exitcond_reg_326.read()))) {
        p_Val2_s_reg_416 = p_Val2_s_fu_318_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter12_exitcond_reg_326.read()))) {
        tmp_24_reg_380 = grp_fu_135_p2.read();
        tmp_27_reg_385 = grp_fu_140_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter6_exitcond_reg_326.read()))) {
        tmp_26_reg_365 = grp_fu_153_p1.read();
        tmp_s_reg_360 = grp_fu_150_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter17_exitcond_reg_326.read()))) {
        tmp_28_reg_390 = grp_fu_127_p2.read();
        tmp_31_reg_395 = grp_fu_145_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter11_exitcond_reg_326.read()))) {
        tmp_30_reg_375 = grp_fu_156_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter22_exitcond_reg_326.read()))) {
        tmp_32_reg_400 = grp_fu_131_p2.read();
    }
}

void bgr2gray::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void bgr2gray::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void bgr2gray::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[2];
}

void bgr2gray::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bgr2gray::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_reg_326.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_V_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter26.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter25_exitcond_reg_326.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read())));
}

void bgr2gray::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_reg_326.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_V_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter26.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter25_exitcond_reg_326.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read())));
}

void bgr2gray::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_reg_326.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_V_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter26.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter25_exitcond_reg_326.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read())));
}

void bgr2gray::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void bgr2gray::thread_ap_block_state10_pp0_stage0_iter8() {
    ap_block_state10_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bgr2gray::thread_ap_block_state11_pp0_stage0_iter9() {
    ap_block_state11_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bgr2gray::thread_ap_block_state12_pp0_stage0_iter10() {
    ap_block_state12_pp0_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bgr2gray::thread_ap_block_state13_pp0_stage0_iter11() {
    ap_block_state13_pp0_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bgr2gray::thread_ap_block_state14_pp0_stage0_iter12() {
    ap_block_state14_pp0_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bgr2gray::thread_ap_block_state15_pp0_stage0_iter13() {
    ap_block_state15_pp0_stage0_iter13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bgr2gray::thread_ap_block_state16_pp0_stage0_iter14() {
    ap_block_state16_pp0_stage0_iter14 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bgr2gray::thread_ap_block_state17_pp0_stage0_iter15() {
    ap_block_state17_pp0_stage0_iter15 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bgr2gray::thread_ap_block_state18_pp0_stage0_iter16() {
    ap_block_state18_pp0_stage0_iter16 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bgr2gray::thread_ap_block_state19_pp0_stage0_iter17() {
    ap_block_state19_pp0_stage0_iter17 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bgr2gray::thread_ap_block_state20_pp0_stage0_iter18() {
    ap_block_state20_pp0_stage0_iter18 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bgr2gray::thread_ap_block_state21_pp0_stage0_iter19() {
    ap_block_state21_pp0_stage0_iter19 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bgr2gray::thread_ap_block_state22_pp0_stage0_iter20() {
    ap_block_state22_pp0_stage0_iter20 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bgr2gray::thread_ap_block_state23_pp0_stage0_iter21() {
    ap_block_state23_pp0_stage0_iter21 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bgr2gray::thread_ap_block_state24_pp0_stage0_iter22() {
    ap_block_state24_pp0_stage0_iter22 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bgr2gray::thread_ap_block_state25_pp0_stage0_iter23() {
    ap_block_state25_pp0_stage0_iter23 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bgr2gray::thread_ap_block_state26_pp0_stage0_iter24() {
    ap_block_state26_pp0_stage0_iter24 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bgr2gray::thread_ap_block_state27_pp0_stage0_iter25() {
    ap_block_state27_pp0_stage0_iter25 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bgr2gray::thread_ap_block_state28_pp0_stage0_iter26() {
    ap_block_state28_pp0_stage0_iter26 = (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter25_exitcond_reg_326.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read()));
}

void bgr2gray::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bgr2gray::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(exitcond_reg_326.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, src_V_V_empty_n.read()));
}

void bgr2gray::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bgr2gray::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bgr2gray::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bgr2gray::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bgr2gray::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bgr2gray::thread_ap_block_state9_pp0_stage0_iter7() {
    ap_block_state9_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bgr2gray::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_fu_159_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void bgr2gray::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void bgr2gray::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void bgr2gray::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void bgr2gray::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter13.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter14.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter15.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter16.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter17.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter18.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter19.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter20.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter21.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter22.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter23.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter24.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter25.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter26.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void bgr2gray::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void bgr2gray::thread_blue_V_fu_171_p1() {
    blue_V_fu_171_p1 = src_V_V_dout.read().range(8-1, 0);
}

void bgr2gray::thread_dst_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter26.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter25_exitcond_reg_326.read()))) {
        dst_V_V_blk_n = dst_V_V_full_n.read();
    } else {
        dst_V_V_blk_n = ap_const_logic_1;
    }
}

void bgr2gray::thread_dst_V_V_din() {
    dst_V_V_din = p_Val2_s_reg_416.read();
}

void bgr2gray::thread_dst_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter26.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter25_exitcond_reg_326.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        dst_V_V_write = ap_const_logic_1;
    } else {
        dst_V_V_write = ap_const_logic_0;
    }
}

void bgr2gray::thread_exitcond_fu_159_p2() {
    exitcond_fu_159_p2 = (!i_reg_113.read().is_01() || !ap_const_lv19_40000.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_113.read() == ap_const_lv19_40000);
}

void bgr2gray::thread_grp_fu_127_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_127_ce = ap_const_logic_1;
    } else {
        grp_fu_127_ce = ap_const_logic_0;
    }
}

void bgr2gray::thread_grp_fu_131_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_131_ce = ap_const_logic_1;
    } else {
        grp_fu_131_ce = ap_const_logic_0;
    }
}

void bgr2gray::thread_grp_fu_135_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_135_ce = ap_const_logic_1;
    } else {
        grp_fu_135_ce = ap_const_logic_0;
    }
}

void bgr2gray::thread_grp_fu_140_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_140_ce = ap_const_logic_1;
    } else {
        grp_fu_140_ce = ap_const_logic_0;
    }
}

void bgr2gray::thread_grp_fu_145_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_145_ce = ap_const_logic_1;
    } else {
        grp_fu_145_ce = ap_const_logic_0;
    }
}

void bgr2gray::thread_grp_fu_150_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_150_ce = ap_const_logic_1;
    } else {
        grp_fu_150_ce = ap_const_logic_0;
    }
}

void bgr2gray::thread_grp_fu_150_p0() {
    grp_fu_150_p0 = esl_zext<32,8>(blue_V_reg_335.read());
}

void bgr2gray::thread_grp_fu_153_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_153_ce = ap_const_logic_1;
    } else {
        grp_fu_153_ce = ap_const_logic_0;
    }
}

void bgr2gray::thread_grp_fu_153_p0() {
    grp_fu_153_p0 = esl_zext<32,8>(green_V_reg_340.read());
}

void bgr2gray::thread_grp_fu_156_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_156_ce = ap_const_logic_1;
    } else {
        grp_fu_156_ce = ap_const_logic_0;
    }
}

void bgr2gray::thread_grp_fu_156_p0() {
    grp_fu_156_p0 = esl_zext<32,8>(ap_reg_pp0_iter6_red_V_reg_345.read());
}

void bgr2gray::thread_i_3_fu_165_p2() {
    i_3_fu_165_p2 = (!i_reg_113.read().is_01() || !ap_const_lv19_1.is_01())? sc_lv<19>(): (sc_biguint<19>(i_reg_113.read()) + sc_biguint<19>(ap_const_lv19_1));
}

void bgr2gray::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void bgr2gray::thread_isNeg_fu_247_p3() {
    isNeg_fu_247_p3 = sh_assign_fu_241_p2.read().range(8, 8);
}

void bgr2gray::thread_loc_V_1_fu_221_p1() {
    loc_V_1_fu_221_p1 = p_Val2_1_fu_207_p1.read().range(23-1, 0);
}

void bgr2gray::thread_p_Val2_1_fu_207_p1() {
    p_Val2_1_fu_207_p1 = tmp_6_fu_124_p1.read();
}

void bgr2gray::thread_p_Val2_s_fu_318_p3() {
    p_Val2_s_fu_318_p3 = (!isNeg_fu_247_p3.read()[0].is_01())? sc_lv<8>(): ((isNeg_fu_247_p3.read()[0].to_bool())? tmp_33_fu_304_p1.read(): tmp_34_fu_308_p4.read());
}

void bgr2gray::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void bgr2gray::thread_sh_assign_2_fu_264_p3() {
    sh_assign_2_fu_264_p3 = (!isNeg_fu_247_p3.read()[0].is_01())? sc_lv<9>(): ((isNeg_fu_247_p3.read()[0].to_bool())? tmp_27_i_i_i_cast_fu_260_p1.read(): sh_assign_fu_241_p2.read());
}

void bgr2gray::thread_sh_assign_2_i_i_i_ca_1_fu_276_p1() {
    sh_assign_2_i_i_i_ca_1_fu_276_p1 = esl_sext<25,9>(sh_assign_2_fu_264_p3.read());
}

void bgr2gray::thread_sh_assign_2_i_i_i_ca_fu_272_p1() {
    sh_assign_2_i_i_i_ca_fu_272_p1 = esl_sext<32,9>(sh_assign_2_fu_264_p3.read());
}

void bgr2gray::thread_sh_assign_fu_241_p2() {
    sh_assign_fu_241_p2 = (!ap_const_lv9_181.is_01() || !tmp_i_i_i_i_cast_fu_238_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_181) + sc_biguint<9>(tmp_i_i_i_i_cast_fu_238_p1.read()));
}

void bgr2gray::thread_src_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_reg_326.read(), ap_const_lv1_0))) {
        src_V_V_blk_n = src_V_V_empty_n.read();
    } else {
        src_V_V_blk_n = ap_const_logic_1;
    }
}

void bgr2gray::thread_src_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_326.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        src_V_V_read = ap_const_logic_1;
    } else {
        src_V_V_read = ap_const_logic_0;
    }
}

void bgr2gray::thread_start_out() {
    start_out = real_start.read();
}

void bgr2gray::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void bgr2gray::thread_tmp_26_i_i_i_cast2_fu_234_p1() {
    tmp_26_i_i_i_cast2_fu_234_p1 = esl_zext<55,25>(tmp_26_i_i_i_fu_225_p4.read());
}

void bgr2gray::thread_tmp_26_i_i_i_fu_225_p4() {
    tmp_26_i_i_i_fu_225_p4 = esl_concat<24,1>(esl_concat<1,23>(ap_const_lv1_1, loc_V_1_reg_411.read()), ap_const_lv1_0);
}

void bgr2gray::thread_tmp_27_i_i_i_cast_fu_260_p1() {
    tmp_27_i_i_i_cast_fu_260_p1 = esl_sext<9,8>(tmp_27_i_i_i_fu_255_p2.read());
}

void bgr2gray::thread_tmp_27_i_i_i_fu_255_p2() {
    tmp_27_i_i_i_fu_255_p2 = (!ap_const_lv8_7F.is_01() || !loc_V_reg_405.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(loc_V_reg_405.read()));
}

void bgr2gray::thread_tmp_28_i_i_i_fu_280_p1() {
    tmp_28_i_i_i_fu_280_p1 = esl_zext<55,32>(sh_assign_2_i_i_i_ca_fu_272_p1.read());
}

void bgr2gray::thread_tmp_29_i_i_i_fu_284_p2() {
    tmp_29_i_i_i_fu_284_p2 = (!sh_assign_2_i_i_i_ca_1_fu_276_p1.read().is_01())? sc_lv<25>(): tmp_26_i_i_i_fu_225_p4.read() >> (unsigned short)sh_assign_2_i_i_i_ca_1_fu_276_p1.read().to_uint();
}

void bgr2gray::thread_tmp_30_i_i_i_fu_290_p2() {
    tmp_30_i_i_i_fu_290_p2 = (!tmp_28_i_i_i_fu_280_p1.read().is_01())? sc_lv<55>(): tmp_26_i_i_i_cast2_fu_234_p1.read() << (unsigned short)tmp_28_i_i_i_fu_280_p1.read().to_uint();
}

void bgr2gray::thread_tmp_33_fu_304_p1() {
    tmp_33_fu_304_p1 = esl_zext<8,1>(tmp_44_fu_296_p3.read());
}

void bgr2gray::thread_tmp_34_fu_308_p4() {
    tmp_34_fu_308_p4 = tmp_30_i_i_i_fu_290_p2.read().range(31, 24);
}

void bgr2gray::thread_tmp_44_fu_296_p3() {
    tmp_44_fu_296_p3 = tmp_29_i_i_i_fu_284_p2.read().range(24, 24);
}

void bgr2gray::thread_tmp_i_i_i_i_cast_fu_238_p1() {
    tmp_i_i_i_i_cast_fu_238_p1 = esl_zext<9,8>(loc_V_reg_405.read());
}

void bgr2gray::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter26.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter25.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_fu_159_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter26.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter25.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_fu_159_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state29;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

