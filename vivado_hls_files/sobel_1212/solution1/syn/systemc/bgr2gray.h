// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _bgr2gray_HH_
#define _bgr2gray_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "image_filter_fptrbkb.h"
#include "image_filter_daddcud.h"
#include "image_filter_dmuldEe.h"
#include "image_filter_sitoeOg.h"

namespace ap_rtl {

struct bgr2gray : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<32> > src_V_V_dout;
    sc_in< sc_logic > src_V_V_empty_n;
    sc_out< sc_logic > src_V_V_read;
    sc_out< sc_lv<8> > dst_V_V_din;
    sc_in< sc_logic > dst_V_V_full_n;
    sc_out< sc_logic > dst_V_V_write;
    sc_signal< sc_lv<64> > ap_var_for_const0;
    sc_signal< sc_lv<64> > ap_var_for_const1;
    sc_signal< sc_lv<64> > ap_var_for_const2;


    // Module declarations
    bgr2gray(sc_module_name name);
    SC_HAS_PROCESS(bgr2gray);

    ~bgr2gray();

    sc_trace_file* mVcdFile;

    image_filter_fptrbkb<1,1,64,32>* image_filter_fptrbkb_U14;
    image_filter_daddcud<1,5,64,64,64>* image_filter_daddcud_U15;
    image_filter_daddcud<1,5,64,64,64>* image_filter_daddcud_U16;
    image_filter_dmuldEe<1,6,64,64,64>* image_filter_dmuldEe_U17;
    image_filter_dmuldEe<1,6,64,64,64>* image_filter_dmuldEe_U18;
    image_filter_dmuldEe<1,6,64,64,64>* image_filter_dmuldEe_U19;
    image_filter_sitoeOg<1,6,32,64>* image_filter_sitoeOg_U20;
    image_filter_sitoeOg<1,6,32,64>* image_filter_sitoeOg_U21;
    image_filter_sitoeOg<1,6,32,64>* image_filter_sitoeOg_U22;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > src_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_reg_326;
    sc_signal< sc_logic > dst_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter26;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter25_exitcond_reg_326;
    sc_signal< sc_lv<19> > i_reg_113;
    sc_signal< sc_lv<1> > exitcond_fu_159_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter9;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter10;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter11;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter12;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter13;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter14;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter15;
    sc_signal< bool > ap_block_state18_pp0_stage0_iter16;
    sc_signal< bool > ap_block_state19_pp0_stage0_iter17;
    sc_signal< bool > ap_block_state20_pp0_stage0_iter18;
    sc_signal< bool > ap_block_state21_pp0_stage0_iter19;
    sc_signal< bool > ap_block_state22_pp0_stage0_iter20;
    sc_signal< bool > ap_block_state23_pp0_stage0_iter21;
    sc_signal< bool > ap_block_state24_pp0_stage0_iter22;
    sc_signal< bool > ap_block_state25_pp0_stage0_iter23;
    sc_signal< bool > ap_block_state26_pp0_stage0_iter24;
    sc_signal< bool > ap_block_state27_pp0_stage0_iter25;
    sc_signal< bool > ap_block_state28_pp0_stage0_iter26;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_exitcond_reg_326;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter2_exitcond_reg_326;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter3_exitcond_reg_326;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter4_exitcond_reg_326;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter5_exitcond_reg_326;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter6_exitcond_reg_326;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter7_exitcond_reg_326;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter8_exitcond_reg_326;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter9_exitcond_reg_326;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter10_exitcond_reg_326;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter11_exitcond_reg_326;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter12_exitcond_reg_326;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter13_exitcond_reg_326;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter14_exitcond_reg_326;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter15_exitcond_reg_326;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter16_exitcond_reg_326;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter17_exitcond_reg_326;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter18_exitcond_reg_326;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter19_exitcond_reg_326;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter20_exitcond_reg_326;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter21_exitcond_reg_326;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter22_exitcond_reg_326;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter23_exitcond_reg_326;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter24_exitcond_reg_326;
    sc_signal< sc_lv<19> > i_3_fu_165_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<8> > blue_V_fu_171_p1;
    sc_signal< sc_lv<8> > blue_V_reg_335;
    sc_signal< sc_lv<8> > green_V_reg_340;
    sc_signal< sc_lv<8> > red_V_reg_345;
    sc_signal< sc_lv<8> > ap_reg_pp0_iter2_red_V_reg_345;
    sc_signal< sc_lv<8> > ap_reg_pp0_iter3_red_V_reg_345;
    sc_signal< sc_lv<8> > ap_reg_pp0_iter4_red_V_reg_345;
    sc_signal< sc_lv<8> > ap_reg_pp0_iter5_red_V_reg_345;
    sc_signal< sc_lv<8> > ap_reg_pp0_iter6_red_V_reg_345;
    sc_signal< sc_lv<64> > grp_fu_150_p1;
    sc_signal< sc_lv<64> > tmp_s_reg_360;
    sc_signal< sc_lv<64> > grp_fu_153_p1;
    sc_signal< sc_lv<64> > tmp_26_reg_365;
    sc_signal< sc_lv<64> > grp_fu_156_p1;
    sc_signal< sc_lv<64> > tmp_30_reg_375;
    sc_signal< sc_lv<64> > grp_fu_135_p2;
    sc_signal< sc_lv<64> > tmp_24_reg_380;
    sc_signal< sc_lv<64> > grp_fu_140_p2;
    sc_signal< sc_lv<64> > tmp_27_reg_385;
    sc_signal< sc_lv<64> > grp_fu_127_p2;
    sc_signal< sc_lv<64> > tmp_28_reg_390;
    sc_signal< sc_lv<64> > grp_fu_145_p2;
    sc_signal< sc_lv<64> > tmp_31_reg_395;
    sc_signal< sc_lv<64> > grp_fu_131_p2;
    sc_signal< sc_lv<64> > tmp_32_reg_400;
    sc_signal< sc_lv<8> > loc_V_reg_405;
    sc_signal< sc_lv<23> > loc_V_1_fu_221_p1;
    sc_signal< sc_lv<23> > loc_V_1_reg_411;
    sc_signal< sc_lv<8> > p_Val2_s_fu_318_p3;
    sc_signal< sc_lv<8> > p_Val2_s_reg_416;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter10;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter11;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter12;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter13;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter14;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter15;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter16;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter17;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter18;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter19;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter20;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter21;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter22;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter23;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter24;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter25;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<32> > grp_fu_150_p0;
    sc_signal< sc_lv<32> > grp_fu_153_p0;
    sc_signal< sc_lv<32> > grp_fu_156_p0;
    sc_signal< sc_lv<32> > tmp_6_fu_124_p1;
    sc_signal< sc_lv<32> > p_Val2_1_fu_207_p1;
    sc_signal< sc_lv<25> > tmp_26_i_i_i_fu_225_p4;
    sc_signal< sc_lv<9> > tmp_i_i_i_i_cast_fu_238_p1;
    sc_signal< sc_lv<9> > sh_assign_fu_241_p2;
    sc_signal< sc_lv<8> > tmp_27_i_i_i_fu_255_p2;
    sc_signal< sc_lv<1> > isNeg_fu_247_p3;
    sc_signal< sc_lv<9> > tmp_27_i_i_i_cast_fu_260_p1;
    sc_signal< sc_lv<9> > sh_assign_2_fu_264_p3;
    sc_signal< sc_lv<32> > sh_assign_2_i_i_i_ca_fu_272_p1;
    sc_signal< sc_lv<25> > sh_assign_2_i_i_i_ca_1_fu_276_p1;
    sc_signal< sc_lv<55> > tmp_26_i_i_i_cast2_fu_234_p1;
    sc_signal< sc_lv<55> > tmp_28_i_i_i_fu_280_p1;
    sc_signal< sc_lv<25> > tmp_29_i_i_i_fu_284_p2;
    sc_signal< sc_lv<1> > tmp_44_fu_296_p3;
    sc_signal< sc_lv<55> > tmp_30_i_i_i_fu_290_p2;
    sc_signal< sc_lv<8> > tmp_33_fu_304_p1;
    sc_signal< sc_lv<8> > tmp_34_fu_308_p4;
    sc_signal< sc_logic > grp_fu_127_ce;
    sc_signal< sc_logic > grp_fu_131_ce;
    sc_signal< sc_logic > grp_fu_135_ce;
    sc_signal< sc_logic > grp_fu_140_ce;
    sc_signal< sc_logic > grp_fu_145_ce;
    sc_signal< sc_logic > grp_fu_150_ce;
    sc_signal< sc_logic > grp_fu_153_ce;
    sc_signal< sc_logic > grp_fu_156_ce;
    sc_signal< sc_logic > ap_CS_fsm_state29;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state29;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<19> ap_const_lv19_0;
    static const sc_lv<64> ap_const_lv64_3FBD2F1A9FBE76C9;
    static const sc_lv<64> ap_const_lv64_3FE2C8B439581062;
    static const sc_lv<64> ap_const_lv64_3FD322D0E5604189;
    static const sc_lv<19> ap_const_lv19_40000;
    static const sc_lv<19> ap_const_lv19_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<9> ap_const_lv9_181;
    static const sc_lv<8> ap_const_lv8_7F;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state29();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state10_pp0_stage0_iter8();
    void thread_ap_block_state11_pp0_stage0_iter9();
    void thread_ap_block_state12_pp0_stage0_iter10();
    void thread_ap_block_state13_pp0_stage0_iter11();
    void thread_ap_block_state14_pp0_stage0_iter12();
    void thread_ap_block_state15_pp0_stage0_iter13();
    void thread_ap_block_state16_pp0_stage0_iter14();
    void thread_ap_block_state17_pp0_stage0_iter15();
    void thread_ap_block_state18_pp0_stage0_iter16();
    void thread_ap_block_state19_pp0_stage0_iter17();
    void thread_ap_block_state20_pp0_stage0_iter18();
    void thread_ap_block_state21_pp0_stage0_iter19();
    void thread_ap_block_state22_pp0_stage0_iter20();
    void thread_ap_block_state23_pp0_stage0_iter21();
    void thread_ap_block_state24_pp0_stage0_iter22();
    void thread_ap_block_state25_pp0_stage0_iter23();
    void thread_ap_block_state26_pp0_stage0_iter24();
    void thread_ap_block_state27_pp0_stage0_iter25();
    void thread_ap_block_state28_pp0_stage0_iter26();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_block_state7_pp0_stage0_iter5();
    void thread_ap_block_state8_pp0_stage0_iter6();
    void thread_ap_block_state9_pp0_stage0_iter7();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_blue_V_fu_171_p1();
    void thread_dst_V_V_blk_n();
    void thread_dst_V_V_din();
    void thread_dst_V_V_write();
    void thread_exitcond_fu_159_p2();
    void thread_grp_fu_127_ce();
    void thread_grp_fu_131_ce();
    void thread_grp_fu_135_ce();
    void thread_grp_fu_140_ce();
    void thread_grp_fu_145_ce();
    void thread_grp_fu_150_ce();
    void thread_grp_fu_150_p0();
    void thread_grp_fu_153_ce();
    void thread_grp_fu_153_p0();
    void thread_grp_fu_156_ce();
    void thread_grp_fu_156_p0();
    void thread_i_3_fu_165_p2();
    void thread_internal_ap_ready();
    void thread_isNeg_fu_247_p3();
    void thread_loc_V_1_fu_221_p1();
    void thread_p_Val2_1_fu_207_p1();
    void thread_p_Val2_s_fu_318_p3();
    void thread_real_start();
    void thread_sh_assign_2_fu_264_p3();
    void thread_sh_assign_2_i_i_i_ca_1_fu_276_p1();
    void thread_sh_assign_2_i_i_i_ca_fu_272_p1();
    void thread_sh_assign_fu_241_p2();
    void thread_src_V_V_blk_n();
    void thread_src_V_V_read();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp_26_i_i_i_cast2_fu_234_p1();
    void thread_tmp_26_i_i_i_fu_225_p4();
    void thread_tmp_27_i_i_i_cast_fu_260_p1();
    void thread_tmp_27_i_i_i_fu_255_p2();
    void thread_tmp_28_i_i_i_fu_280_p1();
    void thread_tmp_29_i_i_i_fu_284_p2();
    void thread_tmp_30_i_i_i_fu_290_p2();
    void thread_tmp_33_fu_304_p1();
    void thread_tmp_34_fu_308_p4();
    void thread_tmp_44_fu_296_p3();
    void thread_tmp_i_i_i_i_cast_fu_238_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
