// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "gaussianBlur.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic gaussianBlur::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic gaussianBlur::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> gaussianBlur::ap_ST_fsm_state1 = "1";
const sc_lv<7> gaussianBlur::ap_ST_fsm_state2 = "10";
const sc_lv<7> gaussianBlur::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<7> gaussianBlur::ap_ST_fsm_pp0_stage1 = "1000";
const sc_lv<7> gaussianBlur::ap_ST_fsm_pp0_stage2 = "10000";
const sc_lv<7> gaussianBlur::ap_ST_fsm_state10 = "100000";
const sc_lv<7> gaussianBlur::ap_ST_fsm_state11 = "1000000";
const bool gaussianBlur::ap_const_boolean_1 = true;
const sc_lv<32> gaussianBlur::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> gaussianBlur::ap_const_lv32_3 = "11";
const bool gaussianBlur::ap_const_boolean_0 = false;
const sc_lv<1> gaussianBlur::ap_const_lv1_0 = "0";
const sc_lv<32> gaussianBlur::ap_const_lv32_2 = "10";
const sc_lv<1> gaussianBlur::ap_const_lv1_1 = "1";
const sc_lv<32> gaussianBlur::ap_const_lv32_6 = "110";
const sc_lv<32> gaussianBlur::ap_const_lv32_1 = "1";
const sc_lv<32> gaussianBlur::ap_const_lv32_4 = "100";
const sc_lv<4> gaussianBlur::ap_const_lv4_0 = "0000";
const sc_lv<19> gaussianBlur::ap_const_lv19_1 = "1";
const sc_lv<10> gaussianBlur::ap_const_lv10_0 = "0000000000";
const sc_lv<32> gaussianBlur::ap_const_lv32_5 = "101";
const sc_lv<8> gaussianBlur::ap_const_lv8_0 = "00000000";
const sc_lv<4> gaussianBlur::ap_const_lv4_9 = "1001";
const sc_lv<4> gaussianBlur::ap_const_lv4_1 = "1";
const sc_lv<19> gaussianBlur::ap_const_lv19_40001 = "1000000000000000001";
const sc_lv<32> gaussianBlur::ap_const_lv32_1F = "11111";
const sc_lv<31> gaussianBlur::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> gaussianBlur::ap_const_lv32_1FF = "111111111";
const sc_lv<19> gaussianBlur::ap_const_lv19_201 = "1000000001";
const sc_lv<5> gaussianBlur::ap_const_lv5_0 = "00000";
const sc_lv<3> gaussianBlur::ap_const_lv3_0 = "000";
const sc_lv<32> gaussianBlur::ap_const_lv32_8 = "1000";
const sc_lv<32> gaussianBlur::ap_const_lv32_F = "1111";
const sc_lv<10> gaussianBlur::ap_const_lv10_201 = "1000000001";
const sc_lv<10> gaussianBlur::ap_const_lv10_1 = "1";
const sc_lv<15> gaussianBlur::ap_const_lv15_25 = "100101";

gaussianBlur::gaussianBlur(sc_module_name name) : sc_module(name), mVcdFile(0) {
    lineBuff_val_0_V_U = new gaussianBlur_linefYi("lineBuff_val_0_V_U");
    lineBuff_val_0_V_U->clk(ap_clk);
    lineBuff_val_0_V_U->reset(ap_rst);
    lineBuff_val_0_V_U->address0(lineBuff_val_0_V_address0);
    lineBuff_val_0_V_U->ce0(lineBuff_val_0_V_ce0);
    lineBuff_val_0_V_U->we0(lineBuff_val_0_V_we0);
    lineBuff_val_0_V_U->d0(lineBuff_val_1_V_q0);
    lineBuff_val_0_V_U->q0(lineBuff_val_0_V_q0);
    lineBuff_val_0_V_U->address1(lineBuff_val_0_V_address1);
    lineBuff_val_0_V_U->ce1(lineBuff_val_0_V_ce1);
    lineBuff_val_0_V_U->q1(lineBuff_val_0_V_q1);
    lineBuff_val_1_V_U = new gaussianBlur_linefYi("lineBuff_val_1_V_U");
    lineBuff_val_1_V_U->clk(ap_clk);
    lineBuff_val_1_V_U->reset(ap_rst);
    lineBuff_val_1_V_U->address0(lineBuff_val_1_V_address0);
    lineBuff_val_1_V_U->ce0(lineBuff_val_1_V_ce0);
    lineBuff_val_1_V_U->we0(lineBuff_val_1_V_we0);
    lineBuff_val_1_V_U->d0(lineBuff_val_2_V_q0);
    lineBuff_val_1_V_U->q0(lineBuff_val_1_V_q0);
    lineBuff_val_1_V_U->address1(lineBuff_val_1_V_address1);
    lineBuff_val_1_V_U->ce1(lineBuff_val_1_V_ce1);
    lineBuff_val_1_V_U->q1(lineBuff_val_1_V_q1);
    lineBuff_val_2_V_U = new gaussianBlur_linefYi("lineBuff_val_2_V_U");
    lineBuff_val_2_V_U->clk(ap_clk);
    lineBuff_val_2_V_U->reset(ap_rst);
    lineBuff_val_2_V_U->address0(lineBuff_val_2_V_address0);
    lineBuff_val_2_V_U->ce0(lineBuff_val_2_V_ce0);
    lineBuff_val_2_V_U->we0(lineBuff_val_2_V_we0);
    lineBuff_val_2_V_U->d0(src_V_V_dout);
    lineBuff_val_2_V_U->q0(lineBuff_val_2_V_q0);
    lineBuff_val_2_V_U->address1(lineBuff_val_2_V_address1);
    lineBuff_val_2_V_U->ce1(lineBuff_val_2_V_ce1);
    lineBuff_val_2_V_U->q1(lineBuff_val_2_V_q1);
    image_filter_mac_ibs_U29 = new image_filter_mac_ibs<1,1,8,7,14,15>("image_filter_mac_ibs_U29");
    image_filter_mac_ibs_U29->din0(grp_fu_825_p0);
    image_filter_mac_ibs_U29->din1(grp_fu_825_p1);
    image_filter_mac_ibs_U29->din2(grp_fu_825_p2);
    image_filter_mac_ibs_U29->dout(grp_fu_825_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_accumulator_V_2_2_fu_789_p2);
    sensitive << ( tmp4_fu_783_p2 );
    sensitive << ( tmp1_cast_fu_763_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( dst_x_V_V_full_n );
    sensitive << ( dst_y_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_reg_pp0_iter1_tmp_23_reg_883 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( dst_x_V_V_full_n );
    sensitive << ( dst_y_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_reg_pp0_iter1_tmp_23_reg_883 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( dst_x_V_V_full_n );
    sensitive << ( dst_y_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_reg_pp0_iter1_tmp_23_reg_883 );

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);
    sensitive << ( src_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond3_reg_842 );

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( src_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond3_reg_842 );

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state11);
    sensitive << ( dst_x_V_V_full_n );
    sensitive << ( dst_y_V_V_full_n );
    sensitive << ( exitcond_fu_813_p2 );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage1_iter0);
    sensitive << ( src_V_V_empty_n );
    sensitive << ( exitcond3_reg_842 );

    SC_METHOD(thread_ap_block_state5_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state7_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state8_pp0_stage2_iter1);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter2);
    sensitive << ( dst_x_V_V_full_n );
    sensitive << ( dst_y_V_V_full_n );
    sensitive << ( ap_reg_pp0_iter1_tmp_23_reg_883 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( exitcond3_fu_354_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( dst_x_V_V_full_n );
    sensitive << ( dst_y_V_V_full_n );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_813_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_col_assign_phi_fu_289_p4);
    sensitive << ( exitcond3_reg_842 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( col_assign_reg_285 );
    sensitive << ( idxCol_1_reg_928 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_countWait_phi_fu_323_p4);
    sensitive << ( exitcond3_reg_842 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( countWait_reg_319 );
    sensitive << ( phitmp_reg_938 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_idxRow_phi_fu_300_p4);
    sensitive << ( exitcond3_reg_842 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( idxRow_reg_296 );
    sensitive << ( idxRow_1_reg_878 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_pixConvolved_phi_fu_311_p4);
    sensitive << ( pixConvolved_reg_307 );
    sensitive << ( ap_reg_pp0_iter1_exitcond3_reg_842 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( pixConvolved_2_reg_933 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_col_assign_7_0_2_fu_455_p2);
    sensitive << ( ap_phi_mux_pixConvolved_phi_fu_311_p4 );

    SC_METHOD(thread_countWait_4_fu_819_p2);
    sensitive << ( countWait_1_reg_331 );

    SC_METHOD(thread_dst_x_V_V_blk_n);
    sensitive << ( dst_x_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_reg_pp0_iter1_tmp_23_reg_883 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_813_p2 );

    SC_METHOD(thread_dst_x_V_V_din);
    sensitive << ( dst_x_V_V_full_n );
    sensitive << ( dst_y_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_reg_pp0_iter1_tmp_23_reg_883 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_813_p2 );
    sensitive << ( tmp_V_fu_805_p3 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_dst_x_V_V_write);
    sensitive << ( dst_x_V_V_full_n );
    sensitive << ( dst_y_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_reg_pp0_iter1_tmp_23_reg_883 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_813_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_dst_y_V_V_blk_n);
    sensitive << ( dst_y_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_reg_pp0_iter1_tmp_23_reg_883 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_813_p2 );

    SC_METHOD(thread_dst_y_V_V_din);
    sensitive << ( dst_x_V_V_full_n );
    sensitive << ( dst_y_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_reg_pp0_iter1_tmp_23_reg_883 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_813_p2 );
    sensitive << ( tmp_V_fu_805_p3 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_dst_y_V_V_write);
    sensitive << ( dst_x_V_V_full_n );
    sensitive << ( dst_y_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_reg_pp0_iter1_tmp_23_reg_883 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_813_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_exitcond2_fu_342_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_274 );

    SC_METHOD(thread_exitcond3_fu_354_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_countWait_phi_fu_323_p4 );

    SC_METHOD(thread_exitcond_fu_813_p2);
    sensitive << ( dst_x_V_V_full_n );
    sensitive << ( dst_y_V_V_full_n );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_813_p2 );
    sensitive << ( countWait_1_reg_331 );

    SC_METHOD(thread_grp_fu_825_p0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond3_reg_842 );
    sensitive << ( ap_reg_pp0_iter1_or_cond_reg_861 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( grp_fu_825_p00 );

    SC_METHOD(thread_grp_fu_825_p00);
    sensitive << ( lineBuff_val_1_V_lo_4_reg_966 );

    SC_METHOD(thread_grp_fu_825_p1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond3_reg_842 );
    sensitive << ( ap_reg_pp0_iter1_or_cond_reg_861 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_grp_fu_825_p2);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond3_reg_842 );
    sensitive << ( ap_reg_pp0_iter1_or_cond_reg_861 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( grp_fu_825_p20 );

    SC_METHOD(thread_grp_fu_825_p20);
    sensitive << ( val_V_3_1_2_fu_633_p2 );

    SC_METHOD(thread_i_2_fu_348_p2);
    sensitive << ( i_reg_274 );

    SC_METHOD(thread_icmp3_fu_392_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond3_fu_354_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_40_fu_382_p4 );

    SC_METHOD(thread_icmp_fu_376_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond3_fu_354_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_39_fu_366_p4 );

    SC_METHOD(thread_idxCol_1_fu_473_p3);
    sensitive << ( tmp_21_reg_867 );
    sensitive << ( idxCol_reg_873 );

    SC_METHOD(thread_idxCol_fu_410_p2);
    sensitive << ( ap_phi_mux_col_assign_phi_fu_289_p4 );

    SC_METHOD(thread_idxRow_1_fu_422_p3);
    sensitive << ( tmp_21_fu_404_p2 );
    sensitive << ( ap_phi_mux_idxRow_phi_fu_300_p4 );
    sensitive << ( idxRow_4_fu_416_p2 );

    SC_METHOD(thread_idxRow_4_fu_416_p2);
    sensitive << ( ap_phi_mux_idxRow_phi_fu_300_p4 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( dst_x_V_V_full_n );
    sensitive << ( dst_y_V_V_full_n );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_813_p2 );

    SC_METHOD(thread_lineBuff_val_0_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_s_reg_846 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_118_0_1_reg_892 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_20_fu_436_p1 );

    SC_METHOD(thread_lineBuff_val_0_V_address1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_118_0_2_fu_461_p1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_lineBuff_val_0_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_lineBuff_val_0_V_ce1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_lineBuff_val_0_V_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond3_reg_842 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_lineBuff_val_1_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_s_fu_360_p1 );
    sensitive << ( lineBuff_val_1_V_ad_reg_851 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_118_0_1_fu_449_p1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_lineBuff_val_1_V_address1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_118_0_2_reg_897 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_20_fu_436_p1 );

    SC_METHOD(thread_lineBuff_val_1_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_lineBuff_val_1_V_ce1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_lineBuff_val_1_V_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond3_reg_842 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_lineBuff_val_2_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_s_fu_360_p1 );
    sensitive << ( lineBuff_val_2_V_ad_reg_856 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_118_0_1_fu_449_p1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_lineBuff_val_2_V_address1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_118_0_2_reg_897 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_20_fu_436_p1 );

    SC_METHOD(thread_lineBuff_val_2_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_lineBuff_val_2_V_ce1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_lineBuff_val_2_V_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond3_reg_842 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_or_cond_fu_398_p2);
    sensitive << ( icmp_fu_376_p2 );
    sensitive << ( icmp3_fu_392_p2 );

    SC_METHOD(thread_p_shl10_fu_629_p1);
    sensitive << ( tmp_32_fu_621_p3 );

    SC_METHOD(thread_p_shl11_fu_726_p1);
    sensitive << ( tmp_33_fu_719_p3 );

    SC_METHOD(thread_p_shl12_fu_737_p1);
    sensitive << ( tmp_34_fu_730_p3 );

    SC_METHOD(thread_p_shl13_fu_650_p1);
    sensitive << ( tmp_35_fu_643_p3 );

    SC_METHOD(thread_p_shl14_fu_661_p1);
    sensitive << ( tmp_36_fu_654_p3 );

    SC_METHOD(thread_p_shl15_fu_691_p1);
    sensitive << ( tmp_38_fu_683_p3 );

    SC_METHOD(thread_p_shl1_fu_499_p1);
    sensitive << ( tmp_fu_492_p3 );

    SC_METHOD(thread_p_shl2_fu_510_p1);
    sensitive << ( tmp_22_fu_503_p3 );

    SC_METHOD(thread_p_shl3_fu_528_p1);
    sensitive << ( tmp_25_fu_520_p3 );

    SC_METHOD(thread_p_shl4_fu_540_p1);
    sensitive << ( tmp_26_fu_532_p3 );

    SC_METHOD(thread_p_shl5_fu_557_p1);
    sensitive << ( tmp_27_fu_550_p3 );

    SC_METHOD(thread_p_shl6_fu_568_p1);
    sensitive << ( tmp_28_fu_561_p3 );

    SC_METHOD(thread_p_shl7_fu_585_p1);
    sensitive << ( tmp_29_fu_578_p3 );

    SC_METHOD(thread_p_shl8_fu_596_p1);
    sensitive << ( tmp_30_fu_589_p3 );

    SC_METHOD(thread_p_shl9_fu_617_p1);
    sensitive << ( tmp_31_fu_609_p3 );

    SC_METHOD(thread_p_shl_fu_679_p1);
    sensitive << ( tmp_37_fu_671_p3 );

    SC_METHOD(thread_phitmp_fu_486_p2);
    sensitive << ( countWait_reg_319 );

    SC_METHOD(thread_pixConvolved_1_fu_466_p3);
    sensitive << ( or_cond_reg_861 );
    sensitive << ( ap_phi_mux_pixConvolved_phi_fu_311_p4 );
    sensitive << ( pixConvolved_5_fu_443_p2 );

    SC_METHOD(thread_pixConvolved_2_fu_479_p3);
    sensitive << ( tmp_21_reg_867 );
    sensitive << ( pixConvolved_1_fu_466_p3 );

    SC_METHOD(thread_pixConvolved_5_fu_443_p2);
    sensitive << ( ap_phi_mux_pixConvolved_phi_fu_311_p4 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_src_V_V_blk_n);
    sensitive << ( src_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond3_reg_842 );

    SC_METHOD(thread_src_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond3_reg_842 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp1_cast_fu_763_p1);
    sensitive << ( tmp1_fu_757_p2 );

    SC_METHOD(thread_tmp1_fu_757_p2);
    sensitive << ( tmp3_cast_fu_754_p1 );
    sensitive << ( tmp2_cast_fu_751_p1 );

    SC_METHOD(thread_tmp2_cast_fu_751_p1);
    sensitive << ( tmp2_reg_993 );

    SC_METHOD(thread_tmp2_fu_701_p2);
    sensitive << ( val_V_3_fu_514_p2 );
    sensitive << ( val_V_3_0_1_fu_544_p2 );

    SC_METHOD(thread_tmp3_cast_fu_754_p1);
    sensitive << ( tmp3_reg_998 );

    SC_METHOD(thread_tmp3_fu_707_p2);
    sensitive << ( val_V_3_0_2_fu_572_p2 );
    sensitive << ( val_V_3_1_fu_600_p2 );

    SC_METHOD(thread_tmp4_fu_783_p2);
    sensitive << ( tmp6_cast_fu_779_p1 );
    sensitive << ( tmp5_cast_fu_767_p1 );

    SC_METHOD(thread_tmp5_cast_fu_767_p1);
    sensitive << ( tmp5_reg_1003 );

    SC_METHOD(thread_tmp6_cast_fu_779_p1);
    sensitive << ( tmp6_fu_773_p2 );

    SC_METHOD(thread_tmp6_fu_773_p2);
    sensitive << ( tmp7_cast_fu_770_p1 );
    sensitive << ( val_V_3_2_cast_fu_747_p1 );

    SC_METHOD(thread_tmp7_cast_fu_770_p1);
    sensitive << ( tmp7_reg_1008 );

    SC_METHOD(thread_tmp7_fu_713_p2);
    sensitive << ( val_V_3_2_1_fu_665_p2 );
    sensitive << ( val_V_3_2_2_fu_695_p2 );

    SC_METHOD(thread_tmp_118_0_1_fu_449_p1);
    sensitive << ( pixConvolved_5_fu_443_p2 );

    SC_METHOD(thread_tmp_118_0_2_fu_461_p1);
    sensitive << ( col_assign_7_0_2_fu_455_p2 );

    SC_METHOD(thread_tmp_20_fu_436_p1);
    sensitive << ( ap_phi_mux_pixConvolved_phi_fu_311_p4 );

    SC_METHOD(thread_tmp_21_fu_404_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond3_fu_354_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_col_assign_phi_fu_289_p4 );

    SC_METHOD(thread_tmp_22_fu_503_p3);
    sensitive << ( lineBuff_val_0_V_lo_reg_943 );

    SC_METHOD(thread_tmp_23_fu_430_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond3_fu_354_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_countWait_phi_fu_323_p4 );

    SC_METHOD(thread_tmp_25_fu_520_p3);
    sensitive << ( lineBuff_val_0_V_q0 );

    SC_METHOD(thread_tmp_26_fu_532_p3);
    sensitive << ( lineBuff_val_0_V_q0 );

    SC_METHOD(thread_tmp_27_fu_550_p3);
    sensitive << ( lineBuff_val_0_V_lo_5_reg_954 );

    SC_METHOD(thread_tmp_28_fu_561_p3);
    sensitive << ( lineBuff_val_0_V_lo_5_reg_954 );

    SC_METHOD(thread_tmp_29_fu_578_p3);
    sensitive << ( lineBuff_val_1_V_lo_3_reg_960 );

    SC_METHOD(thread_tmp_30_fu_589_p3);
    sensitive << ( lineBuff_val_1_V_lo_3_reg_960 );

    SC_METHOD(thread_tmp_31_fu_609_p3);
    sensitive << ( lineBuff_val_1_V_q1 );

    SC_METHOD(thread_tmp_32_fu_621_p3);
    sensitive << ( lineBuff_val_1_V_q1 );

    SC_METHOD(thread_tmp_33_fu_719_p3);
    sensitive << ( lineBuff_val_2_V_lo_6_reg_976 );

    SC_METHOD(thread_tmp_34_fu_730_p3);
    sensitive << ( lineBuff_val_2_V_lo_6_reg_976 );

    SC_METHOD(thread_tmp_35_fu_643_p3);
    sensitive << ( lineBuff_val_2_V_lo_7_reg_982 );

    SC_METHOD(thread_tmp_36_fu_654_p3);
    sensitive << ( lineBuff_val_2_V_lo_7_reg_982 );

    SC_METHOD(thread_tmp_37_fu_671_p3);
    sensitive << ( lineBuff_val_2_V_q1 );

    SC_METHOD(thread_tmp_38_fu_683_p3);
    sensitive << ( lineBuff_val_2_V_q1 );

    SC_METHOD(thread_tmp_39_fu_366_p4);
    sensitive << ( ap_phi_mux_idxRow_phi_fu_300_p4 );

    SC_METHOD(thread_tmp_40_fu_382_p4);
    sensitive << ( ap_phi_mux_col_assign_phi_fu_289_p4 );

    SC_METHOD(thread_tmp_V_fu_805_p3);
    sensitive << ( ap_reg_pp0_iter1_or_cond_reg_861 );
    sensitive << ( out_x_V_reg_1013 );

    SC_METHOD(thread_tmp_fu_492_p3);
    sensitive << ( lineBuff_val_0_V_lo_reg_943 );

    SC_METHOD(thread_tmp_s_fu_360_p1);
    sensitive << ( ap_phi_mux_col_assign_phi_fu_289_p4 );

    SC_METHOD(thread_val_V_3_0_1_fu_544_p2);
    sensitive << ( p_shl3_fu_528_p1 );
    sensitive << ( p_shl4_fu_540_p1 );

    SC_METHOD(thread_val_V_3_0_2_fu_572_p2);
    sensitive << ( p_shl5_fu_557_p1 );
    sensitive << ( p_shl6_fu_568_p1 );

    SC_METHOD(thread_val_V_3_1_2_fu_633_p2);
    sensitive << ( p_shl9_fu_617_p1 );
    sensitive << ( p_shl10_fu_629_p1 );

    SC_METHOD(thread_val_V_3_1_fu_600_p2);
    sensitive << ( p_shl7_fu_585_p1 );
    sensitive << ( p_shl8_fu_596_p1 );

    SC_METHOD(thread_val_V_3_2_1_fu_665_p2);
    sensitive << ( p_shl13_fu_650_p1 );
    sensitive << ( p_shl14_fu_661_p1 );

    SC_METHOD(thread_val_V_3_2_2_fu_695_p2);
    sensitive << ( p_shl_fu_679_p1 );
    sensitive << ( p_shl15_fu_691_p1 );

    SC_METHOD(thread_val_V_3_2_cast_fu_747_p1);
    sensitive << ( val_V_3_2_fu_741_p2 );

    SC_METHOD(thread_val_V_3_2_fu_741_p2);
    sensitive << ( p_shl11_fu_726_p1 );
    sensitive << ( p_shl12_fu_737_p1 );

    SC_METHOD(thread_val_V_3_fu_514_p2);
    sensitive << ( p_shl1_fu_499_p1 );
    sensitive << ( p_shl2_fu_510_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( dst_x_V_V_full_n );
    sensitive << ( dst_y_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_813_p2 );
    sensitive << ( exitcond2_fu_342_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_354_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "gaussianBlur_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, src_V_V_dout, "(port)src_V_V_dout");
    sc_trace(mVcdFile, src_V_V_empty_n, "(port)src_V_V_empty_n");
    sc_trace(mVcdFile, src_V_V_read, "(port)src_V_V_read");
    sc_trace(mVcdFile, dst_x_V_V_din, "(port)dst_x_V_V_din");
    sc_trace(mVcdFile, dst_x_V_V_full_n, "(port)dst_x_V_V_full_n");
    sc_trace(mVcdFile, dst_x_V_V_write, "(port)dst_x_V_V_write");
    sc_trace(mVcdFile, dst_y_V_V_din, "(port)dst_y_V_V_din");
    sc_trace(mVcdFile, dst_y_V_V_full_n, "(port)dst_y_V_V_full_n");
    sc_trace(mVcdFile, dst_y_V_V_write, "(port)dst_y_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, src_V_V_blk_n, "src_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, exitcond3_reg_842, "exitcond3_reg_842");
    sc_trace(mVcdFile, dst_x_V_V_blk_n, "dst_x_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_23_reg_883, "tmp_23_reg_883");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_tmp_23_reg_883, "ap_reg_pp0_iter1_tmp_23_reg_883");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, exitcond_fu_813_p2, "exitcond_fu_813_p2");
    sc_trace(mVcdFile, dst_y_V_V_blk_n, "dst_y_V_V_blk_n");
    sc_trace(mVcdFile, col_assign_reg_285, "col_assign_reg_285");
    sc_trace(mVcdFile, idxRow_reg_296, "idxRow_reg_296");
    sc_trace(mVcdFile, pixConvolved_reg_307, "pixConvolved_reg_307");
    sc_trace(mVcdFile, countWait_reg_319, "countWait_reg_319");
    sc_trace(mVcdFile, exitcond2_fu_342_p2, "exitcond2_fu_342_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_2_fu_348_p2, "i_2_fu_348_p2");
    sc_trace(mVcdFile, exitcond3_fu_354_p2, "exitcond3_fu_354_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter1, "ap_block_state6_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter2, "ap_block_state9_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond3_reg_842, "ap_reg_pp0_iter1_exitcond3_reg_842");
    sc_trace(mVcdFile, tmp_s_fu_360_p1, "tmp_s_fu_360_p1");
    sc_trace(mVcdFile, tmp_s_reg_846, "tmp_s_reg_846");
    sc_trace(mVcdFile, lineBuff_val_1_V_ad_reg_851, "lineBuff_val_1_V_ad_reg_851");
    sc_trace(mVcdFile, lineBuff_val_2_V_ad_reg_856, "lineBuff_val_2_V_ad_reg_856");
    sc_trace(mVcdFile, or_cond_fu_398_p2, "or_cond_fu_398_p2");
    sc_trace(mVcdFile, or_cond_reg_861, "or_cond_reg_861");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_or_cond_reg_861, "ap_reg_pp0_iter1_or_cond_reg_861");
    sc_trace(mVcdFile, tmp_21_fu_404_p2, "tmp_21_fu_404_p2");
    sc_trace(mVcdFile, tmp_21_reg_867, "tmp_21_reg_867");
    sc_trace(mVcdFile, idxCol_fu_410_p2, "idxCol_fu_410_p2");
    sc_trace(mVcdFile, idxCol_reg_873, "idxCol_reg_873");
    sc_trace(mVcdFile, idxRow_1_fu_422_p3, "idxRow_1_fu_422_p3");
    sc_trace(mVcdFile, idxRow_1_reg_878, "idxRow_1_reg_878");
    sc_trace(mVcdFile, tmp_23_fu_430_p2, "tmp_23_fu_430_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage2_iter0, "ap_block_state5_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage2_iter1, "ap_block_state8_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, tmp_118_0_1_fu_449_p1, "tmp_118_0_1_fu_449_p1");
    sc_trace(mVcdFile, tmp_118_0_1_reg_892, "tmp_118_0_1_reg_892");
    sc_trace(mVcdFile, tmp_118_0_2_fu_461_p1, "tmp_118_0_2_fu_461_p1");
    sc_trace(mVcdFile, tmp_118_0_2_reg_897, "tmp_118_0_2_reg_897");
    sc_trace(mVcdFile, idxCol_1_fu_473_p3, "idxCol_1_fu_473_p3");
    sc_trace(mVcdFile, idxCol_1_reg_928, "idxCol_1_reg_928");
    sc_trace(mVcdFile, pixConvolved_2_fu_479_p3, "pixConvolved_2_fu_479_p3");
    sc_trace(mVcdFile, pixConvolved_2_reg_933, "pixConvolved_2_reg_933");
    sc_trace(mVcdFile, phitmp_fu_486_p2, "phitmp_fu_486_p2");
    sc_trace(mVcdFile, phitmp_reg_938, "phitmp_reg_938");
    sc_trace(mVcdFile, lineBuff_val_0_V_q0, "lineBuff_val_0_V_q0");
    sc_trace(mVcdFile, lineBuff_val_0_V_lo_reg_943, "lineBuff_val_0_V_lo_reg_943");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, lineBuff_val_0_V_q1, "lineBuff_val_0_V_q1");
    sc_trace(mVcdFile, lineBuff_val_0_V_lo_5_reg_954, "lineBuff_val_0_V_lo_5_reg_954");
    sc_trace(mVcdFile, lineBuff_val_1_V_q1, "lineBuff_val_1_V_q1");
    sc_trace(mVcdFile, lineBuff_val_1_V_lo_3_reg_960, "lineBuff_val_1_V_lo_3_reg_960");
    sc_trace(mVcdFile, lineBuff_val_1_V_q0, "lineBuff_val_1_V_q0");
    sc_trace(mVcdFile, lineBuff_val_1_V_lo_4_reg_966, "lineBuff_val_1_V_lo_4_reg_966");
    sc_trace(mVcdFile, lineBuff_val_2_V_q1, "lineBuff_val_2_V_q1");
    sc_trace(mVcdFile, lineBuff_val_2_V_lo_6_reg_976, "lineBuff_val_2_V_lo_6_reg_976");
    sc_trace(mVcdFile, lineBuff_val_2_V_q0, "lineBuff_val_2_V_q0");
    sc_trace(mVcdFile, lineBuff_val_2_V_lo_7_reg_982, "lineBuff_val_2_V_lo_7_reg_982");
    sc_trace(mVcdFile, tmp2_fu_701_p2, "tmp2_fu_701_p2");
    sc_trace(mVcdFile, tmp2_reg_993, "tmp2_reg_993");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage1_iter0, "ap_block_state4_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage1_iter1, "ap_block_state7_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, tmp3_fu_707_p2, "tmp3_fu_707_p2");
    sc_trace(mVcdFile, tmp3_reg_998, "tmp3_reg_998");
    sc_trace(mVcdFile, grp_fu_825_p3, "grp_fu_825_p3");
    sc_trace(mVcdFile, tmp5_reg_1003, "tmp5_reg_1003");
    sc_trace(mVcdFile, tmp7_fu_713_p2, "tmp7_fu_713_p2");
    sc_trace(mVcdFile, tmp7_reg_1008, "tmp7_reg_1008");
    sc_trace(mVcdFile, out_x_V_reg_1013, "out_x_V_reg_1013");
    sc_trace(mVcdFile, countWait_4_fu_819_p2, "countWait_4_fu_819_p2");
    sc_trace(mVcdFile, ap_block_state11, "ap_block_state11");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, lineBuff_val_0_V_address0, "lineBuff_val_0_V_address0");
    sc_trace(mVcdFile, lineBuff_val_0_V_ce0, "lineBuff_val_0_V_ce0");
    sc_trace(mVcdFile, lineBuff_val_0_V_we0, "lineBuff_val_0_V_we0");
    sc_trace(mVcdFile, lineBuff_val_0_V_address1, "lineBuff_val_0_V_address1");
    sc_trace(mVcdFile, lineBuff_val_0_V_ce1, "lineBuff_val_0_V_ce1");
    sc_trace(mVcdFile, lineBuff_val_1_V_address0, "lineBuff_val_1_V_address0");
    sc_trace(mVcdFile, lineBuff_val_1_V_ce0, "lineBuff_val_1_V_ce0");
    sc_trace(mVcdFile, lineBuff_val_1_V_we0, "lineBuff_val_1_V_we0");
    sc_trace(mVcdFile, lineBuff_val_1_V_address1, "lineBuff_val_1_V_address1");
    sc_trace(mVcdFile, lineBuff_val_1_V_ce1, "lineBuff_val_1_V_ce1");
    sc_trace(mVcdFile, lineBuff_val_2_V_address0, "lineBuff_val_2_V_address0");
    sc_trace(mVcdFile, lineBuff_val_2_V_ce0, "lineBuff_val_2_V_ce0");
    sc_trace(mVcdFile, lineBuff_val_2_V_we0, "lineBuff_val_2_V_we0");
    sc_trace(mVcdFile, lineBuff_val_2_V_address1, "lineBuff_val_2_V_address1");
    sc_trace(mVcdFile, lineBuff_val_2_V_ce1, "lineBuff_val_2_V_ce1");
    sc_trace(mVcdFile, i_reg_274, "i_reg_274");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_phi_mux_col_assign_phi_fu_289_p4, "ap_phi_mux_col_assign_phi_fu_289_p4");
    sc_trace(mVcdFile, ap_phi_mux_idxRow_phi_fu_300_p4, "ap_phi_mux_idxRow_phi_fu_300_p4");
    sc_trace(mVcdFile, ap_phi_mux_pixConvolved_phi_fu_311_p4, "ap_phi_mux_pixConvolved_phi_fu_311_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, ap_phi_mux_countWait_phi_fu_323_p4, "ap_phi_mux_countWait_phi_fu_323_p4");
    sc_trace(mVcdFile, countWait_1_reg_331, "countWait_1_reg_331");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_20_fu_436_p1, "tmp_20_fu_436_p1");
    sc_trace(mVcdFile, tmp_V_fu_805_p3, "tmp_V_fu_805_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_39_fu_366_p4, "tmp_39_fu_366_p4");
    sc_trace(mVcdFile, tmp_40_fu_382_p4, "tmp_40_fu_382_p4");
    sc_trace(mVcdFile, icmp_fu_376_p2, "icmp_fu_376_p2");
    sc_trace(mVcdFile, icmp3_fu_392_p2, "icmp3_fu_392_p2");
    sc_trace(mVcdFile, idxRow_4_fu_416_p2, "idxRow_4_fu_416_p2");
    sc_trace(mVcdFile, pixConvolved_5_fu_443_p2, "pixConvolved_5_fu_443_p2");
    sc_trace(mVcdFile, col_assign_7_0_2_fu_455_p2, "col_assign_7_0_2_fu_455_p2");
    sc_trace(mVcdFile, pixConvolved_1_fu_466_p3, "pixConvolved_1_fu_466_p3");
    sc_trace(mVcdFile, tmp_fu_492_p3, "tmp_fu_492_p3");
    sc_trace(mVcdFile, tmp_22_fu_503_p3, "tmp_22_fu_503_p3");
    sc_trace(mVcdFile, p_shl1_fu_499_p1, "p_shl1_fu_499_p1");
    sc_trace(mVcdFile, p_shl2_fu_510_p1, "p_shl2_fu_510_p1");
    sc_trace(mVcdFile, tmp_25_fu_520_p3, "tmp_25_fu_520_p3");
    sc_trace(mVcdFile, tmp_26_fu_532_p3, "tmp_26_fu_532_p3");
    sc_trace(mVcdFile, p_shl3_fu_528_p1, "p_shl3_fu_528_p1");
    sc_trace(mVcdFile, p_shl4_fu_540_p1, "p_shl4_fu_540_p1");
    sc_trace(mVcdFile, tmp_27_fu_550_p3, "tmp_27_fu_550_p3");
    sc_trace(mVcdFile, tmp_28_fu_561_p3, "tmp_28_fu_561_p3");
    sc_trace(mVcdFile, p_shl5_fu_557_p1, "p_shl5_fu_557_p1");
    sc_trace(mVcdFile, p_shl6_fu_568_p1, "p_shl6_fu_568_p1");
    sc_trace(mVcdFile, tmp_29_fu_578_p3, "tmp_29_fu_578_p3");
    sc_trace(mVcdFile, tmp_30_fu_589_p3, "tmp_30_fu_589_p3");
    sc_trace(mVcdFile, p_shl7_fu_585_p1, "p_shl7_fu_585_p1");
    sc_trace(mVcdFile, p_shl8_fu_596_p1, "p_shl8_fu_596_p1");
    sc_trace(mVcdFile, tmp_31_fu_609_p3, "tmp_31_fu_609_p3");
    sc_trace(mVcdFile, tmp_32_fu_621_p3, "tmp_32_fu_621_p3");
    sc_trace(mVcdFile, p_shl9_fu_617_p1, "p_shl9_fu_617_p1");
    sc_trace(mVcdFile, p_shl10_fu_629_p1, "p_shl10_fu_629_p1");
    sc_trace(mVcdFile, val_V_3_1_2_fu_633_p2, "val_V_3_1_2_fu_633_p2");
    sc_trace(mVcdFile, tmp_35_fu_643_p3, "tmp_35_fu_643_p3");
    sc_trace(mVcdFile, tmp_36_fu_654_p3, "tmp_36_fu_654_p3");
    sc_trace(mVcdFile, p_shl13_fu_650_p1, "p_shl13_fu_650_p1");
    sc_trace(mVcdFile, p_shl14_fu_661_p1, "p_shl14_fu_661_p1");
    sc_trace(mVcdFile, tmp_37_fu_671_p3, "tmp_37_fu_671_p3");
    sc_trace(mVcdFile, tmp_38_fu_683_p3, "tmp_38_fu_683_p3");
    sc_trace(mVcdFile, p_shl_fu_679_p1, "p_shl_fu_679_p1");
    sc_trace(mVcdFile, p_shl15_fu_691_p1, "p_shl15_fu_691_p1");
    sc_trace(mVcdFile, val_V_3_fu_514_p2, "val_V_3_fu_514_p2");
    sc_trace(mVcdFile, val_V_3_0_1_fu_544_p2, "val_V_3_0_1_fu_544_p2");
    sc_trace(mVcdFile, val_V_3_0_2_fu_572_p2, "val_V_3_0_2_fu_572_p2");
    sc_trace(mVcdFile, val_V_3_1_fu_600_p2, "val_V_3_1_fu_600_p2");
    sc_trace(mVcdFile, val_V_3_2_1_fu_665_p2, "val_V_3_2_1_fu_665_p2");
    sc_trace(mVcdFile, val_V_3_2_2_fu_695_p2, "val_V_3_2_2_fu_695_p2");
    sc_trace(mVcdFile, tmp_33_fu_719_p3, "tmp_33_fu_719_p3");
    sc_trace(mVcdFile, tmp_34_fu_730_p3, "tmp_34_fu_730_p3");
    sc_trace(mVcdFile, p_shl11_fu_726_p1, "p_shl11_fu_726_p1");
    sc_trace(mVcdFile, p_shl12_fu_737_p1, "p_shl12_fu_737_p1");
    sc_trace(mVcdFile, val_V_3_2_fu_741_p2, "val_V_3_2_fu_741_p2");
    sc_trace(mVcdFile, tmp3_cast_fu_754_p1, "tmp3_cast_fu_754_p1");
    sc_trace(mVcdFile, tmp2_cast_fu_751_p1, "tmp2_cast_fu_751_p1");
    sc_trace(mVcdFile, tmp1_fu_757_p2, "tmp1_fu_757_p2");
    sc_trace(mVcdFile, tmp7_cast_fu_770_p1, "tmp7_cast_fu_770_p1");
    sc_trace(mVcdFile, val_V_3_2_cast_fu_747_p1, "val_V_3_2_cast_fu_747_p1");
    sc_trace(mVcdFile, tmp6_fu_773_p2, "tmp6_fu_773_p2");
    sc_trace(mVcdFile, tmp6_cast_fu_779_p1, "tmp6_cast_fu_779_p1");
    sc_trace(mVcdFile, tmp5_cast_fu_767_p1, "tmp5_cast_fu_767_p1");
    sc_trace(mVcdFile, tmp4_fu_783_p2, "tmp4_fu_783_p2");
    sc_trace(mVcdFile, tmp1_cast_fu_763_p1, "tmp1_cast_fu_763_p1");
    sc_trace(mVcdFile, accumulator_V_2_2_fu_789_p2, "accumulator_V_2_2_fu_789_p2");
    sc_trace(mVcdFile, grp_fu_825_p0, "grp_fu_825_p0");
    sc_trace(mVcdFile, grp_fu_825_p1, "grp_fu_825_p1");
    sc_trace(mVcdFile, grp_fu_825_p2, "grp_fu_825_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, grp_fu_825_p00, "grp_fu_825_p00");
    sc_trace(mVcdFile, grp_fu_825_p20, "grp_fu_825_p20");
#endif

    }
}

gaussianBlur::~gaussianBlur() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete lineBuff_val_0_V_U;
    delete lineBuff_val_1_V_U;
    delete lineBuff_val_2_V_U;
    delete image_filter_mac_ibs_U29;
}

void gaussianBlur::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                    !((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_x_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_y_V_V_full_n.read()))) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_813_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_342_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0))) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_342_p2.read()))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(exitcond3_reg_842.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        col_assign_reg_285 = idxCol_1_reg_928.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_342_p2.read()))) {
        col_assign_reg_285 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        countWait_1_reg_331 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
                !((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_x_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_y_V_V_full_n.read()))))) {
        countWait_1_reg_331 = countWait_4_fu_819_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond3_reg_842.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        countWait_reg_319 = phitmp_reg_938.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_342_p2.read()))) {
        countWait_reg_319 = ap_const_lv19_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_342_p2.read()))) {
        i_reg_274 = i_2_fu_348_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_reg_274 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(exitcond3_reg_842.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        idxRow_reg_296 = idxRow_1_reg_878.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_342_p2.read()))) {
        idxRow_reg_296 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond3_reg_842.read()))) {
        pixConvolved_reg_307 = pixConvolved_2_reg_933.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_342_p2.read()))) {
        pixConvolved_reg_307 = ap_const_lv32_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond3_reg_842 = exitcond3_reg_842.read();
        ap_reg_pp0_iter1_or_cond_reg_861 = or_cond_reg_861.read();
        ap_reg_pp0_iter1_tmp_23_reg_883 = tmp_23_reg_883.read();
        exitcond3_reg_842 = exitcond3_fu_354_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond3_reg_842.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        idxCol_1_reg_928 = idxCol_1_fu_473_p3.read();
        phitmp_reg_938 = phitmp_fu_486_p2.read();
        pixConvolved_2_reg_933 = pixConvolved_2_fu_479_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_354_p2.read()))) {
        idxCol_reg_873 = idxCol_fu_410_p2.read();
        lineBuff_val_1_V_ad_reg_851 =  (sc_lv<9>) (tmp_s_fu_360_p1.read());
        lineBuff_val_2_V_ad_reg_856 =  (sc_lv<9>) (tmp_s_fu_360_p1.read());
        or_cond_reg_861 = or_cond_fu_398_p2.read();
        tmp_21_reg_867 = tmp_21_fu_404_p2.read();
        tmp_23_reg_883 = tmp_23_fu_430_p2.read();
        tmp_s_reg_846 = tmp_s_fu_360_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_354_p2.read()))) {
        idxRow_1_reg_878 = idxRow_1_fu_422_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond3_reg_842.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_861.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        lineBuff_val_0_V_lo_5_reg_954 = lineBuff_val_0_V_q1.read();
        lineBuff_val_0_V_lo_reg_943 = lineBuff_val_0_V_q0.read();
        lineBuff_val_1_V_lo_3_reg_960 = lineBuff_val_1_V_q1.read();
        lineBuff_val_1_V_lo_4_reg_966 = lineBuff_val_1_V_q0.read();
        lineBuff_val_2_V_lo_6_reg_976 = lineBuff_val_2_V_q1.read();
        lineBuff_val_2_V_lo_7_reg_982 = lineBuff_val_2_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond3_reg_842.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter1_or_cond_reg_861.read()))) {
        out_x_V_reg_1013 = accumulator_V_2_2_fu_789_p2.read().range(15, 8);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond3_reg_842.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter1_or_cond_reg_861.read()))) {
        tmp2_reg_993 = tmp2_fu_701_p2.read();
        tmp3_reg_998 = tmp3_fu_707_p2.read();
        tmp7_reg_1008 = tmp7_fu_713_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond3_reg_842.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter1_or_cond_reg_861.read()))) {
        tmp5_reg_1003 = grp_fu_825_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond3_reg_842.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_861.read()))) {
        tmp_118_0_1_reg_892 = tmp_118_0_1_fu_449_p1.read();
        tmp_118_0_2_reg_897 = tmp_118_0_2_fu_461_p1.read();
    }
}

void gaussianBlur::thread_accumulator_V_2_2_fu_789_p2() {
    accumulator_V_2_2_fu_789_p2 = (!tmp4_fu_783_p2.read().is_01() || !tmp1_cast_fu_763_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp4_fu_783_p2.read()) + sc_biguint<16>(tmp1_cast_fu_763_p1.read()));
}

void gaussianBlur::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void gaussianBlur::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[3];
}

void gaussianBlur::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[4];
}

void gaussianBlur::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void gaussianBlur::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[5];
}

void gaussianBlur::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[6];
}

void gaussianBlur::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void gaussianBlur::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gaussianBlur::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && ((esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_23_reg_883.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, dst_x_V_V_full_n.read())) || 
  (esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_23_reg_883.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, dst_y_V_V_full_n.read()))));
}

void gaussianBlur::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && ((esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_23_reg_883.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, dst_x_V_V_full_n.read())) || 
  (esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_23_reg_883.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, dst_y_V_V_full_n.read()))));
}

void gaussianBlur::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && ((esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_23_reg_883.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, dst_x_V_V_full_n.read())) || 
  (esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_23_reg_883.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, dst_y_V_V_full_n.read()))));
}

void gaussianBlur::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gaussianBlur::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond3_reg_842.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, src_V_V_empty_n.read()));
}

void gaussianBlur::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond3_reg_842.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, src_V_V_empty_n.read()));
}

void gaussianBlur::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gaussianBlur::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gaussianBlur::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gaussianBlur::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void gaussianBlur::thread_ap_block_state11() {
    ap_block_state11 = ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_x_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_y_V_V_full_n.read())));
}

void gaussianBlur::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gaussianBlur::thread_ap_block_state4_pp0_stage1_iter0() {
    ap_block_state4_pp0_stage1_iter0 = (esl_seteq<1,1,1>(exitcond3_reg_842.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, src_V_V_empty_n.read()));
}

void gaussianBlur::thread_ap_block_state5_pp0_stage2_iter0() {
    ap_block_state5_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gaussianBlur::thread_ap_block_state6_pp0_stage0_iter1() {
    ap_block_state6_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gaussianBlur::thread_ap_block_state7_pp0_stage1_iter1() {
    ap_block_state7_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gaussianBlur::thread_ap_block_state8_pp0_stage2_iter1() {
    ap_block_state8_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gaussianBlur::thread_ap_block_state9_pp0_stage0_iter2() {
    ap_block_state9_pp0_stage0_iter2 = ((esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_23_reg_883.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_x_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_23_reg_883.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_y_V_V_full_n.read())));
}

void gaussianBlur::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_354_p2.read())) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void gaussianBlur::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         !((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_x_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_y_V_V_full_n.read()))) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_813_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void gaussianBlur::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void gaussianBlur::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void gaussianBlur::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void gaussianBlur::thread_ap_phi_mux_col_assign_phi_fu_289_p4() {
    if ((esl_seteq<1,1,1>(exitcond3_reg_842.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_phi_mux_col_assign_phi_fu_289_p4 = idxCol_1_reg_928.read();
    } else {
        ap_phi_mux_col_assign_phi_fu_289_p4 = col_assign_reg_285.read();
    }
}

void gaussianBlur::thread_ap_phi_mux_countWait_phi_fu_323_p4() {
    if ((esl_seteq<1,1,1>(exitcond3_reg_842.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_phi_mux_countWait_phi_fu_323_p4 = phitmp_reg_938.read();
    } else {
        ap_phi_mux_countWait_phi_fu_323_p4 = countWait_reg_319.read();
    }
}

void gaussianBlur::thread_ap_phi_mux_idxRow_phi_fu_300_p4() {
    if ((esl_seteq<1,1,1>(exitcond3_reg_842.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_phi_mux_idxRow_phi_fu_300_p4 = idxRow_1_reg_878.read();
    } else {
        ap_phi_mux_idxRow_phi_fu_300_p4 = idxRow_reg_296.read();
    }
}

void gaussianBlur::thread_ap_phi_mux_pixConvolved_phi_fu_311_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond3_reg_842.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        ap_phi_mux_pixConvolved_phi_fu_311_p4 = pixConvolved_2_reg_933.read();
    } else {
        ap_phi_mux_pixConvolved_phi_fu_311_p4 = pixConvolved_reg_307.read();
    }
}

void gaussianBlur::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void gaussianBlur::thread_col_assign_7_0_2_fu_455_p2() {
    col_assign_7_0_2_fu_455_p2 = (!ap_phi_mux_pixConvolved_phi_fu_311_p4.read().is_01() || !ap_const_lv32_2.is_01())? sc_lv<32>(): (sc_biguint<32>(ap_phi_mux_pixConvolved_phi_fu_311_p4.read()) + sc_biguint<32>(ap_const_lv32_2));
}

void gaussianBlur::thread_countWait_4_fu_819_p2() {
    countWait_4_fu_819_p2 = (!countWait_1_reg_331.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(countWait_1_reg_331.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void gaussianBlur::thread_dst_x_V_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_23_reg_883.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read())))) {
        dst_x_V_V_blk_n = dst_x_V_V_full_n.read();
    } else {
        dst_x_V_V_blk_n = ap_const_logic_1;
    }
}

void gaussianBlur::thread_dst_x_V_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
         !((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_x_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_y_V_V_full_n.read()))))) {
        dst_x_V_V_din = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_23_reg_883.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        dst_x_V_V_din = tmp_V_fu_805_p3.read();
    } else {
        dst_x_V_V_din = "XXXXXXXX";
    }
}

void gaussianBlur::thread_dst_x_V_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
          !((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_x_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_y_V_V_full_n.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_23_reg_883.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        dst_x_V_V_write = ap_const_logic_1;
    } else {
        dst_x_V_V_write = ap_const_logic_0;
    }
}

void gaussianBlur::thread_dst_y_V_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_23_reg_883.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read())))) {
        dst_y_V_V_blk_n = dst_y_V_V_full_n.read();
    } else {
        dst_y_V_V_blk_n = ap_const_logic_1;
    }
}

void gaussianBlur::thread_dst_y_V_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
         !((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_x_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_y_V_V_full_n.read()))))) {
        dst_y_V_V_din = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_23_reg_883.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        dst_y_V_V_din = tmp_V_fu_805_p3.read();
    } else {
        dst_y_V_V_din = "XXXXXXXX";
    }
}

void gaussianBlur::thread_dst_y_V_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
          !((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_x_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_y_V_V_full_n.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_23_reg_883.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        dst_y_V_V_write = ap_const_logic_1;
    } else {
        dst_y_V_V_write = ap_const_logic_0;
    }
}

void gaussianBlur::thread_exitcond2_fu_342_p2() {
    exitcond2_fu_342_p2 = (!i_reg_274.read().is_01() || !ap_const_lv4_9.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_274.read() == ap_const_lv4_9);
}

void gaussianBlur::thread_exitcond3_fu_354_p2() {
    exitcond3_fu_354_p2 = (!ap_phi_mux_countWait_phi_fu_323_p4.read().is_01() || !ap_const_lv19_40001.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_countWait_phi_fu_323_p4.read() == ap_const_lv19_40001);
}

void gaussianBlur::thread_exitcond_fu_813_p2() {
    exitcond_fu_813_p2 = (!countWait_1_reg_331.read().is_01() || !ap_const_lv10_201.is_01())? sc_lv<1>(): sc_lv<1>(countWait_1_reg_331.read() == ap_const_lv10_201);
}

void gaussianBlur::thread_grp_fu_825_p0() {
    grp_fu_825_p0 =  (sc_lv<8>) (grp_fu_825_p00.read());
}

void gaussianBlur::thread_grp_fu_825_p00() {
    grp_fu_825_p00 = esl_zext<15,8>(lineBuff_val_1_V_lo_4_reg_966.read());
}

void gaussianBlur::thread_grp_fu_825_p1() {
    grp_fu_825_p1 =  (sc_lv<7>) (ap_const_lv15_25);
}

void gaussianBlur::thread_grp_fu_825_p2() {
    grp_fu_825_p2 =  (sc_lv<14>) (grp_fu_825_p20.read());
}

void gaussianBlur::thread_grp_fu_825_p20() {
    grp_fu_825_p20 = esl_zext<15,14>(val_V_3_1_2_fu_633_p2.read());
}

void gaussianBlur::thread_i_2_fu_348_p2() {
    i_2_fu_348_p2 = (!i_reg_274.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_274.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void gaussianBlur::thread_icmp3_fu_392_p2() {
    icmp3_fu_392_p2 = (!tmp_40_fu_382_p4.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): (sc_bigint<31>(tmp_40_fu_382_p4.read()) > sc_bigint<31>(ap_const_lv31_0));
}

void gaussianBlur::thread_icmp_fu_376_p2() {
    icmp_fu_376_p2 = (!tmp_39_fu_366_p4.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): (sc_bigint<31>(tmp_39_fu_366_p4.read()) > sc_bigint<31>(ap_const_lv31_0));
}

void gaussianBlur::thread_idxCol_1_fu_473_p3() {
    idxCol_1_fu_473_p3 = (!tmp_21_reg_867.read()[0].is_01())? sc_lv<32>(): ((tmp_21_reg_867.read()[0].to_bool())? idxCol_reg_873.read(): ap_const_lv32_0);
}

void gaussianBlur::thread_idxCol_fu_410_p2() {
    idxCol_fu_410_p2 = (!ap_phi_mux_col_assign_phi_fu_289_p4.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(ap_phi_mux_col_assign_phi_fu_289_p4.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void gaussianBlur::thread_idxRow_1_fu_422_p3() {
    idxRow_1_fu_422_p3 = (!tmp_21_fu_404_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_21_fu_404_p2.read()[0].to_bool())? ap_phi_mux_idxRow_phi_fu_300_p4.read(): idxRow_4_fu_416_p2.read());
}

void gaussianBlur::thread_idxRow_4_fu_416_p2() {
    idxRow_4_fu_416_p2 = (!ap_phi_mux_idxRow_phi_fu_300_p4.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(ap_phi_mux_idxRow_phi_fu_300_p4.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void gaussianBlur::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         !((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_x_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_y_V_V_full_n.read()))) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_813_p2.read()))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void gaussianBlur::thread_lineBuff_val_0_V_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        lineBuff_val_0_V_address0 =  (sc_lv<9>) (tmp_118_0_1_reg_892.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        lineBuff_val_0_V_address0 =  (sc_lv<9>) (tmp_20_fu_436_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        lineBuff_val_0_V_address0 =  (sc_lv<9>) (tmp_s_reg_846.read());
    } else {
        lineBuff_val_0_V_address0 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void gaussianBlur::thread_lineBuff_val_0_V_address1() {
    lineBuff_val_0_V_address1 =  (sc_lv<9>) (tmp_118_0_2_fu_461_p1.read());
}

void gaussianBlur::thread_lineBuff_val_0_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        lineBuff_val_0_V_ce0 = ap_const_logic_1;
    } else {
        lineBuff_val_0_V_ce0 = ap_const_logic_0;
    }
}

void gaussianBlur::thread_lineBuff_val_0_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        lineBuff_val_0_V_ce1 = ap_const_logic_1;
    } else {
        lineBuff_val_0_V_ce1 = ap_const_logic_0;
    }
}

void gaussianBlur::thread_lineBuff_val_0_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond3_reg_842.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        lineBuff_val_0_V_we0 = ap_const_logic_1;
    } else {
        lineBuff_val_0_V_we0 = ap_const_logic_0;
    }
}

void gaussianBlur::thread_lineBuff_val_1_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            lineBuff_val_1_V_address0 =  (sc_lv<9>) (tmp_118_0_1_fu_449_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            lineBuff_val_1_V_address0 = lineBuff_val_1_V_ad_reg_851.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            lineBuff_val_1_V_address0 =  (sc_lv<9>) (tmp_s_fu_360_p1.read());
        } else {
            lineBuff_val_1_V_address0 =  (sc_lv<9>) ("XXXXXXXXX");
        }
    } else {
        lineBuff_val_1_V_address0 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void gaussianBlur::thread_lineBuff_val_1_V_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        lineBuff_val_1_V_address1 =  (sc_lv<9>) (tmp_118_0_2_reg_897.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        lineBuff_val_1_V_address1 =  (sc_lv<9>) (tmp_20_fu_436_p1.read());
    } else {
        lineBuff_val_1_V_address1 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void gaussianBlur::thread_lineBuff_val_1_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        lineBuff_val_1_V_ce0 = ap_const_logic_1;
    } else {
        lineBuff_val_1_V_ce0 = ap_const_logic_0;
    }
}

void gaussianBlur::thread_lineBuff_val_1_V_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        lineBuff_val_1_V_ce1 = ap_const_logic_1;
    } else {
        lineBuff_val_1_V_ce1 = ap_const_logic_0;
    }
}

void gaussianBlur::thread_lineBuff_val_1_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond3_reg_842.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        lineBuff_val_1_V_we0 = ap_const_logic_1;
    } else {
        lineBuff_val_1_V_we0 = ap_const_logic_0;
    }
}

void gaussianBlur::thread_lineBuff_val_2_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            lineBuff_val_2_V_address0 =  (sc_lv<9>) (tmp_118_0_1_fu_449_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            lineBuff_val_2_V_address0 = lineBuff_val_2_V_ad_reg_856.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            lineBuff_val_2_V_address0 =  (sc_lv<9>) (tmp_s_fu_360_p1.read());
        } else {
            lineBuff_val_2_V_address0 =  (sc_lv<9>) ("XXXXXXXXX");
        }
    } else {
        lineBuff_val_2_V_address0 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void gaussianBlur::thread_lineBuff_val_2_V_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        lineBuff_val_2_V_address1 =  (sc_lv<9>) (tmp_118_0_2_reg_897.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        lineBuff_val_2_V_address1 =  (sc_lv<9>) (tmp_20_fu_436_p1.read());
    } else {
        lineBuff_val_2_V_address1 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void gaussianBlur::thread_lineBuff_val_2_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        lineBuff_val_2_V_ce0 = ap_const_logic_1;
    } else {
        lineBuff_val_2_V_ce0 = ap_const_logic_0;
    }
}

void gaussianBlur::thread_lineBuff_val_2_V_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        lineBuff_val_2_V_ce1 = ap_const_logic_1;
    } else {
        lineBuff_val_2_V_ce1 = ap_const_logic_0;
    }
}

void gaussianBlur::thread_lineBuff_val_2_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond3_reg_842.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        lineBuff_val_2_V_we0 = ap_const_logic_1;
    } else {
        lineBuff_val_2_V_we0 = ap_const_logic_0;
    }
}

void gaussianBlur::thread_or_cond_fu_398_p2() {
    or_cond_fu_398_p2 = (icmp_fu_376_p2.read() & icmp3_fu_392_p2.read());
}

void gaussianBlur::thread_p_shl10_fu_629_p1() {
    p_shl10_fu_629_p1 = esl_zext<14,9>(tmp_32_fu_621_p3.read());
}

void gaussianBlur::thread_p_shl11_fu_726_p1() {
    p_shl11_fu_726_p1 = esl_zext<14,13>(tmp_33_fu_719_p3.read());
}

void gaussianBlur::thread_p_shl12_fu_737_p1() {
    p_shl12_fu_737_p1 = esl_zext<14,11>(tmp_34_fu_730_p3.read());
}

void gaussianBlur::thread_p_shl13_fu_650_p1() {
    p_shl13_fu_650_p1 = esl_zext<14,13>(tmp_35_fu_643_p3.read());
}

void gaussianBlur::thread_p_shl14_fu_661_p1() {
    p_shl14_fu_661_p1 = esl_zext<14,9>(tmp_36_fu_654_p3.read());
}

void gaussianBlur::thread_p_shl15_fu_691_p1() {
    p_shl15_fu_691_p1 = esl_zext<14,11>(tmp_38_fu_683_p3.read());
}

void gaussianBlur::thread_p_shl1_fu_499_p1() {
    p_shl1_fu_499_p1 = esl_zext<14,13>(tmp_fu_492_p3.read());
}

void gaussianBlur::thread_p_shl2_fu_510_p1() {
    p_shl2_fu_510_p1 = esl_zext<14,11>(tmp_22_fu_503_p3.read());
}

void gaussianBlur::thread_p_shl3_fu_528_p1() {
    p_shl3_fu_528_p1 = esl_zext<14,13>(tmp_25_fu_520_p3.read());
}

void gaussianBlur::thread_p_shl4_fu_540_p1() {
    p_shl4_fu_540_p1 = esl_zext<14,9>(tmp_26_fu_532_p3.read());
}

void gaussianBlur::thread_p_shl5_fu_557_p1() {
    p_shl5_fu_557_p1 = esl_zext<14,13>(tmp_27_fu_550_p3.read());
}

void gaussianBlur::thread_p_shl6_fu_568_p1() {
    p_shl6_fu_568_p1 = esl_zext<14,11>(tmp_28_fu_561_p3.read());
}

void gaussianBlur::thread_p_shl7_fu_585_p1() {
    p_shl7_fu_585_p1 = esl_zext<14,13>(tmp_29_fu_578_p3.read());
}

void gaussianBlur::thread_p_shl8_fu_596_p1() {
    p_shl8_fu_596_p1 = esl_zext<14,9>(tmp_30_fu_589_p3.read());
}

void gaussianBlur::thread_p_shl9_fu_617_p1() {
    p_shl9_fu_617_p1 = esl_zext<14,13>(tmp_31_fu_609_p3.read());
}

void gaussianBlur::thread_p_shl_fu_679_p1() {
    p_shl_fu_679_p1 = esl_zext<14,13>(tmp_37_fu_671_p3.read());
}

void gaussianBlur::thread_phitmp_fu_486_p2() {
    phitmp_fu_486_p2 = (!countWait_reg_319.read().is_01() || !ap_const_lv19_1.is_01())? sc_lv<19>(): (sc_biguint<19>(countWait_reg_319.read()) + sc_biguint<19>(ap_const_lv19_1));
}

void gaussianBlur::thread_pixConvolved_1_fu_466_p3() {
    pixConvolved_1_fu_466_p3 = (!or_cond_reg_861.read()[0].is_01())? sc_lv<32>(): ((or_cond_reg_861.read()[0].to_bool())? pixConvolved_5_fu_443_p2.read(): ap_phi_mux_pixConvolved_phi_fu_311_p4.read());
}

void gaussianBlur::thread_pixConvolved_2_fu_479_p3() {
    pixConvolved_2_fu_479_p3 = (!tmp_21_reg_867.read()[0].is_01())? sc_lv<32>(): ((tmp_21_reg_867.read()[0].to_bool())? pixConvolved_1_fu_466_p3.read(): ap_const_lv32_0);
}

void gaussianBlur::thread_pixConvolved_5_fu_443_p2() {
    pixConvolved_5_fu_443_p2 = (!ap_phi_mux_pixConvolved_phi_fu_311_p4.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(ap_phi_mux_pixConvolved_phi_fu_311_p4.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void gaussianBlur::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void gaussianBlur::thread_src_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond3_reg_842.read(), ap_const_lv1_0))) {
        src_V_V_blk_n = src_V_V_empty_n.read();
    } else {
        src_V_V_blk_n = ap_const_logic_1;
    }
}

void gaussianBlur::thread_src_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond3_reg_842.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        src_V_V_read = ap_const_logic_1;
    } else {
        src_V_V_read = ap_const_logic_0;
    }
}

void gaussianBlur::thread_start_out() {
    start_out = real_start.read();
}

void gaussianBlur::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void gaussianBlur::thread_tmp1_cast_fu_763_p1() {
    tmp1_cast_fu_763_p1 = esl_zext<16,15>(tmp1_fu_757_p2.read());
}

void gaussianBlur::thread_tmp1_fu_757_p2() {
    tmp1_fu_757_p2 = (!tmp3_cast_fu_754_p1.read().is_01() || !tmp2_cast_fu_751_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp3_cast_fu_754_p1.read()) + sc_biguint<15>(tmp2_cast_fu_751_p1.read()));
}

void gaussianBlur::thread_tmp2_cast_fu_751_p1() {
    tmp2_cast_fu_751_p1 = esl_zext<15,14>(tmp2_reg_993.read());
}

void gaussianBlur::thread_tmp2_fu_701_p2() {
    tmp2_fu_701_p2 = (!val_V_3_fu_514_p2.read().is_01() || !val_V_3_0_1_fu_544_p2.read().is_01())? sc_lv<14>(): (sc_biguint<14>(val_V_3_fu_514_p2.read()) + sc_biguint<14>(val_V_3_0_1_fu_544_p2.read()));
}

void gaussianBlur::thread_tmp3_cast_fu_754_p1() {
    tmp3_cast_fu_754_p1 = esl_zext<15,14>(tmp3_reg_998.read());
}

void gaussianBlur::thread_tmp3_fu_707_p2() {
    tmp3_fu_707_p2 = (!val_V_3_0_2_fu_572_p2.read().is_01() || !val_V_3_1_fu_600_p2.read().is_01())? sc_lv<14>(): (sc_biguint<14>(val_V_3_0_2_fu_572_p2.read()) + sc_biguint<14>(val_V_3_1_fu_600_p2.read()));
}

void gaussianBlur::thread_tmp4_fu_783_p2() {
    tmp4_fu_783_p2 = (!tmp6_cast_fu_779_p1.read().is_01() || !tmp5_cast_fu_767_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp6_cast_fu_779_p1.read()) + sc_biguint<16>(tmp5_cast_fu_767_p1.read()));
}

void gaussianBlur::thread_tmp5_cast_fu_767_p1() {
    tmp5_cast_fu_767_p1 = esl_zext<16,15>(tmp5_reg_1003.read());
}

void gaussianBlur::thread_tmp6_cast_fu_779_p1() {
    tmp6_cast_fu_779_p1 = esl_zext<16,15>(tmp6_fu_773_p2.read());
}

void gaussianBlur::thread_tmp6_fu_773_p2() {
    tmp6_fu_773_p2 = (!tmp7_cast_fu_770_p1.read().is_01() || !val_V_3_2_cast_fu_747_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp7_cast_fu_770_p1.read()) + sc_biguint<15>(val_V_3_2_cast_fu_747_p1.read()));
}

void gaussianBlur::thread_tmp7_cast_fu_770_p1() {
    tmp7_cast_fu_770_p1 = esl_zext<15,14>(tmp7_reg_1008.read());
}

void gaussianBlur::thread_tmp7_fu_713_p2() {
    tmp7_fu_713_p2 = (!val_V_3_2_1_fu_665_p2.read().is_01() || !val_V_3_2_2_fu_695_p2.read().is_01())? sc_lv<14>(): (sc_biguint<14>(val_V_3_2_1_fu_665_p2.read()) + sc_biguint<14>(val_V_3_2_2_fu_695_p2.read()));
}

void gaussianBlur::thread_tmp_118_0_1_fu_449_p1() {
    tmp_118_0_1_fu_449_p1 = esl_zext<64,32>(pixConvolved_5_fu_443_p2.read());
}

void gaussianBlur::thread_tmp_118_0_2_fu_461_p1() {
    tmp_118_0_2_fu_461_p1 = esl_zext<64,32>(col_assign_7_0_2_fu_455_p2.read());
}

void gaussianBlur::thread_tmp_20_fu_436_p1() {
    tmp_20_fu_436_p1 = esl_zext<64,32>(ap_phi_mux_pixConvolved_phi_fu_311_p4.read());
}

void gaussianBlur::thread_tmp_21_fu_404_p2() {
    tmp_21_fu_404_p2 = (!ap_phi_mux_col_assign_phi_fu_289_p4.read().is_01() || !ap_const_lv32_1FF.is_01())? sc_lv<1>(): (sc_bigint<32>(ap_phi_mux_col_assign_phi_fu_289_p4.read()) < sc_bigint<32>(ap_const_lv32_1FF));
}

void gaussianBlur::thread_tmp_22_fu_503_p3() {
    tmp_22_fu_503_p3 = esl_concat<8,3>(lineBuff_val_0_V_lo_reg_943.read(), ap_const_lv3_0);
}

void gaussianBlur::thread_tmp_23_fu_430_p2() {
    tmp_23_fu_430_p2 = (!ap_phi_mux_countWait_phi_fu_323_p4.read().is_01() || !ap_const_lv19_201.is_01())? sc_lv<1>(): (sc_biguint<19>(ap_phi_mux_countWait_phi_fu_323_p4.read()) > sc_biguint<19>(ap_const_lv19_201));
}

void gaussianBlur::thread_tmp_25_fu_520_p3() {
    tmp_25_fu_520_p3 = esl_concat<8,5>(lineBuff_val_0_V_q0.read(), ap_const_lv5_0);
}

void gaussianBlur::thread_tmp_26_fu_532_p3() {
    tmp_26_fu_532_p3 = esl_concat<8,1>(lineBuff_val_0_V_q0.read(), ap_const_lv1_0);
}

void gaussianBlur::thread_tmp_27_fu_550_p3() {
    tmp_27_fu_550_p3 = esl_concat<8,5>(lineBuff_val_0_V_lo_5_reg_954.read(), ap_const_lv5_0);
}

void gaussianBlur::thread_tmp_28_fu_561_p3() {
    tmp_28_fu_561_p3 = esl_concat<8,3>(lineBuff_val_0_V_lo_5_reg_954.read(), ap_const_lv3_0);
}

void gaussianBlur::thread_tmp_29_fu_578_p3() {
    tmp_29_fu_578_p3 = esl_concat<8,5>(lineBuff_val_1_V_lo_3_reg_960.read(), ap_const_lv5_0);
}

void gaussianBlur::thread_tmp_30_fu_589_p3() {
    tmp_30_fu_589_p3 = esl_concat<8,1>(lineBuff_val_1_V_lo_3_reg_960.read(), ap_const_lv1_0);
}

void gaussianBlur::thread_tmp_31_fu_609_p3() {
    tmp_31_fu_609_p3 = esl_concat<8,5>(lineBuff_val_1_V_q1.read(), ap_const_lv5_0);
}

void gaussianBlur::thread_tmp_32_fu_621_p3() {
    tmp_32_fu_621_p3 = esl_concat<8,1>(lineBuff_val_1_V_q1.read(), ap_const_lv1_0);
}

void gaussianBlur::thread_tmp_33_fu_719_p3() {
    tmp_33_fu_719_p3 = esl_concat<8,5>(lineBuff_val_2_V_lo_6_reg_976.read(), ap_const_lv5_0);
}

void gaussianBlur::thread_tmp_34_fu_730_p3() {
    tmp_34_fu_730_p3 = esl_concat<8,3>(lineBuff_val_2_V_lo_6_reg_976.read(), ap_const_lv3_0);
}

void gaussianBlur::thread_tmp_35_fu_643_p3() {
    tmp_35_fu_643_p3 = esl_concat<8,5>(lineBuff_val_2_V_lo_7_reg_982.read(), ap_const_lv5_0);
}

void gaussianBlur::thread_tmp_36_fu_654_p3() {
    tmp_36_fu_654_p3 = esl_concat<8,1>(lineBuff_val_2_V_lo_7_reg_982.read(), ap_const_lv1_0);
}

void gaussianBlur::thread_tmp_37_fu_671_p3() {
    tmp_37_fu_671_p3 = esl_concat<8,5>(lineBuff_val_2_V_q1.read(), ap_const_lv5_0);
}

void gaussianBlur::thread_tmp_38_fu_683_p3() {
    tmp_38_fu_683_p3 = esl_concat<8,3>(lineBuff_val_2_V_q1.read(), ap_const_lv3_0);
}

void gaussianBlur::thread_tmp_39_fu_366_p4() {
    tmp_39_fu_366_p4 = ap_phi_mux_idxRow_phi_fu_300_p4.read().range(31, 1);
}

void gaussianBlur::thread_tmp_40_fu_382_p4() {
    tmp_40_fu_382_p4 = ap_phi_mux_col_assign_phi_fu_289_p4.read().range(31, 1);
}

void gaussianBlur::thread_tmp_V_fu_805_p3() {
    tmp_V_fu_805_p3 = (!ap_reg_pp0_iter1_or_cond_reg_861.read()[0].is_01())? sc_lv<8>(): ((ap_reg_pp0_iter1_or_cond_reg_861.read()[0].to_bool())? out_x_V_reg_1013.read(): ap_const_lv8_0);
}

void gaussianBlur::thread_tmp_fu_492_p3() {
    tmp_fu_492_p3 = esl_concat<8,5>(lineBuff_val_0_V_lo_reg_943.read(), ap_const_lv5_0);
}

void gaussianBlur::thread_tmp_s_fu_360_p1() {
    tmp_s_fu_360_p1 = esl_zext<64,32>(ap_phi_mux_col_assign_phi_fu_289_p4.read());
}

void gaussianBlur::thread_val_V_3_0_1_fu_544_p2() {
    val_V_3_0_1_fu_544_p2 = (!p_shl3_fu_528_p1.read().is_01() || !p_shl4_fu_540_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_shl3_fu_528_p1.read()) - sc_biguint<14>(p_shl4_fu_540_p1.read()));
}

void gaussianBlur::thread_val_V_3_0_2_fu_572_p2() {
    val_V_3_0_2_fu_572_p2 = (!p_shl5_fu_557_p1.read().is_01() || !p_shl6_fu_568_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_shl5_fu_557_p1.read()) - sc_biguint<14>(p_shl6_fu_568_p1.read()));
}

void gaussianBlur::thread_val_V_3_1_2_fu_633_p2() {
    val_V_3_1_2_fu_633_p2 = (!p_shl9_fu_617_p1.read().is_01() || !p_shl10_fu_629_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_shl9_fu_617_p1.read()) - sc_biguint<14>(p_shl10_fu_629_p1.read()));
}

void gaussianBlur::thread_val_V_3_1_fu_600_p2() {
    val_V_3_1_fu_600_p2 = (!p_shl7_fu_585_p1.read().is_01() || !p_shl8_fu_596_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_shl7_fu_585_p1.read()) - sc_biguint<14>(p_shl8_fu_596_p1.read()));
}

void gaussianBlur::thread_val_V_3_2_1_fu_665_p2() {
    val_V_3_2_1_fu_665_p2 = (!p_shl13_fu_650_p1.read().is_01() || !p_shl14_fu_661_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_shl13_fu_650_p1.read()) - sc_biguint<14>(p_shl14_fu_661_p1.read()));
}

void gaussianBlur::thread_val_V_3_2_2_fu_695_p2() {
    val_V_3_2_2_fu_695_p2 = (!p_shl_fu_679_p1.read().is_01() || !p_shl15_fu_691_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_shl_fu_679_p1.read()) - sc_biguint<14>(p_shl15_fu_691_p1.read()));
}

void gaussianBlur::thread_val_V_3_2_cast_fu_747_p1() {
    val_V_3_2_cast_fu_747_p1 = esl_zext<15,14>(val_V_3_2_fu_741_p2.read());
}

void gaussianBlur::thread_val_V_3_2_fu_741_p2() {
    val_V_3_2_fu_741_p2 = (!p_shl11_fu_726_p1.read().is_01() || !p_shl12_fu_737_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_shl11_fu_726_p1.read()) - sc_biguint<14>(p_shl12_fu_737_p1.read()));
}

void gaussianBlur::thread_val_V_3_fu_514_p2() {
    val_V_3_fu_514_p2 = (!p_shl1_fu_499_p1.read().is_01() || !p_shl2_fu_510_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_shl1_fu_499_p1.read()) - sc_biguint<14>(p_shl2_fu_510_p1.read()));
}

void gaussianBlur::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_342_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_354_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_354_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && !((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_x_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_y_V_V_full_n.read()))) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_813_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && !((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_x_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_813_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_y_V_V_full_n.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<7>) ("XXXXXXX");
            break;
    }
}

}

