// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _gaussianBlur_HH_
#define _gaussianBlur_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "image_filter_mac_ibs.h"
#include "gaussianBlur_linefYi.h"

namespace ap_rtl {

struct gaussianBlur : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > src_V_V_dout;
    sc_in< sc_logic > src_V_V_empty_n;
    sc_out< sc_logic > src_V_V_read;
    sc_out< sc_lv<8> > dst_x_V_V_din;
    sc_in< sc_logic > dst_x_V_V_full_n;
    sc_out< sc_logic > dst_x_V_V_write;
    sc_out< sc_lv<8> > dst_y_V_V_din;
    sc_in< sc_logic > dst_y_V_V_full_n;
    sc_out< sc_logic > dst_y_V_V_write;


    // Module declarations
    gaussianBlur(sc_module_name name);
    SC_HAS_PROCESS(gaussianBlur);

    ~gaussianBlur();

    sc_trace_file* mVcdFile;

    gaussianBlur_linefYi* lineBuff_val_0_V_U;
    gaussianBlur_linefYi* lineBuff_val_1_V_U;
    gaussianBlur_linefYi* lineBuff_val_2_V_U;
    image_filter_mac_ibs<1,1,8,7,14,15>* image_filter_mac_ibs_U29;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > src_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<1> > exitcond3_reg_842;
    sc_signal< sc_logic > dst_x_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > tmp_23_reg_883;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_tmp_23_reg_883;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<1> > exitcond_fu_813_p2;
    sc_signal< sc_logic > dst_y_V_V_blk_n;
    sc_signal< sc_lv<32> > col_assign_reg_285;
    sc_signal< sc_lv<32> > idxRow_reg_296;
    sc_signal< sc_lv<32> > pixConvolved_reg_307;
    sc_signal< sc_lv<19> > countWait_reg_319;
    sc_signal< sc_lv<1> > exitcond2_fu_342_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > i_2_fu_348_p2;
    sc_signal< sc_lv<1> > exitcond3_fu_354_p2;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_exitcond3_reg_842;
    sc_signal< sc_lv<64> > tmp_s_fu_360_p1;
    sc_signal< sc_lv<64> > tmp_s_reg_846;
    sc_signal< sc_lv<9> > lineBuff_val_1_V_ad_reg_851;
    sc_signal< sc_lv<9> > lineBuff_val_2_V_ad_reg_856;
    sc_signal< sc_lv<1> > or_cond_fu_398_p2;
    sc_signal< sc_lv<1> > or_cond_reg_861;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_or_cond_reg_861;
    sc_signal< sc_lv<1> > tmp_21_fu_404_p2;
    sc_signal< sc_lv<1> > tmp_21_reg_867;
    sc_signal< sc_lv<32> > idxCol_fu_410_p2;
    sc_signal< sc_lv<32> > idxCol_reg_873;
    sc_signal< sc_lv<32> > idxRow_1_fu_422_p3;
    sc_signal< sc_lv<32> > idxRow_1_reg_878;
    sc_signal< sc_lv<1> > tmp_23_fu_430_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state5_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state8_pp0_stage2_iter1;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<64> > tmp_118_0_1_fu_449_p1;
    sc_signal< sc_lv<64> > tmp_118_0_1_reg_892;
    sc_signal< sc_lv<64> > tmp_118_0_2_fu_461_p1;
    sc_signal< sc_lv<64> > tmp_118_0_2_reg_897;
    sc_signal< sc_lv<32> > idxCol_1_fu_473_p3;
    sc_signal< sc_lv<32> > idxCol_1_reg_928;
    sc_signal< sc_lv<32> > pixConvolved_2_fu_479_p3;
    sc_signal< sc_lv<32> > pixConvolved_2_reg_933;
    sc_signal< sc_lv<19> > phitmp_fu_486_p2;
    sc_signal< sc_lv<19> > phitmp_reg_938;
    sc_signal< sc_lv<8> > lineBuff_val_0_V_q0;
    sc_signal< sc_lv<8> > lineBuff_val_0_V_lo_reg_943;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<8> > lineBuff_val_0_V_q1;
    sc_signal< sc_lv<8> > lineBuff_val_0_V_lo_5_reg_954;
    sc_signal< sc_lv<8> > lineBuff_val_1_V_q1;
    sc_signal< sc_lv<8> > lineBuff_val_1_V_lo_3_reg_960;
    sc_signal< sc_lv<8> > lineBuff_val_1_V_q0;
    sc_signal< sc_lv<8> > lineBuff_val_1_V_lo_4_reg_966;
    sc_signal< sc_lv<8> > lineBuff_val_2_V_q1;
    sc_signal< sc_lv<8> > lineBuff_val_2_V_lo_6_reg_976;
    sc_signal< sc_lv<8> > lineBuff_val_2_V_q0;
    sc_signal< sc_lv<8> > lineBuff_val_2_V_lo_7_reg_982;
    sc_signal< sc_lv<14> > tmp2_fu_701_p2;
    sc_signal< sc_lv<14> > tmp2_reg_993;
    sc_signal< bool > ap_block_state4_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<14> > tmp3_fu_707_p2;
    sc_signal< sc_lv<14> > tmp3_reg_998;
    sc_signal< sc_lv<15> > grp_fu_825_p3;
    sc_signal< sc_lv<15> > tmp5_reg_1003;
    sc_signal< sc_lv<14> > tmp7_fu_713_p2;
    sc_signal< sc_lv<14> > tmp7_reg_1008;
    sc_signal< sc_lv<8> > out_x_V_reg_1013;
    sc_signal< sc_lv<10> > countWait_4_fu_819_p2;
    sc_signal< bool > ap_block_state11;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< sc_lv<9> > lineBuff_val_0_V_address0;
    sc_signal< sc_logic > lineBuff_val_0_V_ce0;
    sc_signal< sc_logic > lineBuff_val_0_V_we0;
    sc_signal< sc_lv<9> > lineBuff_val_0_V_address1;
    sc_signal< sc_logic > lineBuff_val_0_V_ce1;
    sc_signal< sc_lv<9> > lineBuff_val_1_V_address0;
    sc_signal< sc_logic > lineBuff_val_1_V_ce0;
    sc_signal< sc_logic > lineBuff_val_1_V_we0;
    sc_signal< sc_lv<9> > lineBuff_val_1_V_address1;
    sc_signal< sc_logic > lineBuff_val_1_V_ce1;
    sc_signal< sc_lv<9> > lineBuff_val_2_V_address0;
    sc_signal< sc_logic > lineBuff_val_2_V_ce0;
    sc_signal< sc_logic > lineBuff_val_2_V_we0;
    sc_signal< sc_lv<9> > lineBuff_val_2_V_address1;
    sc_signal< sc_logic > lineBuff_val_2_V_ce1;
    sc_signal< sc_lv<4> > i_reg_274;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<32> > ap_phi_mux_col_assign_phi_fu_289_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_idxRow_phi_fu_300_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_pixConvolved_phi_fu_311_p4;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<19> > ap_phi_mux_countWait_phi_fu_323_p4;
    sc_signal< sc_lv<10> > countWait_1_reg_331;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<64> > tmp_20_fu_436_p1;
    sc_signal< sc_lv<8> > tmp_V_fu_805_p3;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<31> > tmp_39_fu_366_p4;
    sc_signal< sc_lv<31> > tmp_40_fu_382_p4;
    sc_signal< sc_lv<1> > icmp_fu_376_p2;
    sc_signal< sc_lv<1> > icmp3_fu_392_p2;
    sc_signal< sc_lv<32> > idxRow_4_fu_416_p2;
    sc_signal< sc_lv<32> > pixConvolved_5_fu_443_p2;
    sc_signal< sc_lv<32> > col_assign_7_0_2_fu_455_p2;
    sc_signal< sc_lv<32> > pixConvolved_1_fu_466_p3;
    sc_signal< sc_lv<13> > tmp_fu_492_p3;
    sc_signal< sc_lv<11> > tmp_22_fu_503_p3;
    sc_signal< sc_lv<14> > p_shl1_fu_499_p1;
    sc_signal< sc_lv<14> > p_shl2_fu_510_p1;
    sc_signal< sc_lv<13> > tmp_25_fu_520_p3;
    sc_signal< sc_lv<9> > tmp_26_fu_532_p3;
    sc_signal< sc_lv<14> > p_shl3_fu_528_p1;
    sc_signal< sc_lv<14> > p_shl4_fu_540_p1;
    sc_signal< sc_lv<13> > tmp_27_fu_550_p3;
    sc_signal< sc_lv<11> > tmp_28_fu_561_p3;
    sc_signal< sc_lv<14> > p_shl5_fu_557_p1;
    sc_signal< sc_lv<14> > p_shl6_fu_568_p1;
    sc_signal< sc_lv<13> > tmp_29_fu_578_p3;
    sc_signal< sc_lv<9> > tmp_30_fu_589_p3;
    sc_signal< sc_lv<14> > p_shl7_fu_585_p1;
    sc_signal< sc_lv<14> > p_shl8_fu_596_p1;
    sc_signal< sc_lv<13> > tmp_31_fu_609_p3;
    sc_signal< sc_lv<9> > tmp_32_fu_621_p3;
    sc_signal< sc_lv<14> > p_shl9_fu_617_p1;
    sc_signal< sc_lv<14> > p_shl10_fu_629_p1;
    sc_signal< sc_lv<14> > val_V_3_1_2_fu_633_p2;
    sc_signal< sc_lv<13> > tmp_35_fu_643_p3;
    sc_signal< sc_lv<9> > tmp_36_fu_654_p3;
    sc_signal< sc_lv<14> > p_shl13_fu_650_p1;
    sc_signal< sc_lv<14> > p_shl14_fu_661_p1;
    sc_signal< sc_lv<13> > tmp_37_fu_671_p3;
    sc_signal< sc_lv<11> > tmp_38_fu_683_p3;
    sc_signal< sc_lv<14> > p_shl_fu_679_p1;
    sc_signal< sc_lv<14> > p_shl15_fu_691_p1;
    sc_signal< sc_lv<14> > val_V_3_fu_514_p2;
    sc_signal< sc_lv<14> > val_V_3_0_1_fu_544_p2;
    sc_signal< sc_lv<14> > val_V_3_0_2_fu_572_p2;
    sc_signal< sc_lv<14> > val_V_3_1_fu_600_p2;
    sc_signal< sc_lv<14> > val_V_3_2_1_fu_665_p2;
    sc_signal< sc_lv<14> > val_V_3_2_2_fu_695_p2;
    sc_signal< sc_lv<13> > tmp_33_fu_719_p3;
    sc_signal< sc_lv<11> > tmp_34_fu_730_p3;
    sc_signal< sc_lv<14> > p_shl11_fu_726_p1;
    sc_signal< sc_lv<14> > p_shl12_fu_737_p1;
    sc_signal< sc_lv<14> > val_V_3_2_fu_741_p2;
    sc_signal< sc_lv<15> > tmp3_cast_fu_754_p1;
    sc_signal< sc_lv<15> > tmp2_cast_fu_751_p1;
    sc_signal< sc_lv<15> > tmp1_fu_757_p2;
    sc_signal< sc_lv<15> > tmp7_cast_fu_770_p1;
    sc_signal< sc_lv<15> > val_V_3_2_cast_fu_747_p1;
    sc_signal< sc_lv<15> > tmp6_fu_773_p2;
    sc_signal< sc_lv<16> > tmp6_cast_fu_779_p1;
    sc_signal< sc_lv<16> > tmp5_cast_fu_767_p1;
    sc_signal< sc_lv<16> > tmp4_fu_783_p2;
    sc_signal< sc_lv<16> > tmp1_cast_fu_763_p1;
    sc_signal< sc_lv<16> > accumulator_V_2_2_fu_789_p2;
    sc_signal< sc_lv<8> > grp_fu_825_p0;
    sc_signal< sc_lv<7> > grp_fu_825_p1;
    sc_signal< sc_lv<14> > grp_fu_825_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<15> > grp_fu_825_p00;
    sc_signal< sc_lv<15> > grp_fu_825_p20;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_pp0_stage0;
    static const sc_lv<7> ap_ST_fsm_pp0_stage1;
    static const sc_lv<7> ap_ST_fsm_pp0_stage2;
    static const sc_lv<7> ap_ST_fsm_state10;
    static const sc_lv<7> ap_ST_fsm_state11;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<19> ap_const_lv19_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<19> ap_const_lv19_40001;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_1FF;
    static const sc_lv<19> ap_const_lv19_201;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<10> ap_const_lv10_201;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<15> ap_const_lv15_25;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_accumulator_V_2_2_fu_789_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state11();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage1_iter0();
    void thread_ap_block_state5_pp0_stage2_iter0();
    void thread_ap_block_state6_pp0_stage0_iter1();
    void thread_ap_block_state7_pp0_stage1_iter1();
    void thread_ap_block_state8_pp0_stage2_iter1();
    void thread_ap_block_state9_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_col_assign_phi_fu_289_p4();
    void thread_ap_phi_mux_countWait_phi_fu_323_p4();
    void thread_ap_phi_mux_idxRow_phi_fu_300_p4();
    void thread_ap_phi_mux_pixConvolved_phi_fu_311_p4();
    void thread_ap_ready();
    void thread_col_assign_7_0_2_fu_455_p2();
    void thread_countWait_4_fu_819_p2();
    void thread_dst_x_V_V_blk_n();
    void thread_dst_x_V_V_din();
    void thread_dst_x_V_V_write();
    void thread_dst_y_V_V_blk_n();
    void thread_dst_y_V_V_din();
    void thread_dst_y_V_V_write();
    void thread_exitcond2_fu_342_p2();
    void thread_exitcond3_fu_354_p2();
    void thread_exitcond_fu_813_p2();
    void thread_grp_fu_825_p0();
    void thread_grp_fu_825_p00();
    void thread_grp_fu_825_p1();
    void thread_grp_fu_825_p2();
    void thread_grp_fu_825_p20();
    void thread_i_2_fu_348_p2();
    void thread_icmp3_fu_392_p2();
    void thread_icmp_fu_376_p2();
    void thread_idxCol_1_fu_473_p3();
    void thread_idxCol_fu_410_p2();
    void thread_idxRow_1_fu_422_p3();
    void thread_idxRow_4_fu_416_p2();
    void thread_internal_ap_ready();
    void thread_lineBuff_val_0_V_address0();
    void thread_lineBuff_val_0_V_address1();
    void thread_lineBuff_val_0_V_ce0();
    void thread_lineBuff_val_0_V_ce1();
    void thread_lineBuff_val_0_V_we0();
    void thread_lineBuff_val_1_V_address0();
    void thread_lineBuff_val_1_V_address1();
    void thread_lineBuff_val_1_V_ce0();
    void thread_lineBuff_val_1_V_ce1();
    void thread_lineBuff_val_1_V_we0();
    void thread_lineBuff_val_2_V_address0();
    void thread_lineBuff_val_2_V_address1();
    void thread_lineBuff_val_2_V_ce0();
    void thread_lineBuff_val_2_V_ce1();
    void thread_lineBuff_val_2_V_we0();
    void thread_or_cond_fu_398_p2();
    void thread_p_shl10_fu_629_p1();
    void thread_p_shl11_fu_726_p1();
    void thread_p_shl12_fu_737_p1();
    void thread_p_shl13_fu_650_p1();
    void thread_p_shl14_fu_661_p1();
    void thread_p_shl15_fu_691_p1();
    void thread_p_shl1_fu_499_p1();
    void thread_p_shl2_fu_510_p1();
    void thread_p_shl3_fu_528_p1();
    void thread_p_shl4_fu_540_p1();
    void thread_p_shl5_fu_557_p1();
    void thread_p_shl6_fu_568_p1();
    void thread_p_shl7_fu_585_p1();
    void thread_p_shl8_fu_596_p1();
    void thread_p_shl9_fu_617_p1();
    void thread_p_shl_fu_679_p1();
    void thread_phitmp_fu_486_p2();
    void thread_pixConvolved_1_fu_466_p3();
    void thread_pixConvolved_2_fu_479_p3();
    void thread_pixConvolved_5_fu_443_p2();
    void thread_real_start();
    void thread_src_V_V_blk_n();
    void thread_src_V_V_read();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp1_cast_fu_763_p1();
    void thread_tmp1_fu_757_p2();
    void thread_tmp2_cast_fu_751_p1();
    void thread_tmp2_fu_701_p2();
    void thread_tmp3_cast_fu_754_p1();
    void thread_tmp3_fu_707_p2();
    void thread_tmp4_fu_783_p2();
    void thread_tmp5_cast_fu_767_p1();
    void thread_tmp6_cast_fu_779_p1();
    void thread_tmp6_fu_773_p2();
    void thread_tmp7_cast_fu_770_p1();
    void thread_tmp7_fu_713_p2();
    void thread_tmp_118_0_1_fu_449_p1();
    void thread_tmp_118_0_2_fu_461_p1();
    void thread_tmp_20_fu_436_p1();
    void thread_tmp_21_fu_404_p2();
    void thread_tmp_22_fu_503_p3();
    void thread_tmp_23_fu_430_p2();
    void thread_tmp_25_fu_520_p3();
    void thread_tmp_26_fu_532_p3();
    void thread_tmp_27_fu_550_p3();
    void thread_tmp_28_fu_561_p3();
    void thread_tmp_29_fu_578_p3();
    void thread_tmp_30_fu_589_p3();
    void thread_tmp_31_fu_609_p3();
    void thread_tmp_32_fu_621_p3();
    void thread_tmp_33_fu_719_p3();
    void thread_tmp_34_fu_730_p3();
    void thread_tmp_35_fu_643_p3();
    void thread_tmp_36_fu_654_p3();
    void thread_tmp_37_fu_671_p3();
    void thread_tmp_38_fu_683_p3();
    void thread_tmp_39_fu_366_p4();
    void thread_tmp_40_fu_382_p4();
    void thread_tmp_V_fu_805_p3();
    void thread_tmp_fu_492_p3();
    void thread_tmp_s_fu_360_p1();
    void thread_val_V_3_0_1_fu_544_p2();
    void thread_val_V_3_0_2_fu_572_p2();
    void thread_val_V_3_1_2_fu_633_p2();
    void thread_val_V_3_1_fu_600_p2();
    void thread_val_V_3_2_1_fu_665_p2();
    void thread_val_V_3_2_2_fu_695_p2();
    void thread_val_V_3_2_cast_fu_747_p1();
    void thread_val_V_3_2_fu_741_p2();
    void thread_val_V_3_fu_514_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
