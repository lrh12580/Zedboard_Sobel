// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _image_filter_HH_
#define _image_filter_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Mem2Stream_Batch9.h"
#include "bgr2gray.h"
#include "gaussianBlur.h"
#include "sobel_x.h"
#include "sobel_y.h"
#include "addWeighted.h"
#include "gray2bgr.h"
#include "Stream2Mem_Batch.h"
#include "fifo_w32_d128_A.h"
#include "fifo_w32_d6_A.h"
#include "fifo_w8_d128_A.h"
#include "start_for_bgr2grapcA.h"
#include "start_for_Stream2qcK.h"
#include "start_for_gaussiarcU.h"
#include "start_for_sobel_xsc4.h"
#include "start_for_sobel_ytde.h"
#include "start_for_addWeigudo.h"
#include "start_for_gray2bgvdy.h"
#include "image_filter_CONTROL_BUS_s_axi.h"
#include "image_filter_hostmem_1_m_axi.h"
#include "image_filter_hostmem_2_m_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CONTROL_BUS_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_CONTROL_BUS_DATA_WIDTH = 32,
         unsigned int C_M_AXI_HOSTMEM_1_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_HOSTMEM_1_ID_WIDTH = 1,
         unsigned int C_M_AXI_HOSTMEM_1_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_HOSTMEM_1_DATA_WIDTH = 32,
         unsigned int C_M_AXI_HOSTMEM_1_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_HOSTMEM_1_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_HOSTMEM_1_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_HOSTMEM_1_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_HOSTMEM_2_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_HOSTMEM_2_ID_WIDTH = 1,
         unsigned int C_M_AXI_HOSTMEM_2_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_HOSTMEM_2_DATA_WIDTH = 32,
         unsigned int C_M_AXI_HOSTMEM_2_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_HOSTMEM_2_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_HOSTMEM_2_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_HOSTMEM_2_BUSER_WIDTH = 1>
struct image_filter : public sc_module {
    // Port declarations 110
    sc_in< sc_logic > s_axi_CONTROL_BUS_AWVALID;
    sc_out< sc_logic > s_axi_CONTROL_BUS_AWREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_BUS_ADDR_WIDTH> > s_axi_CONTROL_BUS_AWADDR;
    sc_in< sc_logic > s_axi_CONTROL_BUS_WVALID;
    sc_out< sc_logic > s_axi_CONTROL_BUS_WREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_BUS_DATA_WIDTH> > s_axi_CONTROL_BUS_WDATA;
    sc_in< sc_uint<C_S_AXI_CONTROL_BUS_DATA_WIDTH/8> > s_axi_CONTROL_BUS_WSTRB;
    sc_in< sc_logic > s_axi_CONTROL_BUS_ARVALID;
    sc_out< sc_logic > s_axi_CONTROL_BUS_ARREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_BUS_ADDR_WIDTH> > s_axi_CONTROL_BUS_ARADDR;
    sc_out< sc_logic > s_axi_CONTROL_BUS_RVALID;
    sc_in< sc_logic > s_axi_CONTROL_BUS_RREADY;
    sc_out< sc_uint<C_S_AXI_CONTROL_BUS_DATA_WIDTH> > s_axi_CONTROL_BUS_RDATA;
    sc_out< sc_lv<2> > s_axi_CONTROL_BUS_RRESP;
    sc_out< sc_logic > s_axi_CONTROL_BUS_BVALID;
    sc_in< sc_logic > s_axi_CONTROL_BUS_BREADY;
    sc_out< sc_lv<2> > s_axi_CONTROL_BUS_BRESP;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > interrupt;
    sc_out< sc_logic > m_axi_hostmem_1_AWVALID;
    sc_in< sc_logic > m_axi_hostmem_1_AWREADY;
    sc_out< sc_uint<C_M_AXI_HOSTMEM_1_ADDR_WIDTH> > m_axi_hostmem_1_AWADDR;
    sc_out< sc_uint<C_M_AXI_HOSTMEM_1_ID_WIDTH> > m_axi_hostmem_1_AWID;
    sc_out< sc_lv<8> > m_axi_hostmem_1_AWLEN;
    sc_out< sc_lv<3> > m_axi_hostmem_1_AWSIZE;
    sc_out< sc_lv<2> > m_axi_hostmem_1_AWBURST;
    sc_out< sc_lv<2> > m_axi_hostmem_1_AWLOCK;
    sc_out< sc_lv<4> > m_axi_hostmem_1_AWCACHE;
    sc_out< sc_lv<3> > m_axi_hostmem_1_AWPROT;
    sc_out< sc_lv<4> > m_axi_hostmem_1_AWQOS;
    sc_out< sc_lv<4> > m_axi_hostmem_1_AWREGION;
    sc_out< sc_uint<C_M_AXI_HOSTMEM_1_AWUSER_WIDTH> > m_axi_hostmem_1_AWUSER;
    sc_out< sc_logic > m_axi_hostmem_1_WVALID;
    sc_in< sc_logic > m_axi_hostmem_1_WREADY;
    sc_out< sc_uint<C_M_AXI_HOSTMEM_1_DATA_WIDTH> > m_axi_hostmem_1_WDATA;
    sc_out< sc_uint<C_M_AXI_HOSTMEM_1_DATA_WIDTH/8> > m_axi_hostmem_1_WSTRB;
    sc_out< sc_logic > m_axi_hostmem_1_WLAST;
    sc_out< sc_uint<C_M_AXI_HOSTMEM_1_ID_WIDTH> > m_axi_hostmem_1_WID;
    sc_out< sc_uint<C_M_AXI_HOSTMEM_1_WUSER_WIDTH> > m_axi_hostmem_1_WUSER;
    sc_out< sc_logic > m_axi_hostmem_1_ARVALID;
    sc_in< sc_logic > m_axi_hostmem_1_ARREADY;
    sc_out< sc_uint<C_M_AXI_HOSTMEM_1_ADDR_WIDTH> > m_axi_hostmem_1_ARADDR;
    sc_out< sc_uint<C_M_AXI_HOSTMEM_1_ID_WIDTH> > m_axi_hostmem_1_ARID;
    sc_out< sc_lv<8> > m_axi_hostmem_1_ARLEN;
    sc_out< sc_lv<3> > m_axi_hostmem_1_ARSIZE;
    sc_out< sc_lv<2> > m_axi_hostmem_1_ARBURST;
    sc_out< sc_lv<2> > m_axi_hostmem_1_ARLOCK;
    sc_out< sc_lv<4> > m_axi_hostmem_1_ARCACHE;
    sc_out< sc_lv<3> > m_axi_hostmem_1_ARPROT;
    sc_out< sc_lv<4> > m_axi_hostmem_1_ARQOS;
    sc_out< sc_lv<4> > m_axi_hostmem_1_ARREGION;
    sc_out< sc_uint<C_M_AXI_HOSTMEM_1_ARUSER_WIDTH> > m_axi_hostmem_1_ARUSER;
    sc_in< sc_logic > m_axi_hostmem_1_RVALID;
    sc_out< sc_logic > m_axi_hostmem_1_RREADY;
    sc_in< sc_uint<C_M_AXI_HOSTMEM_1_DATA_WIDTH> > m_axi_hostmem_1_RDATA;
    sc_in< sc_logic > m_axi_hostmem_1_RLAST;
    sc_in< sc_uint<C_M_AXI_HOSTMEM_1_ID_WIDTH> > m_axi_hostmem_1_RID;
    sc_in< sc_uint<C_M_AXI_HOSTMEM_1_RUSER_WIDTH> > m_axi_hostmem_1_RUSER;
    sc_in< sc_lv<2> > m_axi_hostmem_1_RRESP;
    sc_in< sc_logic > m_axi_hostmem_1_BVALID;
    sc_out< sc_logic > m_axi_hostmem_1_BREADY;
    sc_in< sc_lv<2> > m_axi_hostmem_1_BRESP;
    sc_in< sc_uint<C_M_AXI_HOSTMEM_1_ID_WIDTH> > m_axi_hostmem_1_BID;
    sc_in< sc_uint<C_M_AXI_HOSTMEM_1_BUSER_WIDTH> > m_axi_hostmem_1_BUSER;
    sc_out< sc_logic > m_axi_hostmem_2_AWVALID;
    sc_in< sc_logic > m_axi_hostmem_2_AWREADY;
    sc_out< sc_uint<C_M_AXI_HOSTMEM_2_ADDR_WIDTH> > m_axi_hostmem_2_AWADDR;
    sc_out< sc_uint<C_M_AXI_HOSTMEM_2_ID_WIDTH> > m_axi_hostmem_2_AWID;
    sc_out< sc_lv<8> > m_axi_hostmem_2_AWLEN;
    sc_out< sc_lv<3> > m_axi_hostmem_2_AWSIZE;
    sc_out< sc_lv<2> > m_axi_hostmem_2_AWBURST;
    sc_out< sc_lv<2> > m_axi_hostmem_2_AWLOCK;
    sc_out< sc_lv<4> > m_axi_hostmem_2_AWCACHE;
    sc_out< sc_lv<3> > m_axi_hostmem_2_AWPROT;
    sc_out< sc_lv<4> > m_axi_hostmem_2_AWQOS;
    sc_out< sc_lv<4> > m_axi_hostmem_2_AWREGION;
    sc_out< sc_uint<C_M_AXI_HOSTMEM_2_AWUSER_WIDTH> > m_axi_hostmem_2_AWUSER;
    sc_out< sc_logic > m_axi_hostmem_2_WVALID;
    sc_in< sc_logic > m_axi_hostmem_2_WREADY;
    sc_out< sc_uint<C_M_AXI_HOSTMEM_2_DATA_WIDTH> > m_axi_hostmem_2_WDATA;
    sc_out< sc_uint<C_M_AXI_HOSTMEM_2_DATA_WIDTH/8> > m_axi_hostmem_2_WSTRB;
    sc_out< sc_logic > m_axi_hostmem_2_WLAST;
    sc_out< sc_uint<C_M_AXI_HOSTMEM_2_ID_WIDTH> > m_axi_hostmem_2_WID;
    sc_out< sc_uint<C_M_AXI_HOSTMEM_2_WUSER_WIDTH> > m_axi_hostmem_2_WUSER;
    sc_out< sc_logic > m_axi_hostmem_2_ARVALID;
    sc_in< sc_logic > m_axi_hostmem_2_ARREADY;
    sc_out< sc_uint<C_M_AXI_HOSTMEM_2_ADDR_WIDTH> > m_axi_hostmem_2_ARADDR;
    sc_out< sc_uint<C_M_AXI_HOSTMEM_2_ID_WIDTH> > m_axi_hostmem_2_ARID;
    sc_out< sc_lv<8> > m_axi_hostmem_2_ARLEN;
    sc_out< sc_lv<3> > m_axi_hostmem_2_ARSIZE;
    sc_out< sc_lv<2> > m_axi_hostmem_2_ARBURST;
    sc_out< sc_lv<2> > m_axi_hostmem_2_ARLOCK;
    sc_out< sc_lv<4> > m_axi_hostmem_2_ARCACHE;
    sc_out< sc_lv<3> > m_axi_hostmem_2_ARPROT;
    sc_out< sc_lv<4> > m_axi_hostmem_2_ARQOS;
    sc_out< sc_lv<4> > m_axi_hostmem_2_ARREGION;
    sc_out< sc_uint<C_M_AXI_HOSTMEM_2_ARUSER_WIDTH> > m_axi_hostmem_2_ARUSER;
    sc_in< sc_logic > m_axi_hostmem_2_RVALID;
    sc_out< sc_logic > m_axi_hostmem_2_RREADY;
    sc_in< sc_uint<C_M_AXI_HOSTMEM_2_DATA_WIDTH> > m_axi_hostmem_2_RDATA;
    sc_in< sc_logic > m_axi_hostmem_2_RLAST;
    sc_in< sc_uint<C_M_AXI_HOSTMEM_2_ID_WIDTH> > m_axi_hostmem_2_RID;
    sc_in< sc_uint<C_M_AXI_HOSTMEM_2_RUSER_WIDTH> > m_axi_hostmem_2_RUSER;
    sc_in< sc_lv<2> > m_axi_hostmem_2_RRESP;
    sc_in< sc_logic > m_axi_hostmem_2_BVALID;
    sc_out< sc_logic > m_axi_hostmem_2_BREADY;
    sc_in< sc_lv<2> > m_axi_hostmem_2_BRESP;
    sc_in< sc_uint<C_M_AXI_HOSTMEM_2_ID_WIDTH> > m_axi_hostmem_2_BID;
    sc_in< sc_uint<C_M_AXI_HOSTMEM_2_BUSER_WIDTH> > m_axi_hostmem_2_BUSER;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<1> > ap_var_for_const3;
    sc_signal< sc_lv<3> > ap_var_for_const4;
    sc_signal< sc_lv<2> > ap_var_for_const5;
    sc_signal< sc_lv<4> > ap_var_for_const6;


    // Module declarations
    image_filter(sc_module_name name);
    SC_HAS_PROCESS(image_filter);

    ~image_filter();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    image_filter_CONTROL_BUS_s_axi<C_S_AXI_CONTROL_BUS_ADDR_WIDTH,C_S_AXI_CONTROL_BUS_DATA_WIDTH>* image_filter_CONTROL_BUS_s_axi_U;
    image_filter_hostmem_1_m_axi<32,32,5,16,16,16,16,C_M_AXI_HOSTMEM_1_ID_WIDTH,C_M_AXI_HOSTMEM_1_ADDR_WIDTH,C_M_AXI_HOSTMEM_1_DATA_WIDTH,C_M_AXI_HOSTMEM_1_AWUSER_WIDTH,C_M_AXI_HOSTMEM_1_ARUSER_WIDTH,C_M_AXI_HOSTMEM_1_WUSER_WIDTH,C_M_AXI_HOSTMEM_1_RUSER_WIDTH,C_M_AXI_HOSTMEM_1_BUSER_WIDTH,C_M_AXI_HOSTMEM_1_USER_VALUE,C_M_AXI_HOSTMEM_1_PROT_VALUE,C_M_AXI_HOSTMEM_1_CACHE_VALUE>* image_filter_hostmem_1_m_axi_U;
    image_filter_hostmem_2_m_axi<32,32,5,16,16,16,16,C_M_AXI_HOSTMEM_2_ID_WIDTH,C_M_AXI_HOSTMEM_2_ADDR_WIDTH,C_M_AXI_HOSTMEM_2_DATA_WIDTH,C_M_AXI_HOSTMEM_2_AWUSER_WIDTH,C_M_AXI_HOSTMEM_2_ARUSER_WIDTH,C_M_AXI_HOSTMEM_2_WUSER_WIDTH,C_M_AXI_HOSTMEM_2_RUSER_WIDTH,C_M_AXI_HOSTMEM_2_BUSER_WIDTH,C_M_AXI_HOSTMEM_2_USER_VALUE,C_M_AXI_HOSTMEM_2_PROT_VALUE,C_M_AXI_HOSTMEM_2_CACHE_VALUE>* image_filter_hostmem_2_m_axi_U;
    Mem2Stream_Batch9* Mem2Stream_Batch9_U0;
    bgr2gray* bgr2gray_U0;
    gaussianBlur* gaussianBlur_U0;
    sobel_x* sobel_x_U0;
    sobel_y* sobel_y_U0;
    addWeighted* addWeighted_U0;
    gray2bgr* gray2bgr_U0;
    Stream2Mem_Batch* Stream2Mem_Batch_U0;
    fifo_w32_d128_A* in_stream_V_V_U;
    fifo_w32_d6_A* out_V_c_U;
    fifo_w8_d128_A* gray_stream_V_V_U;
    fifo_w8_d128_A* gaussian_stream_x_V_s_U;
    fifo_w8_d128_A* gaussian_stream_y_V_s_U;
    fifo_w8_d128_A* sobel_stream_x_V_V_U;
    fifo_w8_d128_A* sobel_stream_y_V_V_U;
    fifo_w8_d128_A* addWeight_stream_V_V_U;
    fifo_w32_d128_A* out_stream_V_V_U;
    start_for_bgr2grapcA* start_for_bgr2grapcA_U;
    start_for_Stream2qcK* start_for_Stream2qcK_U;
    start_for_gaussiarcU* start_for_gaussiarcU_U;
    start_for_sobel_xsc4* start_for_sobel_xsc4_U;
    start_for_sobel_ytde* start_for_sobel_ytde_U;
    start_for_addWeigudo* start_for_addWeigudo_U;
    start_for_gray2bgvdy* start_for_gray2bgvdy_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<32> > in_V;
    sc_signal< sc_lv<32> > out_V;
    sc_signal< sc_lv<32> > rows;
    sc_signal< sc_lv<32> > cols;
    sc_signal< sc_logic > hostmem_1_AWREADY;
    sc_signal< sc_logic > hostmem_1_WREADY;
    sc_signal< sc_logic > hostmem_1_ARREADY;
    sc_signal< sc_logic > hostmem_1_RVALID;
    sc_signal< sc_lv<32> > hostmem_1_RDATA;
    sc_signal< sc_logic > hostmem_1_RLAST;
    sc_signal< sc_lv<1> > hostmem_1_RID;
    sc_signal< sc_lv<1> > hostmem_1_RUSER;
    sc_signal< sc_lv<2> > hostmem_1_RRESP;
    sc_signal< sc_logic > hostmem_1_BVALID;
    sc_signal< sc_lv<2> > hostmem_1_BRESP;
    sc_signal< sc_lv<1> > hostmem_1_BID;
    sc_signal< sc_lv<1> > hostmem_1_BUSER;
    sc_signal< sc_logic > hostmem_2_AWREADY;
    sc_signal< sc_logic > hostmem_2_WREADY;
    sc_signal< sc_logic > hostmem_2_ARREADY;
    sc_signal< sc_logic > hostmem_2_RVALID;
    sc_signal< sc_lv<32> > hostmem_2_RDATA;
    sc_signal< sc_logic > hostmem_2_RLAST;
    sc_signal< sc_lv<1> > hostmem_2_RID;
    sc_signal< sc_lv<1> > hostmem_2_RUSER;
    sc_signal< sc_lv<2> > hostmem_2_RRESP;
    sc_signal< sc_logic > hostmem_2_BVALID;
    sc_signal< sc_lv<2> > hostmem_2_BRESP;
    sc_signal< sc_lv<1> > hostmem_2_BID;
    sc_signal< sc_lv<1> > hostmem_2_BUSER;
    sc_signal< sc_logic > Mem2Stream_Batch9_U0_ap_start;
    sc_signal< sc_logic > Mem2Stream_Batch9_U0_start_full_n;
    sc_signal< sc_logic > Mem2Stream_Batch9_U0_ap_done;
    sc_signal< sc_logic > Mem2Stream_Batch9_U0_ap_continue;
    sc_signal< sc_logic > Mem2Stream_Batch9_U0_ap_idle;
    sc_signal< sc_logic > Mem2Stream_Batch9_U0_ap_ready;
    sc_signal< sc_logic > Mem2Stream_Batch9_U0_start_out;
    sc_signal< sc_logic > Mem2Stream_Batch9_U0_start_write;
    sc_signal< sc_logic > Mem2Stream_Batch9_U0_m_axi_in_V_AWVALID;
    sc_signal< sc_lv<32> > Mem2Stream_Batch9_U0_m_axi_in_V_AWADDR;
    sc_signal< sc_lv<1> > Mem2Stream_Batch9_U0_m_axi_in_V_AWID;
    sc_signal< sc_lv<32> > Mem2Stream_Batch9_U0_m_axi_in_V_AWLEN;
    sc_signal< sc_lv<3> > Mem2Stream_Batch9_U0_m_axi_in_V_AWSIZE;
    sc_signal< sc_lv<2> > Mem2Stream_Batch9_U0_m_axi_in_V_AWBURST;
    sc_signal< sc_lv<2> > Mem2Stream_Batch9_U0_m_axi_in_V_AWLOCK;
    sc_signal< sc_lv<4> > Mem2Stream_Batch9_U0_m_axi_in_V_AWCACHE;
    sc_signal< sc_lv<3> > Mem2Stream_Batch9_U0_m_axi_in_V_AWPROT;
    sc_signal< sc_lv<4> > Mem2Stream_Batch9_U0_m_axi_in_V_AWQOS;
    sc_signal< sc_lv<4> > Mem2Stream_Batch9_U0_m_axi_in_V_AWREGION;
    sc_signal< sc_lv<1> > Mem2Stream_Batch9_U0_m_axi_in_V_AWUSER;
    sc_signal< sc_logic > Mem2Stream_Batch9_U0_m_axi_in_V_WVALID;
    sc_signal< sc_lv<32> > Mem2Stream_Batch9_U0_m_axi_in_V_WDATA;
    sc_signal< sc_lv<4> > Mem2Stream_Batch9_U0_m_axi_in_V_WSTRB;
    sc_signal< sc_logic > Mem2Stream_Batch9_U0_m_axi_in_V_WLAST;
    sc_signal< sc_lv<1> > Mem2Stream_Batch9_U0_m_axi_in_V_WID;
    sc_signal< sc_lv<1> > Mem2Stream_Batch9_U0_m_axi_in_V_WUSER;
    sc_signal< sc_logic > Mem2Stream_Batch9_U0_m_axi_in_V_ARVALID;
    sc_signal< sc_lv<32> > Mem2Stream_Batch9_U0_m_axi_in_V_ARADDR;
    sc_signal< sc_lv<1> > Mem2Stream_Batch9_U0_m_axi_in_V_ARID;
    sc_signal< sc_lv<32> > Mem2Stream_Batch9_U0_m_axi_in_V_ARLEN;
    sc_signal< sc_lv<3> > Mem2Stream_Batch9_U0_m_axi_in_V_ARSIZE;
    sc_signal< sc_lv<2> > Mem2Stream_Batch9_U0_m_axi_in_V_ARBURST;
    sc_signal< sc_lv<2> > Mem2Stream_Batch9_U0_m_axi_in_V_ARLOCK;
    sc_signal< sc_lv<4> > Mem2Stream_Batch9_U0_m_axi_in_V_ARCACHE;
    sc_signal< sc_lv<3> > Mem2Stream_Batch9_U0_m_axi_in_V_ARPROT;
    sc_signal< sc_lv<4> > Mem2Stream_Batch9_U0_m_axi_in_V_ARQOS;
    sc_signal< sc_lv<4> > Mem2Stream_Batch9_U0_m_axi_in_V_ARREGION;
    sc_signal< sc_lv<1> > Mem2Stream_Batch9_U0_m_axi_in_V_ARUSER;
    sc_signal< sc_logic > Mem2Stream_Batch9_U0_m_axi_in_V_RREADY;
    sc_signal< sc_logic > Mem2Stream_Batch9_U0_m_axi_in_V_BREADY;
    sc_signal< sc_lv<32> > Mem2Stream_Batch9_U0_out_V_V_din;
    sc_signal< sc_logic > Mem2Stream_Batch9_U0_out_V_V_write;
    sc_signal< sc_lv<32> > Mem2Stream_Batch9_U0_out_V_out_din;
    sc_signal< sc_logic > Mem2Stream_Batch9_U0_out_V_out_write;
    sc_signal< sc_logic > bgr2gray_U0_ap_start;
    sc_signal< sc_logic > bgr2gray_U0_ap_done;
    sc_signal< sc_logic > bgr2gray_U0_ap_continue;
    sc_signal< sc_logic > bgr2gray_U0_ap_idle;
    sc_signal< sc_logic > bgr2gray_U0_ap_ready;
    sc_signal< sc_logic > bgr2gray_U0_start_out;
    sc_signal< sc_logic > bgr2gray_U0_start_write;
    sc_signal< sc_logic > bgr2gray_U0_src_V_V_read;
    sc_signal< sc_lv<8> > bgr2gray_U0_dst_V_V_din;
    sc_signal< sc_logic > bgr2gray_U0_dst_V_V_write;
    sc_signal< sc_logic > gaussianBlur_U0_ap_start;
    sc_signal< sc_logic > gaussianBlur_U0_start_full_n;
    sc_signal< sc_logic > gaussianBlur_U0_ap_done;
    sc_signal< sc_logic > gaussianBlur_U0_ap_continue;
    sc_signal< sc_logic > gaussianBlur_U0_ap_idle;
    sc_signal< sc_logic > gaussianBlur_U0_ap_ready;
    sc_signal< sc_logic > gaussianBlur_U0_start_out;
    sc_signal< sc_logic > gaussianBlur_U0_start_write;
    sc_signal< sc_logic > gaussianBlur_U0_src_V_V_read;
    sc_signal< sc_lv<8> > gaussianBlur_U0_dst_x_V_V_din;
    sc_signal< sc_logic > gaussianBlur_U0_dst_x_V_V_write;
    sc_signal< sc_lv<8> > gaussianBlur_U0_dst_y_V_V_din;
    sc_signal< sc_logic > gaussianBlur_U0_dst_y_V_V_write;
    sc_signal< sc_logic > sobel_x_U0_ap_start;
    sc_signal< sc_logic > sobel_x_U0_ap_done;
    sc_signal< sc_logic > sobel_x_U0_ap_continue;
    sc_signal< sc_logic > sobel_x_U0_ap_idle;
    sc_signal< sc_logic > sobel_x_U0_ap_ready;
    sc_signal< sc_logic > sobel_x_U0_start_out;
    sc_signal< sc_logic > sobel_x_U0_start_write;
    sc_signal< sc_logic > sobel_x_U0_src_V_V_read;
    sc_signal< sc_lv<8> > sobel_x_U0_dst_V_V_din;
    sc_signal< sc_logic > sobel_x_U0_dst_V_V_write;
    sc_signal< sc_logic > sobel_y_U0_ap_start;
    sc_signal< sc_logic > sobel_y_U0_ap_done;
    sc_signal< sc_logic > sobel_y_U0_ap_continue;
    sc_signal< sc_logic > sobel_y_U0_ap_idle;
    sc_signal< sc_logic > sobel_y_U0_ap_ready;
    sc_signal< sc_logic > sobel_y_U0_src_V_V_read;
    sc_signal< sc_lv<8> > sobel_y_U0_dst_V_V_din;
    sc_signal< sc_logic > sobel_y_U0_dst_V_V_write;
    sc_signal< sc_logic > addWeighted_U0_ap_start;
    sc_signal< sc_logic > addWeighted_U0_ap_done;
    sc_signal< sc_logic > addWeighted_U0_ap_continue;
    sc_signal< sc_logic > addWeighted_U0_ap_idle;
    sc_signal< sc_logic > addWeighted_U0_ap_ready;
    sc_signal< sc_logic > addWeighted_U0_start_out;
    sc_signal< sc_logic > addWeighted_U0_start_write;
    sc_signal< sc_logic > addWeighted_U0_src_x_V_V_read;
    sc_signal< sc_logic > addWeighted_U0_src_y_V_V_read;
    sc_signal< sc_lv<8> > addWeighted_U0_dst_V_V_din;
    sc_signal< sc_logic > addWeighted_U0_dst_V_V_write;
    sc_signal< sc_logic > gray2bgr_U0_ap_start;
    sc_signal< sc_logic > gray2bgr_U0_ap_done;
    sc_signal< sc_logic > gray2bgr_U0_ap_continue;
    sc_signal< sc_logic > gray2bgr_U0_ap_idle;
    sc_signal< sc_logic > gray2bgr_U0_ap_ready;
    sc_signal< sc_logic > gray2bgr_U0_src_V_V_read;
    sc_signal< sc_lv<32> > gray2bgr_U0_dst_V_V_din;
    sc_signal< sc_logic > gray2bgr_U0_dst_V_V_write;
    sc_signal< sc_logic > Stream2Mem_Batch_U0_ap_start;
    sc_signal< sc_logic > Stream2Mem_Batch_U0_ap_done;
    sc_signal< sc_logic > Stream2Mem_Batch_U0_ap_continue;
    sc_signal< sc_logic > Stream2Mem_Batch_U0_ap_idle;
    sc_signal< sc_logic > Stream2Mem_Batch_U0_ap_ready;
    sc_signal< sc_logic > Stream2Mem_Batch_U0_in_V_V_read;
    sc_signal< sc_logic > Stream2Mem_Batch_U0_m_axi_out_V_AWVALID;
    sc_signal< sc_lv<32> > Stream2Mem_Batch_U0_m_axi_out_V_AWADDR;
    sc_signal< sc_lv<1> > Stream2Mem_Batch_U0_m_axi_out_V_AWID;
    sc_signal< sc_lv<32> > Stream2Mem_Batch_U0_m_axi_out_V_AWLEN;
    sc_signal< sc_lv<3> > Stream2Mem_Batch_U0_m_axi_out_V_AWSIZE;
    sc_signal< sc_lv<2> > Stream2Mem_Batch_U0_m_axi_out_V_AWBURST;
    sc_signal< sc_lv<2> > Stream2Mem_Batch_U0_m_axi_out_V_AWLOCK;
    sc_signal< sc_lv<4> > Stream2Mem_Batch_U0_m_axi_out_V_AWCACHE;
    sc_signal< sc_lv<3> > Stream2Mem_Batch_U0_m_axi_out_V_AWPROT;
    sc_signal< sc_lv<4> > Stream2Mem_Batch_U0_m_axi_out_V_AWQOS;
    sc_signal< sc_lv<4> > Stream2Mem_Batch_U0_m_axi_out_V_AWREGION;
    sc_signal< sc_lv<1> > Stream2Mem_Batch_U0_m_axi_out_V_AWUSER;
    sc_signal< sc_logic > Stream2Mem_Batch_U0_m_axi_out_V_WVALID;
    sc_signal< sc_lv<32> > Stream2Mem_Batch_U0_m_axi_out_V_WDATA;
    sc_signal< sc_lv<4> > Stream2Mem_Batch_U0_m_axi_out_V_WSTRB;
    sc_signal< sc_logic > Stream2Mem_Batch_U0_m_axi_out_V_WLAST;
    sc_signal< sc_lv<1> > Stream2Mem_Batch_U0_m_axi_out_V_WID;
    sc_signal< sc_lv<1> > Stream2Mem_Batch_U0_m_axi_out_V_WUSER;
    sc_signal< sc_logic > Stream2Mem_Batch_U0_m_axi_out_V_ARVALID;
    sc_signal< sc_lv<32> > Stream2Mem_Batch_U0_m_axi_out_V_ARADDR;
    sc_signal< sc_lv<1> > Stream2Mem_Batch_U0_m_axi_out_V_ARID;
    sc_signal< sc_lv<32> > Stream2Mem_Batch_U0_m_axi_out_V_ARLEN;
    sc_signal< sc_lv<3> > Stream2Mem_Batch_U0_m_axi_out_V_ARSIZE;
    sc_signal< sc_lv<2> > Stream2Mem_Batch_U0_m_axi_out_V_ARBURST;
    sc_signal< sc_lv<2> > Stream2Mem_Batch_U0_m_axi_out_V_ARLOCK;
    sc_signal< sc_lv<4> > Stream2Mem_Batch_U0_m_axi_out_V_ARCACHE;
    sc_signal< sc_lv<3> > Stream2Mem_Batch_U0_m_axi_out_V_ARPROT;
    sc_signal< sc_lv<4> > Stream2Mem_Batch_U0_m_axi_out_V_ARQOS;
    sc_signal< sc_lv<4> > Stream2Mem_Batch_U0_m_axi_out_V_ARREGION;
    sc_signal< sc_lv<1> > Stream2Mem_Batch_U0_m_axi_out_V_ARUSER;
    sc_signal< sc_logic > Stream2Mem_Batch_U0_m_axi_out_V_RREADY;
    sc_signal< sc_logic > Stream2Mem_Batch_U0_m_axi_out_V_BREADY;
    sc_signal< sc_logic > Stream2Mem_Batch_U0_out_V_offset_read;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > in_stream_V_V_full_n;
    sc_signal< sc_lv<32> > in_stream_V_V_dout;
    sc_signal< sc_logic > in_stream_V_V_empty_n;
    sc_signal< sc_logic > out_V_c_full_n;
    sc_signal< sc_lv<32> > out_V_c_dout;
    sc_signal< sc_logic > out_V_c_empty_n;
    sc_signal< sc_logic > gray_stream_V_V_full_n;
    sc_signal< sc_lv<8> > gray_stream_V_V_dout;
    sc_signal< sc_logic > gray_stream_V_V_empty_n;
    sc_signal< sc_logic > gaussian_stream_x_V_s_full_n;
    sc_signal< sc_lv<8> > gaussian_stream_x_V_s_dout;
    sc_signal< sc_logic > gaussian_stream_x_V_s_empty_n;
    sc_signal< sc_logic > gaussian_stream_y_V_s_full_n;
    sc_signal< sc_lv<8> > gaussian_stream_y_V_s_dout;
    sc_signal< sc_logic > gaussian_stream_y_V_s_empty_n;
    sc_signal< sc_logic > sobel_stream_x_V_V_full_n;
    sc_signal< sc_lv<8> > sobel_stream_x_V_V_dout;
    sc_signal< sc_logic > sobel_stream_x_V_V_empty_n;
    sc_signal< sc_logic > sobel_stream_y_V_V_full_n;
    sc_signal< sc_lv<8> > sobel_stream_y_V_V_dout;
    sc_signal< sc_logic > sobel_stream_y_V_V_empty_n;
    sc_signal< sc_logic > addWeight_stream_V_V_full_n;
    sc_signal< sc_lv<8> > addWeight_stream_V_V_dout;
    sc_signal< sc_logic > addWeight_stream_V_V_empty_n;
    sc_signal< sc_logic > out_stream_V_V_full_n;
    sc_signal< sc_lv<32> > out_stream_V_V_dout;
    sc_signal< sc_logic > out_stream_V_V_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_lv<1> > start_for_bgr2gray_U0_din;
    sc_signal< sc_logic > start_for_bgr2gray_U0_full_n;
    sc_signal< sc_lv<1> > start_for_bgr2gray_U0_dout;
    sc_signal< sc_logic > start_for_bgr2gray_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_Stream2Mem_Batch_U0_din;
    sc_signal< sc_logic > start_for_Stream2Mem_Batch_U0_full_n;
    sc_signal< sc_lv<1> > start_for_Stream2Mem_Batch_U0_dout;
    sc_signal< sc_logic > start_for_Stream2Mem_Batch_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_gaussianBlur_U0_din;
    sc_signal< sc_logic > start_for_gaussianBlur_U0_full_n;
    sc_signal< sc_lv<1> > start_for_gaussianBlur_U0_dout;
    sc_signal< sc_logic > start_for_gaussianBlur_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_sobel_x_U0_din;
    sc_signal< sc_logic > start_for_sobel_x_U0_full_n;
    sc_signal< sc_lv<1> > start_for_sobel_x_U0_dout;
    sc_signal< sc_logic > start_for_sobel_x_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_sobel_y_U0_din;
    sc_signal< sc_logic > start_for_sobel_y_U0_full_n;
    sc_signal< sc_lv<1> > start_for_sobel_y_U0_dout;
    sc_signal< sc_logic > start_for_sobel_y_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_addWeighted_U0_din;
    sc_signal< sc_logic > start_for_addWeighted_U0_full_n;
    sc_signal< sc_lv<1> > start_for_addWeighted_U0_dout;
    sc_signal< sc_logic > start_for_addWeighted_U0_empty_n;
    sc_signal< sc_logic > sobel_y_U0_start_full_n;
    sc_signal< sc_logic > sobel_y_U0_start_write;
    sc_signal< sc_lv<1> > start_for_gray2bgr_U0_din;
    sc_signal< sc_logic > start_for_gray2bgr_U0_full_n;
    sc_signal< sc_lv<1> > start_for_gray2bgr_U0_dout;
    sc_signal< sc_logic > start_for_gray2bgr_U0_empty_n;
    sc_signal< sc_logic > gray2bgr_U0_start_full_n;
    sc_signal< sc_logic > gray2bgr_U0_start_write;
    sc_signal< sc_logic > Stream2Mem_Batch_U0_start_full_n;
    sc_signal< sc_logic > Stream2Mem_Batch_U0_start_write;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_S_AXI_WSTRB_WIDTH;
    static const int C_S_AXI_ADDR_WIDTH;
    static const sc_logic ap_const_logic_1;
    static const int C_M_AXI_HOSTMEM_1_USER_VALUE;
    static const int C_M_AXI_HOSTMEM_1_PROT_VALUE;
    static const int C_M_AXI_HOSTMEM_1_CACHE_VALUE;
    static const int C_M_AXI_ID_WIDTH;
    static const int C_M_AXI_ADDR_WIDTH;
    static const int C_M_AXI_DATA_WIDTH;
    static const int C_M_AXI_WSTRB_WIDTH;
    static const int C_M_AXI_AWUSER_WIDTH;
    static const int C_M_AXI_ARUSER_WIDTH;
    static const int C_M_AXI_WUSER_WIDTH;
    static const int C_M_AXI_RUSER_WIDTH;
    static const int C_M_AXI_BUSER_WIDTH;
    static const int C_M_AXI_HOSTMEM_2_USER_VALUE;
    static const int C_M_AXI_HOSTMEM_2_PROT_VALUE;
    static const int C_M_AXI_HOSTMEM_2_CACHE_VALUE;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_Mem2Stream_Batch9_U0_ap_continue();
    void thread_Mem2Stream_Batch9_U0_ap_start();
    void thread_Mem2Stream_Batch9_U0_start_full_n();
    void thread_Stream2Mem_Batch_U0_ap_continue();
    void thread_Stream2Mem_Batch_U0_ap_start();
    void thread_Stream2Mem_Batch_U0_start_full_n();
    void thread_Stream2Mem_Batch_U0_start_write();
    void thread_addWeighted_U0_ap_continue();
    void thread_addWeighted_U0_ap_start();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_bgr2gray_U0_ap_continue();
    void thread_bgr2gray_U0_ap_start();
    void thread_gaussianBlur_U0_ap_continue();
    void thread_gaussianBlur_U0_ap_start();
    void thread_gaussianBlur_U0_start_full_n();
    void thread_gray2bgr_U0_ap_continue();
    void thread_gray2bgr_U0_ap_start();
    void thread_gray2bgr_U0_start_full_n();
    void thread_gray2bgr_U0_start_write();
    void thread_sobel_x_U0_ap_continue();
    void thread_sobel_x_U0_ap_start();
    void thread_sobel_y_U0_ap_continue();
    void thread_sobel_y_U0_ap_start();
    void thread_sobel_y_U0_start_full_n();
    void thread_sobel_y_U0_start_write();
    void thread_start_for_Stream2Mem_Batch_U0_din();
    void thread_start_for_addWeighted_U0_din();
    void thread_start_for_bgr2gray_U0_din();
    void thread_start_for_gaussianBlur_U0_din();
    void thread_start_for_gray2bgr_U0_din();
    void thread_start_for_sobel_x_U0_din();
    void thread_start_for_sobel_y_U0_din();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
