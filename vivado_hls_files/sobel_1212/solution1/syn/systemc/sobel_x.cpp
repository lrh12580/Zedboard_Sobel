// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sobel_x.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sobel_x::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sobel_x::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> sobel_x::ap_ST_fsm_state1 = "1";
const sc_lv<6> sobel_x::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<6> sobel_x::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<6> sobel_x::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<6> sobel_x::ap_ST_fsm_state8 = "10000";
const sc_lv<6> sobel_x::ap_ST_fsm_state9 = "100000";
const bool sobel_x::ap_const_boolean_1 = true;
const sc_lv<32> sobel_x::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> sobel_x::ap_const_lv32_2 = "10";
const bool sobel_x::ap_const_boolean_0 = false;
const sc_lv<1> sobel_x::ap_const_lv1_0 = "0";
const sc_lv<32> sobel_x::ap_const_lv32_3 = "11";
const sc_lv<1> sobel_x::ap_const_lv1_1 = "1";
const sc_lv<32> sobel_x::ap_const_lv32_5 = "101";
const sc_lv<32> sobel_x::ap_const_lv32_1 = "1";
const sc_lv<19> sobel_x::ap_const_lv19_1 = "1";
const sc_lv<10> sobel_x::ap_const_lv10_0 = "0000000000";
const sc_lv<32> sobel_x::ap_const_lv32_4 = "100";
const sc_lv<8> sobel_x::ap_const_lv8_0 = "00000000";
const sc_lv<19> sobel_x::ap_const_lv19_40001 = "1000000000000000001";
const sc_lv<32> sobel_x::ap_const_lv32_1F = "11111";
const sc_lv<31> sobel_x::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> sobel_x::ap_const_lv32_1FF = "111111111";
const sc_lv<19> sobel_x::ap_const_lv19_201 = "1000000001";
const sc_lv<8> sobel_x::ap_const_lv8_1 = "1";
const sc_lv<32> sobel_x::ap_const_lv32_A = "1010";
const sc_lv<10> sobel_x::ap_const_lv10_201 = "1000000001";
const sc_lv<10> sobel_x::ap_const_lv10_1 = "1";

sobel_x::sobel_x(sc_module_name name) : sc_module(name), mVcdFile(0) {
    lineBuff_val_0_V_U = new gaussianBlur_linefYi("lineBuff_val_0_V_U");
    lineBuff_val_0_V_U->clk(ap_clk);
    lineBuff_val_0_V_U->reset(ap_rst);
    lineBuff_val_0_V_U->address0(lineBuff_val_0_V_address0);
    lineBuff_val_0_V_U->ce0(lineBuff_val_0_V_ce0);
    lineBuff_val_0_V_U->we0(lineBuff_val_0_V_we0);
    lineBuff_val_0_V_U->d0(lineBuff_val_1_V_q0);
    lineBuff_val_0_V_U->q0(lineBuff_val_0_V_q0);
    lineBuff_val_0_V_U->address1(lineBuff_val_0_V_address1);
    lineBuff_val_0_V_U->ce1(lineBuff_val_0_V_ce1);
    lineBuff_val_0_V_U->q1(lineBuff_val_0_V_q1);
    lineBuff_val_1_V_U = new gaussianBlur_linefYi("lineBuff_val_1_V_U");
    lineBuff_val_1_V_U->clk(ap_clk);
    lineBuff_val_1_V_U->reset(ap_rst);
    lineBuff_val_1_V_U->address0(lineBuff_val_1_V_address0);
    lineBuff_val_1_V_U->ce0(lineBuff_val_1_V_ce0);
    lineBuff_val_1_V_U->we0(lineBuff_val_1_V_we0);
    lineBuff_val_1_V_U->d0(lineBuff_val_2_V_q0);
    lineBuff_val_1_V_U->q0(lineBuff_val_1_V_q0);
    lineBuff_val_1_V_U->address1(lineBuff_val_1_V_address1);
    lineBuff_val_1_V_U->ce1(lineBuff_val_1_V_ce1);
    lineBuff_val_1_V_U->q1(lineBuff_val_1_V_q1);
    lineBuff_val_2_V_U = new gaussianBlur_linefYi("lineBuff_val_2_V_U");
    lineBuff_val_2_V_U->clk(ap_clk);
    lineBuff_val_2_V_U->reset(ap_rst);
    lineBuff_val_2_V_U->address0(lineBuff_val_2_V_address0);
    lineBuff_val_2_V_U->ce0(lineBuff_val_2_V_ce0);
    lineBuff_val_2_V_U->we0(lineBuff_val_2_V_we0);
    lineBuff_val_2_V_U->d0(src_V_V_dout);
    lineBuff_val_2_V_U->q0(lineBuff_val_2_V_q0);
    lineBuff_val_2_V_U->address1(lineBuff_val_2_V_address1);
    lineBuff_val_2_V_U->ce1(lineBuff_val_2_V_ce1);
    lineBuff_val_2_V_U->q1(lineBuff_val_2_V_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_accumulator_V_0_2_ca_fu_455_p1);
    sensitive << ( accumulator_V_0_2_reg_661 );

    SC_METHOD(thread_accumulator_V_0_2_fu_410_p2);
    sensitive << ( val_V_0_2_cast_fu_406_p1 );
    sensitive << ( val_V_0_cast_fu_402_p1 );

    SC_METHOD(thread_accumulator_V_1_2_fu_474_p2);
    sensitive << ( accumulator_V_1_fu_458_p2 );
    sensitive << ( val_V_2_1_2_cast_fu_445_p1 );

    SC_METHOD(thread_accumulator_V_1_fu_458_p2);
    sensitive << ( accumulator_V_0_2_ca_fu_455_p1 );
    sensitive << ( p_shl_cast_fu_429_p1 );

    SC_METHOD(thread_accumulator_V_2_2_fu_497_p2);
    sensitive << ( accumulator_V_2_fu_486_p2 );
    sensitive << ( val_V_27_2_cast_fu_452_p1 );

    SC_METHOD(thread_accumulator_V_2_fu_486_p2);
    sensitive << ( accumulator_V_1_2_fu_474_p2 );
    sensitive << ( val_V_27_cast_fu_449_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);
    sensitive << ( src_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond6_reg_547 );

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( src_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond6_reg_547 );

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_01001);
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_tmp_19_reg_588 );

    SC_METHOD(thread_ap_block_pp0_stage2_11001);
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_tmp_19_reg_588 );

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_tmp_19_reg_588 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);
    sensitive << ( src_V_V_empty_n );
    sensitive << ( exitcond6_reg_547 );

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state6_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state7_pp0_stage2_iter1);
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_reg_pp0_iter1_tmp_19_reg_588 );

    SC_METHOD(thread_ap_block_state9);
    sensitive << ( dst_V_V_full_n );
    sensitive << ( exitcond_fu_535_p2 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond6_fu_268_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond_fu_535_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_col_assign_phi_fu_215_p4);
    sensitive << ( exitcond6_reg_547 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( col_assign_reg_211 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( idxCol_1_reg_622 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_countWait_phi_fu_249_p4);
    sensitive << ( exitcond6_reg_547 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( countWait_reg_245 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( phitmp_reg_632 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_idxRow_phi_fu_226_p4);
    sensitive << ( exitcond6_reg_547 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( idxRow_reg_222 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( idxRow_1_reg_583 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_pixConvolved_phi_fu_237_p4);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( pixConvolved_reg_233 );
    sensitive << ( ap_reg_pp0_iter1_exitcond6_reg_547 );
    sensitive << ( pixConvolved_2_reg_627 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_col_assign_4_0_2_fu_363_p2);
    sensitive << ( ap_phi_mux_pixConvolved_phi_fu_237_p4 );

    SC_METHOD(thread_countWait_3_fu_541_p2);
    sensitive << ( countWait_1_reg_257 );

    SC_METHOD(thread_dst_V_V_blk_n);
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_reg_pp0_iter1_tmp_19_reg_588 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond_fu_535_p2 );

    SC_METHOD(thread_dst_V_V_din);
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_tmp_19_reg_588 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond_fu_535_p2 );
    sensitive << ( tmp_V_fu_527_p3 );
    sensitive << ( ap_block_pp0_stage2_01001 );

    SC_METHOD(thread_dst_V_V_write);
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_tmp_19_reg_588 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond_fu_535_p2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_exitcond6_fu_268_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_countWait_phi_fu_249_p4 );

    SC_METHOD(thread_exitcond_fu_535_p2);
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond_fu_535_p2 );
    sensitive << ( countWait_1_reg_257 );

    SC_METHOD(thread_icmp2_fu_306_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond6_fu_268_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_17_fu_296_p4 );

    SC_METHOD(thread_icmp_fu_290_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond6_fu_268_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_14_fu_280_p4 );

    SC_METHOD(thread_idxCol_1_fu_383_p3);
    sensitive << ( tmp_18_reg_572 );
    sensitive << ( idxCol_reg_578 );

    SC_METHOD(thread_idxCol_fu_324_p2);
    sensitive << ( ap_phi_mux_col_assign_phi_fu_215_p4 );

    SC_METHOD(thread_idxRow_1_fu_336_p3);
    sensitive << ( tmp_18_fu_318_p2 );
    sensitive << ( ap_phi_mux_idxRow_phi_fu_226_p4 );
    sensitive << ( idxRow_3_fu_330_p2 );

    SC_METHOD(thread_idxRow_3_fu_330_p2);
    sensitive << ( ap_phi_mux_idxRow_phi_fu_226_p4 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond_fu_535_p2 );

    SC_METHOD(thread_lineBuff_val_0_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_s_reg_551 );
    sensitive << ( tmp_12_fu_350_p1 );

    SC_METHOD(thread_lineBuff_val_0_V_address1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_40_0_2_fu_369_p1 );

    SC_METHOD(thread_lineBuff_val_0_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_lineBuff_val_0_V_ce1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_lineBuff_val_0_V_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond6_reg_547 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_lineBuff_val_1_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_s_fu_274_p1 );
    sensitive << ( lineBuff_val_1_V_ad_reg_556 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_12_fu_350_p1 );

    SC_METHOD(thread_lineBuff_val_1_V_address1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_40_0_2_fu_369_p1 );

    SC_METHOD(thread_lineBuff_val_1_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_lineBuff_val_1_V_ce1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_lineBuff_val_1_V_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond6_reg_547 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_lineBuff_val_2_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_s_fu_274_p1 );
    sensitive << ( lineBuff_val_2_V_ad_reg_561 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_12_fu_350_p1 );

    SC_METHOD(thread_lineBuff_val_2_V_address1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_40_0_2_fu_369_p1 );

    SC_METHOD(thread_lineBuff_val_2_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_lineBuff_val_2_V_ce1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_lineBuff_val_2_V_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond6_reg_547 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_or_cond_fu_312_p2);
    sensitive << ( icmp_fu_290_p2 );
    sensitive << ( icmp2_fu_306_p2 );

    SC_METHOD(thread_out_V_3_fu_515_p2);
    sensitive << ( out_V_reg_676 );

    SC_METHOD(thread_out_V_4_fu_520_p3);
    sensitive << ( out_V_reg_676 );
    sensitive << ( tmp_21_fu_508_p3 );
    sensitive << ( out_V_3_fu_515_p2 );

    SC_METHOD(thread_out_V_fu_503_p2);
    sensitive << ( lineBuff_val_2_V_lo_5_reg_655 );
    sensitive << ( tmp_16_fu_492_p2 );

    SC_METHOD(thread_p_shl_cast_fu_429_p1);
    sensitive << ( p_shl_fu_422_p3 );

    SC_METHOD(thread_p_shl_fu_422_p3);
    sensitive << ( lineBuff_val_1_V_lo_1_reg_637 );

    SC_METHOD(thread_phitmp_fu_396_p2);
    sensitive << ( countWait_reg_245 );

    SC_METHOD(thread_pixConvolved_1_fu_376_p3);
    sensitive << ( or_cond_reg_566 );
    sensitive << ( ap_phi_mux_pixConvolved_phi_fu_237_p4 );
    sensitive << ( pixConvolved_4_fu_357_p2 );

    SC_METHOD(thread_pixConvolved_2_fu_389_p3);
    sensitive << ( tmp_18_reg_572 );
    sensitive << ( pixConvolved_1_fu_376_p3 );

    SC_METHOD(thread_pixConvolved_4_fu_357_p2);
    sensitive << ( ap_phi_mux_pixConvolved_phi_fu_237_p4 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_src_V_V_blk_n);
    sensitive << ( src_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond6_reg_547 );

    SC_METHOD(thread_src_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond6_reg_547 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp_10_fu_416_p2);
    sensitive << ( lineBuff_val_0_V_q0 );
    sensitive << ( lineBuff_val_0_V_q1 );

    SC_METHOD(thread_tmp_11_fu_464_p2);
    sensitive << ( tmp_10_reg_666 );
    sensitive << ( tmp_13_fu_433_p2 );

    SC_METHOD(thread_tmp_12_fu_350_p1);
    sensitive << ( ap_phi_mux_pixConvolved_phi_fu_237_p4 );

    SC_METHOD(thread_tmp_13_fu_433_p2);
    sensitive << ( lineBuff_val_1_V_lo_1_reg_637 );

    SC_METHOD(thread_tmp_14_fu_280_p4);
    sensitive << ( ap_phi_mux_idxRow_phi_fu_226_p4 );

    SC_METHOD(thread_tmp_15_fu_480_p2);
    sensitive << ( tmp_20_fu_469_p2 );
    sensitive << ( tmp_11_fu_464_p2 );

    SC_METHOD(thread_tmp_16_fu_492_p2);
    sensitive << ( lineBuff_val_2_V_lo_4_reg_649 );
    sensitive << ( tmp_15_fu_480_p2 );

    SC_METHOD(thread_tmp_17_fu_296_p4);
    sensitive << ( ap_phi_mux_col_assign_phi_fu_215_p4 );

    SC_METHOD(thread_tmp_18_fu_318_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond6_fu_268_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_col_assign_phi_fu_215_p4 );

    SC_METHOD(thread_tmp_19_fu_344_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond6_fu_268_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_countWait_phi_fu_249_p4 );

    SC_METHOD(thread_tmp_20_fu_469_p2);
    sensitive << ( lineBuff_val_1_V_lo_2_reg_643 );

    SC_METHOD(thread_tmp_21_fu_508_p3);
    sensitive << ( accumulator_V_2_2_reg_671 );

    SC_METHOD(thread_tmp_40_0_2_fu_369_p1);
    sensitive << ( col_assign_4_0_2_fu_363_p2 );

    SC_METHOD(thread_tmp_V_fu_527_p3);
    sensitive << ( ap_reg_pp0_iter1_or_cond_reg_566 );
    sensitive << ( out_V_4_fu_520_p3 );

    SC_METHOD(thread_tmp_s_fu_274_p1);
    sensitive << ( ap_phi_mux_col_assign_phi_fu_215_p4 );

    SC_METHOD(thread_val_V_0_2_cast_fu_406_p1);
    sensitive << ( lineBuff_val_0_V_q1 );

    SC_METHOD(thread_val_V_0_cast_fu_402_p1);
    sensitive << ( lineBuff_val_0_V_q0 );

    SC_METHOD(thread_val_V_27_2_cast_fu_452_p1);
    sensitive << ( lineBuff_val_2_V_lo_5_reg_655 );

    SC_METHOD(thread_val_V_27_cast_fu_449_p1);
    sensitive << ( lineBuff_val_2_V_lo_4_reg_649 );

    SC_METHOD(thread_val_V_2_1_2_cast_fu_445_p1);
    sensitive << ( val_V_2_1_2_fu_438_p3 );

    SC_METHOD(thread_val_V_2_1_2_fu_438_p3);
    sensitive << ( lineBuff_val_1_V_lo_2_reg_643 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond_fu_535_p2 );
    sensitive << ( exitcond6_fu_268_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sobel_x_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, src_V_V_dout, "(port)src_V_V_dout");
    sc_trace(mVcdFile, src_V_V_empty_n, "(port)src_V_V_empty_n");
    sc_trace(mVcdFile, src_V_V_read, "(port)src_V_V_read");
    sc_trace(mVcdFile, dst_V_V_din, "(port)dst_V_V_din");
    sc_trace(mVcdFile, dst_V_V_full_n, "(port)dst_V_V_full_n");
    sc_trace(mVcdFile, dst_V_V_write, "(port)dst_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, src_V_V_blk_n, "src_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, exitcond6_reg_547, "exitcond6_reg_547");
    sc_trace(mVcdFile, dst_V_V_blk_n, "dst_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, tmp_19_reg_588, "tmp_19_reg_588");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_tmp_19_reg_588, "ap_reg_pp0_iter1_tmp_19_reg_588");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, exitcond_fu_535_p2, "exitcond_fu_535_p2");
    sc_trace(mVcdFile, col_assign_reg_211, "col_assign_reg_211");
    sc_trace(mVcdFile, idxRow_reg_222, "idxRow_reg_222");
    sc_trace(mVcdFile, pixConvolved_reg_233, "pixConvolved_reg_233");
    sc_trace(mVcdFile, countWait_reg_245, "countWait_reg_245");
    sc_trace(mVcdFile, exitcond6_fu_268_p2, "exitcond6_fu_268_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter1, "ap_block_state5_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond6_reg_547, "ap_reg_pp0_iter1_exitcond6_reg_547");
    sc_trace(mVcdFile, tmp_s_fu_274_p1, "tmp_s_fu_274_p1");
    sc_trace(mVcdFile, tmp_s_reg_551, "tmp_s_reg_551");
    sc_trace(mVcdFile, lineBuff_val_1_V_ad_reg_556, "lineBuff_val_1_V_ad_reg_556");
    sc_trace(mVcdFile, lineBuff_val_2_V_ad_reg_561, "lineBuff_val_2_V_ad_reg_561");
    sc_trace(mVcdFile, or_cond_fu_312_p2, "or_cond_fu_312_p2");
    sc_trace(mVcdFile, or_cond_reg_566, "or_cond_reg_566");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_or_cond_reg_566, "ap_reg_pp0_iter1_or_cond_reg_566");
    sc_trace(mVcdFile, tmp_18_fu_318_p2, "tmp_18_fu_318_p2");
    sc_trace(mVcdFile, tmp_18_reg_572, "tmp_18_reg_572");
    sc_trace(mVcdFile, idxCol_fu_324_p2, "idxCol_fu_324_p2");
    sc_trace(mVcdFile, idxCol_reg_578, "idxCol_reg_578");
    sc_trace(mVcdFile, idxRow_1_fu_336_p3, "idxRow_1_fu_336_p3");
    sc_trace(mVcdFile, idxRow_1_reg_583, "idxRow_1_reg_583");
    sc_trace(mVcdFile, tmp_19_fu_344_p2, "tmp_19_fu_344_p2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage2_iter1, "ap_block_state7_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, idxCol_1_fu_383_p3, "idxCol_1_fu_383_p3");
    sc_trace(mVcdFile, idxCol_1_reg_622, "idxCol_1_reg_622");
    sc_trace(mVcdFile, pixConvolved_2_fu_389_p3, "pixConvolved_2_fu_389_p3");
    sc_trace(mVcdFile, pixConvolved_2_reg_627, "pixConvolved_2_reg_627");
    sc_trace(mVcdFile, phitmp_fu_396_p2, "phitmp_fu_396_p2");
    sc_trace(mVcdFile, phitmp_reg_632, "phitmp_reg_632");
    sc_trace(mVcdFile, lineBuff_val_1_V_q0, "lineBuff_val_1_V_q0");
    sc_trace(mVcdFile, lineBuff_val_1_V_lo_1_reg_637, "lineBuff_val_1_V_lo_1_reg_637");
    sc_trace(mVcdFile, lineBuff_val_1_V_q1, "lineBuff_val_1_V_q1");
    sc_trace(mVcdFile, lineBuff_val_1_V_lo_2_reg_643, "lineBuff_val_1_V_lo_2_reg_643");
    sc_trace(mVcdFile, lineBuff_val_2_V_q0, "lineBuff_val_2_V_q0");
    sc_trace(mVcdFile, lineBuff_val_2_V_lo_4_reg_649, "lineBuff_val_2_V_lo_4_reg_649");
    sc_trace(mVcdFile, lineBuff_val_2_V_q1, "lineBuff_val_2_V_q1");
    sc_trace(mVcdFile, lineBuff_val_2_V_lo_5_reg_655, "lineBuff_val_2_V_lo_5_reg_655");
    sc_trace(mVcdFile, accumulator_V_0_2_fu_410_p2, "accumulator_V_0_2_fu_410_p2");
    sc_trace(mVcdFile, accumulator_V_0_2_reg_661, "accumulator_V_0_2_reg_661");
    sc_trace(mVcdFile, tmp_10_fu_416_p2, "tmp_10_fu_416_p2");
    sc_trace(mVcdFile, tmp_10_reg_666, "tmp_10_reg_666");
    sc_trace(mVcdFile, accumulator_V_2_2_fu_497_p2, "accumulator_V_2_2_fu_497_p2");
    sc_trace(mVcdFile, accumulator_V_2_2_reg_671, "accumulator_V_2_2_reg_671");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage1_iter1, "ap_block_state6_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, out_V_fu_503_p2, "out_V_fu_503_p2");
    sc_trace(mVcdFile, out_V_reg_676, "out_V_reg_676");
    sc_trace(mVcdFile, countWait_3_fu_541_p2, "countWait_3_fu_541_p2");
    sc_trace(mVcdFile, ap_block_state9, "ap_block_state9");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, lineBuff_val_0_V_address0, "lineBuff_val_0_V_address0");
    sc_trace(mVcdFile, lineBuff_val_0_V_ce0, "lineBuff_val_0_V_ce0");
    sc_trace(mVcdFile, lineBuff_val_0_V_we0, "lineBuff_val_0_V_we0");
    sc_trace(mVcdFile, lineBuff_val_0_V_q0, "lineBuff_val_0_V_q0");
    sc_trace(mVcdFile, lineBuff_val_0_V_address1, "lineBuff_val_0_V_address1");
    sc_trace(mVcdFile, lineBuff_val_0_V_ce1, "lineBuff_val_0_V_ce1");
    sc_trace(mVcdFile, lineBuff_val_0_V_q1, "lineBuff_val_0_V_q1");
    sc_trace(mVcdFile, lineBuff_val_1_V_address0, "lineBuff_val_1_V_address0");
    sc_trace(mVcdFile, lineBuff_val_1_V_ce0, "lineBuff_val_1_V_ce0");
    sc_trace(mVcdFile, lineBuff_val_1_V_we0, "lineBuff_val_1_V_we0");
    sc_trace(mVcdFile, lineBuff_val_1_V_address1, "lineBuff_val_1_V_address1");
    sc_trace(mVcdFile, lineBuff_val_1_V_ce1, "lineBuff_val_1_V_ce1");
    sc_trace(mVcdFile, lineBuff_val_2_V_address0, "lineBuff_val_2_V_address0");
    sc_trace(mVcdFile, lineBuff_val_2_V_ce0, "lineBuff_val_2_V_ce0");
    sc_trace(mVcdFile, lineBuff_val_2_V_we0, "lineBuff_val_2_V_we0");
    sc_trace(mVcdFile, lineBuff_val_2_V_address1, "lineBuff_val_2_V_address1");
    sc_trace(mVcdFile, lineBuff_val_2_V_ce1, "lineBuff_val_2_V_ce1");
    sc_trace(mVcdFile, ap_phi_mux_col_assign_phi_fu_215_p4, "ap_phi_mux_col_assign_phi_fu_215_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_idxRow_phi_fu_226_p4, "ap_phi_mux_idxRow_phi_fu_226_p4");
    sc_trace(mVcdFile, ap_phi_mux_pixConvolved_phi_fu_237_p4, "ap_phi_mux_pixConvolved_phi_fu_237_p4");
    sc_trace(mVcdFile, ap_phi_mux_countWait_phi_fu_249_p4, "ap_phi_mux_countWait_phi_fu_249_p4");
    sc_trace(mVcdFile, countWait_1_reg_257, "countWait_1_reg_257");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_12_fu_350_p1, "tmp_12_fu_350_p1");
    sc_trace(mVcdFile, tmp_40_0_2_fu_369_p1, "tmp_40_0_2_fu_369_p1");
    sc_trace(mVcdFile, tmp_V_fu_527_p3, "tmp_V_fu_527_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage2_01001, "ap_block_pp0_stage2_01001");
    sc_trace(mVcdFile, tmp_14_fu_280_p4, "tmp_14_fu_280_p4");
    sc_trace(mVcdFile, tmp_17_fu_296_p4, "tmp_17_fu_296_p4");
    sc_trace(mVcdFile, icmp_fu_290_p2, "icmp_fu_290_p2");
    sc_trace(mVcdFile, icmp2_fu_306_p2, "icmp2_fu_306_p2");
    sc_trace(mVcdFile, idxRow_3_fu_330_p2, "idxRow_3_fu_330_p2");
    sc_trace(mVcdFile, col_assign_4_0_2_fu_363_p2, "col_assign_4_0_2_fu_363_p2");
    sc_trace(mVcdFile, pixConvolved_4_fu_357_p2, "pixConvolved_4_fu_357_p2");
    sc_trace(mVcdFile, pixConvolved_1_fu_376_p3, "pixConvolved_1_fu_376_p3");
    sc_trace(mVcdFile, val_V_0_2_cast_fu_406_p1, "val_V_0_2_cast_fu_406_p1");
    sc_trace(mVcdFile, val_V_0_cast_fu_402_p1, "val_V_0_cast_fu_402_p1");
    sc_trace(mVcdFile, p_shl_fu_422_p3, "p_shl_fu_422_p3");
    sc_trace(mVcdFile, val_V_2_1_2_fu_438_p3, "val_V_2_1_2_fu_438_p3");
    sc_trace(mVcdFile, accumulator_V_0_2_ca_fu_455_p1, "accumulator_V_0_2_ca_fu_455_p1");
    sc_trace(mVcdFile, p_shl_cast_fu_429_p1, "p_shl_cast_fu_429_p1");
    sc_trace(mVcdFile, tmp_13_fu_433_p2, "tmp_13_fu_433_p2");
    sc_trace(mVcdFile, accumulator_V_1_fu_458_p2, "accumulator_V_1_fu_458_p2");
    sc_trace(mVcdFile, val_V_2_1_2_cast_fu_445_p1, "val_V_2_1_2_cast_fu_445_p1");
    sc_trace(mVcdFile, tmp_20_fu_469_p2, "tmp_20_fu_469_p2");
    sc_trace(mVcdFile, tmp_11_fu_464_p2, "tmp_11_fu_464_p2");
    sc_trace(mVcdFile, accumulator_V_1_2_fu_474_p2, "accumulator_V_1_2_fu_474_p2");
    sc_trace(mVcdFile, val_V_27_cast_fu_449_p1, "val_V_27_cast_fu_449_p1");
    sc_trace(mVcdFile, tmp_15_fu_480_p2, "tmp_15_fu_480_p2");
    sc_trace(mVcdFile, accumulator_V_2_fu_486_p2, "accumulator_V_2_fu_486_p2");
    sc_trace(mVcdFile, val_V_27_2_cast_fu_452_p1, "val_V_27_2_cast_fu_452_p1");
    sc_trace(mVcdFile, tmp_16_fu_492_p2, "tmp_16_fu_492_p2");
    sc_trace(mVcdFile, tmp_21_fu_508_p3, "tmp_21_fu_508_p3");
    sc_trace(mVcdFile, out_V_3_fu_515_p2, "out_V_3_fu_515_p2");
    sc_trace(mVcdFile, out_V_4_fu_520_p3, "out_V_4_fu_520_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

sobel_x::~sobel_x() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete lineBuff_val_0_V_U;
    delete lineBuff_val_1_V_U;
    delete lineBuff_val_2_V_U;
}

void sobel_x::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_535_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read())) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_535_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(exitcond6_reg_547.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        col_assign_reg_211 = idxCol_1_reg_622.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        col_assign_reg_211 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        countWait_1_reg_257 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_535_p2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_535_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read())))) {
        countWait_1_reg_257 = countWait_3_fu_541_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond6_reg_547.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        countWait_reg_245 = phitmp_reg_632.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        countWait_reg_245 = ap_const_lv19_1;
    }
    if ((esl_seteq<1,1,1>(exitcond6_reg_547.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        idxRow_reg_222 = idxRow_1_reg_583.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        idxRow_reg_222 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond6_reg_547.read()))) {
        pixConvolved_reg_233 = pixConvolved_2_reg_627.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        pixConvolved_reg_233 = ap_const_lv32_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(exitcond6_reg_547.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_566.read()))) {
        accumulator_V_0_2_reg_661 = accumulator_V_0_2_fu_410_p2.read();
        tmp_10_reg_666 = tmp_10_fu_416_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond6_reg_547.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter1_or_cond_reg_566.read()))) {
        accumulator_V_2_2_reg_671 = accumulator_V_2_2_fu_497_p2.read();
        out_V_reg_676 = out_V_fu_503_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond6_reg_547 = exitcond6_reg_547.read();
        ap_reg_pp0_iter1_or_cond_reg_566 = or_cond_reg_566.read();
        ap_reg_pp0_iter1_tmp_19_reg_588 = tmp_19_reg_588.read();
        exitcond6_reg_547 = exitcond6_fu_268_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond6_reg_547.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        idxCol_1_reg_622 = idxCol_1_fu_383_p3.read();
        phitmp_reg_632 = phitmp_fu_396_p2.read();
        pixConvolved_2_reg_627 = pixConvolved_2_fu_389_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_268_p2.read()))) {
        idxCol_reg_578 = idxCol_fu_324_p2.read();
        lineBuff_val_1_V_ad_reg_556 =  (sc_lv<9>) (tmp_s_fu_274_p1.read());
        lineBuff_val_2_V_ad_reg_561 =  (sc_lv<9>) (tmp_s_fu_274_p1.read());
        or_cond_reg_566 = or_cond_fu_312_p2.read();
        tmp_18_reg_572 = tmp_18_fu_318_p2.read();
        tmp_19_reg_588 = tmp_19_fu_344_p2.read();
        tmp_s_reg_551 = tmp_s_fu_274_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_268_p2.read()))) {
        idxRow_1_reg_583 = idxRow_1_fu_336_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond6_reg_547.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_566.read()))) {
        lineBuff_val_1_V_lo_1_reg_637 = lineBuff_val_1_V_q0.read();
        lineBuff_val_1_V_lo_2_reg_643 = lineBuff_val_1_V_q1.read();
        lineBuff_val_2_V_lo_4_reg_649 = lineBuff_val_2_V_q0.read();
        lineBuff_val_2_V_lo_5_reg_655 = lineBuff_val_2_V_q1.read();
    }
}

void sobel_x::thread_accumulator_V_0_2_ca_fu_455_p1() {
    accumulator_V_0_2_ca_fu_455_p1 = esl_sext<11,9>(accumulator_V_0_2_reg_661.read());
}

void sobel_x::thread_accumulator_V_0_2_fu_410_p2() {
    accumulator_V_0_2_fu_410_p2 = (!val_V_0_2_cast_fu_406_p1.read().is_01() || !val_V_0_cast_fu_402_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(val_V_0_2_cast_fu_406_p1.read()) - sc_biguint<9>(val_V_0_cast_fu_402_p1.read()));
}

void sobel_x::thread_accumulator_V_1_2_fu_474_p2() {
    accumulator_V_1_2_fu_474_p2 = (!accumulator_V_1_fu_458_p2.read().is_01() || !val_V_2_1_2_cast_fu_445_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(accumulator_V_1_fu_458_p2.read()) + sc_biguint<11>(val_V_2_1_2_cast_fu_445_p1.read()));
}

void sobel_x::thread_accumulator_V_1_fu_458_p2() {
    accumulator_V_1_fu_458_p2 = (!accumulator_V_0_2_ca_fu_455_p1.read().is_01() || !p_shl_cast_fu_429_p1.read().is_01())? sc_lv<11>(): (sc_bigint<11>(accumulator_V_0_2_ca_fu_455_p1.read()) - sc_biguint<11>(p_shl_cast_fu_429_p1.read()));
}

void sobel_x::thread_accumulator_V_2_2_fu_497_p2() {
    accumulator_V_2_2_fu_497_p2 = (!accumulator_V_2_fu_486_p2.read().is_01() || !val_V_27_2_cast_fu_452_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(accumulator_V_2_fu_486_p2.read()) + sc_biguint<11>(val_V_27_2_cast_fu_452_p1.read()));
}

void sobel_x::thread_accumulator_V_2_fu_486_p2() {
    accumulator_V_2_fu_486_p2 = (!accumulator_V_1_2_fu_474_p2.read().is_01() || !val_V_27_cast_fu_449_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(accumulator_V_1_2_fu_474_p2.read()) - sc_biguint<11>(val_V_27_cast_fu_449_p1.read()));
}

void sobel_x::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void sobel_x::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void sobel_x::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void sobel_x::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void sobel_x::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[4];
}

void sobel_x::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[5];
}

void sobel_x::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_x::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_x::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_x::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_x::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond6_reg_547.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, src_V_V_empty_n.read()));
}

void sobel_x::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond6_reg_547.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, src_V_V_empty_n.read()));
}

void sobel_x::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_x::thread_ap_block_pp0_stage2_01001() {
    ap_block_pp0_stage2_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_19_reg_588.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read()));
}

void sobel_x::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_19_reg_588.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read()));
}

void sobel_x::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_19_reg_588.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read()));
}

void sobel_x::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void sobel_x::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_x::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = (esl_seteq<1,1,1>(exitcond6_reg_547.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, src_V_V_empty_n.read()));
}

void sobel_x::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_x::thread_ap_block_state5_pp0_stage0_iter1() {
    ap_block_state5_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_x::thread_ap_block_state6_pp0_stage1_iter1() {
    ap_block_state6_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_x::thread_ap_block_state7_pp0_stage2_iter1() {
    ap_block_state7_pp0_stage2_iter1 = (esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_19_reg_588.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read()));
}

void sobel_x::thread_ap_block_state9() {
    ap_block_state9 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_535_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read()));
}

void sobel_x::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond6_fu_268_p2.read())) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void sobel_x::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_535_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_535_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void sobel_x::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void sobel_x::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sobel_x::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void sobel_x::thread_ap_phi_mux_col_assign_phi_fu_215_p4() {
    if ((esl_seteq<1,1,1>(exitcond6_reg_547.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_col_assign_phi_fu_215_p4 = idxCol_1_reg_622.read();
    } else {
        ap_phi_mux_col_assign_phi_fu_215_p4 = col_assign_reg_211.read();
    }
}

void sobel_x::thread_ap_phi_mux_countWait_phi_fu_249_p4() {
    if ((esl_seteq<1,1,1>(exitcond6_reg_547.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_countWait_phi_fu_249_p4 = phitmp_reg_632.read();
    } else {
        ap_phi_mux_countWait_phi_fu_249_p4 = countWait_reg_245.read();
    }
}

void sobel_x::thread_ap_phi_mux_idxRow_phi_fu_226_p4() {
    if ((esl_seteq<1,1,1>(exitcond6_reg_547.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_idxRow_phi_fu_226_p4 = idxRow_1_reg_583.read();
    } else {
        ap_phi_mux_idxRow_phi_fu_226_p4 = idxRow_reg_222.read();
    }
}

void sobel_x::thread_ap_phi_mux_pixConvolved_phi_fu_237_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond6_reg_547.read()))) {
        ap_phi_mux_pixConvolved_phi_fu_237_p4 = pixConvolved_2_reg_627.read();
    } else {
        ap_phi_mux_pixConvolved_phi_fu_237_p4 = pixConvolved_reg_233.read();
    }
}

void sobel_x::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void sobel_x::thread_col_assign_4_0_2_fu_363_p2() {
    col_assign_4_0_2_fu_363_p2 = (!ap_const_lv32_2.is_01() || !ap_phi_mux_pixConvolved_phi_fu_237_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_2) + sc_biguint<32>(ap_phi_mux_pixConvolved_phi_fu_237_p4.read()));
}

void sobel_x::thread_countWait_3_fu_541_p2() {
    countWait_3_fu_541_p2 = (!countWait_1_reg_257.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(countWait_1_reg_257.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void sobel_x::thread_dst_V_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_19_reg_588.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_535_p2.read())))) {
        dst_V_V_blk_n = dst_V_V_full_n.read();
    } else {
        dst_V_V_blk_n = ap_const_logic_1;
    }
}

void sobel_x::thread_dst_V_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_535_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_535_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read())))) {
        dst_V_V_din = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_19_reg_588.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2_01001.read(), ap_const_boolean_0))) {
        dst_V_V_din = tmp_V_fu_527_p3.read();
    } else {
        dst_V_V_din = "XXXXXXXX";
    }
}

void sobel_x::thread_dst_V_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_535_p2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_535_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_19_reg_588.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        dst_V_V_write = ap_const_logic_1;
    } else {
        dst_V_V_write = ap_const_logic_0;
    }
}

void sobel_x::thread_exitcond6_fu_268_p2() {
    exitcond6_fu_268_p2 = (!ap_phi_mux_countWait_phi_fu_249_p4.read().is_01() || !ap_const_lv19_40001.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_countWait_phi_fu_249_p4.read() == ap_const_lv19_40001);
}

void sobel_x::thread_exitcond_fu_535_p2() {
    exitcond_fu_535_p2 = (!countWait_1_reg_257.read().is_01() || !ap_const_lv10_201.is_01())? sc_lv<1>(): sc_lv<1>(countWait_1_reg_257.read() == ap_const_lv10_201);
}

void sobel_x::thread_icmp2_fu_306_p2() {
    icmp2_fu_306_p2 = (!tmp_17_fu_296_p4.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): (sc_bigint<31>(tmp_17_fu_296_p4.read()) > sc_bigint<31>(ap_const_lv31_0));
}

void sobel_x::thread_icmp_fu_290_p2() {
    icmp_fu_290_p2 = (!tmp_14_fu_280_p4.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): (sc_bigint<31>(tmp_14_fu_280_p4.read()) > sc_bigint<31>(ap_const_lv31_0));
}

void sobel_x::thread_idxCol_1_fu_383_p3() {
    idxCol_1_fu_383_p3 = (!tmp_18_reg_572.read()[0].is_01())? sc_lv<32>(): ((tmp_18_reg_572.read()[0].to_bool())? idxCol_reg_578.read(): ap_const_lv32_0);
}

void sobel_x::thread_idxCol_fu_324_p2() {
    idxCol_fu_324_p2 = (!ap_const_lv32_1.is_01() || !ap_phi_mux_col_assign_phi_fu_215_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(ap_phi_mux_col_assign_phi_fu_215_p4.read()));
}

void sobel_x::thread_idxRow_1_fu_336_p3() {
    idxRow_1_fu_336_p3 = (!tmp_18_fu_318_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_18_fu_318_p2.read()[0].to_bool())? ap_phi_mux_idxRow_phi_fu_226_p4.read(): idxRow_3_fu_330_p2.read());
}

void sobel_x::thread_idxRow_3_fu_330_p2() {
    idxRow_3_fu_330_p2 = (!ap_const_lv32_1.is_01() || !ap_phi_mux_idxRow_phi_fu_226_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(ap_phi_mux_idxRow_phi_fu_226_p4.read()));
}

void sobel_x::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_535_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_535_p2.read()))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void sobel_x::thread_lineBuff_val_0_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            lineBuff_val_0_V_address0 =  (sc_lv<9>) (tmp_12_fu_350_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            lineBuff_val_0_V_address0 =  (sc_lv<9>) (tmp_s_reg_551.read());
        } else {
            lineBuff_val_0_V_address0 =  (sc_lv<9>) ("XXXXXXXXX");
        }
    } else {
        lineBuff_val_0_V_address0 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void sobel_x::thread_lineBuff_val_0_V_address1() {
    lineBuff_val_0_V_address1 =  (sc_lv<9>) (tmp_40_0_2_fu_369_p1.read());
}

void sobel_x::thread_lineBuff_val_0_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        lineBuff_val_0_V_ce0 = ap_const_logic_1;
    } else {
        lineBuff_val_0_V_ce0 = ap_const_logic_0;
    }
}

void sobel_x::thread_lineBuff_val_0_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        lineBuff_val_0_V_ce1 = ap_const_logic_1;
    } else {
        lineBuff_val_0_V_ce1 = ap_const_logic_0;
    }
}

void sobel_x::thread_lineBuff_val_0_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond6_reg_547.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        lineBuff_val_0_V_we0 = ap_const_logic_1;
    } else {
        lineBuff_val_0_V_we0 = ap_const_logic_0;
    }
}

void sobel_x::thread_lineBuff_val_1_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            lineBuff_val_1_V_address0 =  (sc_lv<9>) (tmp_12_fu_350_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            lineBuff_val_1_V_address0 = lineBuff_val_1_V_ad_reg_556.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            lineBuff_val_1_V_address0 =  (sc_lv<9>) (tmp_s_fu_274_p1.read());
        } else {
            lineBuff_val_1_V_address0 =  (sc_lv<9>) ("XXXXXXXXX");
        }
    } else {
        lineBuff_val_1_V_address0 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void sobel_x::thread_lineBuff_val_1_V_address1() {
    lineBuff_val_1_V_address1 =  (sc_lv<9>) (tmp_40_0_2_fu_369_p1.read());
}

void sobel_x::thread_lineBuff_val_1_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        lineBuff_val_1_V_ce0 = ap_const_logic_1;
    } else {
        lineBuff_val_1_V_ce0 = ap_const_logic_0;
    }
}

void sobel_x::thread_lineBuff_val_1_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        lineBuff_val_1_V_ce1 = ap_const_logic_1;
    } else {
        lineBuff_val_1_V_ce1 = ap_const_logic_0;
    }
}

void sobel_x::thread_lineBuff_val_1_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond6_reg_547.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        lineBuff_val_1_V_we0 = ap_const_logic_1;
    } else {
        lineBuff_val_1_V_we0 = ap_const_logic_0;
    }
}

void sobel_x::thread_lineBuff_val_2_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            lineBuff_val_2_V_address0 =  (sc_lv<9>) (tmp_12_fu_350_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            lineBuff_val_2_V_address0 = lineBuff_val_2_V_ad_reg_561.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            lineBuff_val_2_V_address0 =  (sc_lv<9>) (tmp_s_fu_274_p1.read());
        } else {
            lineBuff_val_2_V_address0 =  (sc_lv<9>) ("XXXXXXXXX");
        }
    } else {
        lineBuff_val_2_V_address0 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void sobel_x::thread_lineBuff_val_2_V_address1() {
    lineBuff_val_2_V_address1 =  (sc_lv<9>) (tmp_40_0_2_fu_369_p1.read());
}

void sobel_x::thread_lineBuff_val_2_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        lineBuff_val_2_V_ce0 = ap_const_logic_1;
    } else {
        lineBuff_val_2_V_ce0 = ap_const_logic_0;
    }
}

void sobel_x::thread_lineBuff_val_2_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        lineBuff_val_2_V_ce1 = ap_const_logic_1;
    } else {
        lineBuff_val_2_V_ce1 = ap_const_logic_0;
    }
}

void sobel_x::thread_lineBuff_val_2_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond6_reg_547.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        lineBuff_val_2_V_we0 = ap_const_logic_1;
    } else {
        lineBuff_val_2_V_we0 = ap_const_logic_0;
    }
}

void sobel_x::thread_or_cond_fu_312_p2() {
    or_cond_fu_312_p2 = (icmp_fu_290_p2.read() & icmp2_fu_306_p2.read());
}

void sobel_x::thread_out_V_3_fu_515_p2() {
    out_V_3_fu_515_p2 = (!ap_const_lv8_0.is_01() || !out_V_reg_676.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_0) - sc_biguint<8>(out_V_reg_676.read()));
}

void sobel_x::thread_out_V_4_fu_520_p3() {
    out_V_4_fu_520_p3 = (!tmp_21_fu_508_p3.read()[0].is_01())? sc_lv<8>(): ((tmp_21_fu_508_p3.read()[0].to_bool())? out_V_3_fu_515_p2.read(): out_V_reg_676.read());
}

void sobel_x::thread_out_V_fu_503_p2() {
    out_V_fu_503_p2 = (!lineBuff_val_2_V_lo_5_reg_655.read().is_01() || !tmp_16_fu_492_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(lineBuff_val_2_V_lo_5_reg_655.read()) + sc_biguint<8>(tmp_16_fu_492_p2.read()));
}

void sobel_x::thread_p_shl_cast_fu_429_p1() {
    p_shl_cast_fu_429_p1 = esl_zext<11,9>(p_shl_fu_422_p3.read());
}

void sobel_x::thread_p_shl_fu_422_p3() {
    p_shl_fu_422_p3 = esl_concat<8,1>(lineBuff_val_1_V_lo_1_reg_637.read(), ap_const_lv1_0);
}

void sobel_x::thread_phitmp_fu_396_p2() {
    phitmp_fu_396_p2 = (!countWait_reg_245.read().is_01() || !ap_const_lv19_1.is_01())? sc_lv<19>(): (sc_biguint<19>(countWait_reg_245.read()) + sc_biguint<19>(ap_const_lv19_1));
}

void sobel_x::thread_pixConvolved_1_fu_376_p3() {
    pixConvolved_1_fu_376_p3 = (!or_cond_reg_566.read()[0].is_01())? sc_lv<32>(): ((or_cond_reg_566.read()[0].to_bool())? pixConvolved_4_fu_357_p2.read(): ap_phi_mux_pixConvolved_phi_fu_237_p4.read());
}

void sobel_x::thread_pixConvolved_2_fu_389_p3() {
    pixConvolved_2_fu_389_p3 = (!tmp_18_reg_572.read()[0].is_01())? sc_lv<32>(): ((tmp_18_reg_572.read()[0].to_bool())? pixConvolved_1_fu_376_p3.read(): ap_const_lv32_0);
}

void sobel_x::thread_pixConvolved_4_fu_357_p2() {
    pixConvolved_4_fu_357_p2 = (!ap_const_lv32_1.is_01() || !ap_phi_mux_pixConvolved_phi_fu_237_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(ap_phi_mux_pixConvolved_phi_fu_237_p4.read()));
}

void sobel_x::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void sobel_x::thread_src_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond6_reg_547.read(), ap_const_lv1_0))) {
        src_V_V_blk_n = src_V_V_empty_n.read();
    } else {
        src_V_V_blk_n = ap_const_logic_1;
    }
}

void sobel_x::thread_src_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond6_reg_547.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        src_V_V_read = ap_const_logic_1;
    } else {
        src_V_V_read = ap_const_logic_0;
    }
}

void sobel_x::thread_start_out() {
    start_out = real_start.read();
}

void sobel_x::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void sobel_x::thread_tmp_10_fu_416_p2() {
    tmp_10_fu_416_p2 = (!lineBuff_val_0_V_q1.read().is_01() || !lineBuff_val_0_V_q0.read().is_01())? sc_lv<8>(): (sc_biguint<8>(lineBuff_val_0_V_q1.read()) - sc_biguint<8>(lineBuff_val_0_V_q0.read()));
}

void sobel_x::thread_tmp_11_fu_464_p2() {
    tmp_11_fu_464_p2 = (!tmp_10_reg_666.read().is_01() || !tmp_13_fu_433_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_10_reg_666.read()) - sc_biguint<8>(tmp_13_fu_433_p2.read()));
}

void sobel_x::thread_tmp_12_fu_350_p1() {
    tmp_12_fu_350_p1 = esl_zext<64,32>(ap_phi_mux_pixConvolved_phi_fu_237_p4.read());
}

void sobel_x::thread_tmp_13_fu_433_p2() {
    tmp_13_fu_433_p2 = (!ap_const_lv8_1.is_01())? sc_lv<8>(): lineBuff_val_1_V_lo_1_reg_637.read() << (unsigned short)ap_const_lv8_1.to_uint();
}

void sobel_x::thread_tmp_14_fu_280_p4() {
    tmp_14_fu_280_p4 = ap_phi_mux_idxRow_phi_fu_226_p4.read().range(31, 1);
}

void sobel_x::thread_tmp_15_fu_480_p2() {
    tmp_15_fu_480_p2 = (!tmp_20_fu_469_p2.read().is_01() || !tmp_11_fu_464_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_20_fu_469_p2.read()) + sc_biguint<8>(tmp_11_fu_464_p2.read()));
}

void sobel_x::thread_tmp_16_fu_492_p2() {
    tmp_16_fu_492_p2 = (!tmp_15_fu_480_p2.read().is_01() || !lineBuff_val_2_V_lo_4_reg_649.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_15_fu_480_p2.read()) - sc_biguint<8>(lineBuff_val_2_V_lo_4_reg_649.read()));
}

void sobel_x::thread_tmp_17_fu_296_p4() {
    tmp_17_fu_296_p4 = ap_phi_mux_col_assign_phi_fu_215_p4.read().range(31, 1);
}

void sobel_x::thread_tmp_18_fu_318_p2() {
    tmp_18_fu_318_p2 = (!ap_phi_mux_col_assign_phi_fu_215_p4.read().is_01() || !ap_const_lv32_1FF.is_01())? sc_lv<1>(): (sc_bigint<32>(ap_phi_mux_col_assign_phi_fu_215_p4.read()) < sc_bigint<32>(ap_const_lv32_1FF));
}

void sobel_x::thread_tmp_19_fu_344_p2() {
    tmp_19_fu_344_p2 = (!ap_phi_mux_countWait_phi_fu_249_p4.read().is_01() || !ap_const_lv19_201.is_01())? sc_lv<1>(): (sc_biguint<19>(ap_phi_mux_countWait_phi_fu_249_p4.read()) > sc_biguint<19>(ap_const_lv19_201));
}

void sobel_x::thread_tmp_20_fu_469_p2() {
    tmp_20_fu_469_p2 = (!ap_const_lv8_1.is_01())? sc_lv<8>(): lineBuff_val_1_V_lo_2_reg_643.read() << (unsigned short)ap_const_lv8_1.to_uint();
}

void sobel_x::thread_tmp_21_fu_508_p3() {
    tmp_21_fu_508_p3 = accumulator_V_2_2_reg_671.read().range(10, 10);
}

void sobel_x::thread_tmp_40_0_2_fu_369_p1() {
    tmp_40_0_2_fu_369_p1 = esl_zext<64,32>(col_assign_4_0_2_fu_363_p2.read());
}

void sobel_x::thread_tmp_V_fu_527_p3() {
    tmp_V_fu_527_p3 = (!ap_reg_pp0_iter1_or_cond_reg_566.read()[0].is_01())? sc_lv<8>(): ((ap_reg_pp0_iter1_or_cond_reg_566.read()[0].to_bool())? out_V_4_fu_520_p3.read(): ap_const_lv8_0);
}

void sobel_x::thread_tmp_s_fu_274_p1() {
    tmp_s_fu_274_p1 = esl_zext<64,32>(ap_phi_mux_col_assign_phi_fu_215_p4.read());
}

void sobel_x::thread_val_V_0_2_cast_fu_406_p1() {
    val_V_0_2_cast_fu_406_p1 = esl_zext<9,8>(lineBuff_val_0_V_q1.read());
}

void sobel_x::thread_val_V_0_cast_fu_402_p1() {
    val_V_0_cast_fu_402_p1 = esl_zext<9,8>(lineBuff_val_0_V_q0.read());
}

void sobel_x::thread_val_V_27_2_cast_fu_452_p1() {
    val_V_27_2_cast_fu_452_p1 = esl_zext<11,8>(lineBuff_val_2_V_lo_5_reg_655.read());
}

void sobel_x::thread_val_V_27_cast_fu_449_p1() {
    val_V_27_cast_fu_449_p1 = esl_zext<11,8>(lineBuff_val_2_V_lo_4_reg_649.read());
}

void sobel_x::thread_val_V_2_1_2_cast_fu_445_p1() {
    val_V_2_1_2_cast_fu_445_p1 = esl_zext<11,9>(val_V_2_1_2_fu_438_p3.read());
}

void sobel_x::thread_val_V_2_1_2_fu_438_p3() {
    val_V_2_1_2_fu_438_p3 = esl_concat<8,1>(lineBuff_val_1_V_lo_2_reg_643.read(), ap_const_lv1_0);
}

void sobel_x::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond6_fu_268_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond6_fu_268_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_535_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_535_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_535_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_535_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

}

