// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _sobel_x_HH_
#define _sobel_x_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "gaussianBlur_linefYi.h"

namespace ap_rtl {

struct sobel_x : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > src_V_V_dout;
    sc_in< sc_logic > src_V_V_empty_n;
    sc_out< sc_logic > src_V_V_read;
    sc_out< sc_lv<8> > dst_V_V_din;
    sc_in< sc_logic > dst_V_V_full_n;
    sc_out< sc_logic > dst_V_V_write;


    // Module declarations
    sobel_x(sc_module_name name);
    SC_HAS_PROCESS(sobel_x);

    ~sobel_x();

    sc_trace_file* mVcdFile;

    gaussianBlur_linefYi* lineBuff_val_0_V_U;
    gaussianBlur_linefYi* lineBuff_val_1_V_U;
    gaussianBlur_linefYi* lineBuff_val_2_V_U;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > src_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<1> > exitcond6_reg_547;
    sc_signal< sc_logic > dst_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<1> > tmp_19_reg_588;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_tmp_19_reg_588;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<1> > exitcond_fu_535_p2;
    sc_signal< sc_lv<32> > col_assign_reg_211;
    sc_signal< sc_lv<32> > idxRow_reg_222;
    sc_signal< sc_lv<32> > pixConvolved_reg_233;
    sc_signal< sc_lv<19> > countWait_reg_245;
    sc_signal< sc_lv<1> > exitcond6_fu_268_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_exitcond6_reg_547;
    sc_signal< sc_lv<64> > tmp_s_fu_274_p1;
    sc_signal< sc_lv<64> > tmp_s_reg_551;
    sc_signal< sc_lv<9> > lineBuff_val_1_V_ad_reg_556;
    sc_signal< sc_lv<9> > lineBuff_val_2_V_ad_reg_561;
    sc_signal< sc_lv<1> > or_cond_fu_312_p2;
    sc_signal< sc_lv<1> > or_cond_reg_566;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_or_cond_reg_566;
    sc_signal< sc_lv<1> > tmp_18_fu_318_p2;
    sc_signal< sc_lv<1> > tmp_18_reg_572;
    sc_signal< sc_lv<32> > idxCol_fu_324_p2;
    sc_signal< sc_lv<32> > idxCol_reg_578;
    sc_signal< sc_lv<32> > idxRow_1_fu_336_p3;
    sc_signal< sc_lv<32> > idxRow_1_reg_583;
    sc_signal< sc_lv<1> > tmp_19_fu_344_p2;
    sc_signal< bool > ap_block_state4_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage2_iter1;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<32> > idxCol_1_fu_383_p3;
    sc_signal< sc_lv<32> > idxCol_1_reg_622;
    sc_signal< sc_lv<32> > pixConvolved_2_fu_389_p3;
    sc_signal< sc_lv<32> > pixConvolved_2_reg_627;
    sc_signal< sc_lv<19> > phitmp_fu_396_p2;
    sc_signal< sc_lv<19> > phitmp_reg_632;
    sc_signal< sc_lv<8> > lineBuff_val_1_V_q0;
    sc_signal< sc_lv<8> > lineBuff_val_1_V_lo_1_reg_637;
    sc_signal< sc_lv<8> > lineBuff_val_1_V_q1;
    sc_signal< sc_lv<8> > lineBuff_val_1_V_lo_2_reg_643;
    sc_signal< sc_lv<8> > lineBuff_val_2_V_q0;
    sc_signal< sc_lv<8> > lineBuff_val_2_V_lo_4_reg_649;
    sc_signal< sc_lv<8> > lineBuff_val_2_V_q1;
    sc_signal< sc_lv<8> > lineBuff_val_2_V_lo_5_reg_655;
    sc_signal< sc_lv<9> > accumulator_V_0_2_fu_410_p2;
    sc_signal< sc_lv<9> > accumulator_V_0_2_reg_661;
    sc_signal< sc_lv<8> > tmp_10_fu_416_p2;
    sc_signal< sc_lv<8> > tmp_10_reg_666;
    sc_signal< sc_lv<11> > accumulator_V_2_2_fu_497_p2;
    sc_signal< sc_lv<11> > accumulator_V_2_2_reg_671;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<8> > out_V_fu_503_p2;
    sc_signal< sc_lv<8> > out_V_reg_676;
    sc_signal< sc_lv<10> > countWait_3_fu_541_p2;
    sc_signal< bool > ap_block_state9;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< sc_lv<9> > lineBuff_val_0_V_address0;
    sc_signal< sc_logic > lineBuff_val_0_V_ce0;
    sc_signal< sc_logic > lineBuff_val_0_V_we0;
    sc_signal< sc_lv<8> > lineBuff_val_0_V_q0;
    sc_signal< sc_lv<9> > lineBuff_val_0_V_address1;
    sc_signal< sc_logic > lineBuff_val_0_V_ce1;
    sc_signal< sc_lv<8> > lineBuff_val_0_V_q1;
    sc_signal< sc_lv<9> > lineBuff_val_1_V_address0;
    sc_signal< sc_logic > lineBuff_val_1_V_ce0;
    sc_signal< sc_logic > lineBuff_val_1_V_we0;
    sc_signal< sc_lv<9> > lineBuff_val_1_V_address1;
    sc_signal< sc_logic > lineBuff_val_1_V_ce1;
    sc_signal< sc_lv<9> > lineBuff_val_2_V_address0;
    sc_signal< sc_logic > lineBuff_val_2_V_ce0;
    sc_signal< sc_logic > lineBuff_val_2_V_we0;
    sc_signal< sc_lv<9> > lineBuff_val_2_V_address1;
    sc_signal< sc_logic > lineBuff_val_2_V_ce1;
    sc_signal< sc_lv<32> > ap_phi_mux_col_assign_phi_fu_215_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<32> > ap_phi_mux_idxRow_phi_fu_226_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_pixConvolved_phi_fu_237_p4;
    sc_signal< sc_lv<19> > ap_phi_mux_countWait_phi_fu_249_p4;
    sc_signal< sc_lv<10> > countWait_1_reg_257;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<64> > tmp_12_fu_350_p1;
    sc_signal< sc_lv<64> > tmp_40_0_2_fu_369_p1;
    sc_signal< sc_lv<8> > tmp_V_fu_527_p3;
    sc_signal< bool > ap_block_pp0_stage2_01001;
    sc_signal< sc_lv<31> > tmp_14_fu_280_p4;
    sc_signal< sc_lv<31> > tmp_17_fu_296_p4;
    sc_signal< sc_lv<1> > icmp_fu_290_p2;
    sc_signal< sc_lv<1> > icmp2_fu_306_p2;
    sc_signal< sc_lv<32> > idxRow_3_fu_330_p2;
    sc_signal< sc_lv<32> > col_assign_4_0_2_fu_363_p2;
    sc_signal< sc_lv<32> > pixConvolved_4_fu_357_p2;
    sc_signal< sc_lv<32> > pixConvolved_1_fu_376_p3;
    sc_signal< sc_lv<9> > val_V_0_2_cast_fu_406_p1;
    sc_signal< sc_lv<9> > val_V_0_cast_fu_402_p1;
    sc_signal< sc_lv<9> > p_shl_fu_422_p3;
    sc_signal< sc_lv<9> > val_V_2_1_2_fu_438_p3;
    sc_signal< sc_lv<11> > accumulator_V_0_2_ca_fu_455_p1;
    sc_signal< sc_lv<11> > p_shl_cast_fu_429_p1;
    sc_signal< sc_lv<8> > tmp_13_fu_433_p2;
    sc_signal< sc_lv<11> > accumulator_V_1_fu_458_p2;
    sc_signal< sc_lv<11> > val_V_2_1_2_cast_fu_445_p1;
    sc_signal< sc_lv<8> > tmp_20_fu_469_p2;
    sc_signal< sc_lv<8> > tmp_11_fu_464_p2;
    sc_signal< sc_lv<11> > accumulator_V_1_2_fu_474_p2;
    sc_signal< sc_lv<11> > val_V_27_cast_fu_449_p1;
    sc_signal< sc_lv<8> > tmp_15_fu_480_p2;
    sc_signal< sc_lv<11> > accumulator_V_2_fu_486_p2;
    sc_signal< sc_lv<11> > val_V_27_2_cast_fu_452_p1;
    sc_signal< sc_lv<8> > tmp_16_fu_492_p2;
    sc_signal< sc_lv<1> > tmp_21_fu_508_p3;
    sc_signal< sc_lv<8> > out_V_3_fu_515_p2;
    sc_signal< sc_lv<8> > out_V_4_fu_520_p3;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage0;
    static const sc_lv<6> ap_ST_fsm_pp0_stage1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage2;
    static const sc_lv<6> ap_ST_fsm_state8;
    static const sc_lv<6> ap_ST_fsm_state9;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<19> ap_const_lv19_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<19> ap_const_lv19_40001;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_1FF;
    static const sc_lv<19> ap_const_lv19_201;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<10> ap_const_lv10_201;
    static const sc_lv<10> ap_const_lv10_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_accumulator_V_0_2_ca_fu_455_p1();
    void thread_accumulator_V_0_2_fu_410_p2();
    void thread_accumulator_V_1_2_fu_474_p2();
    void thread_accumulator_V_1_fu_458_p2();
    void thread_accumulator_V_2_2_fu_497_p2();
    void thread_accumulator_V_2_fu_486_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_01001();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage2_iter0();
    void thread_ap_block_state5_pp0_stage0_iter1();
    void thread_ap_block_state6_pp0_stage1_iter1();
    void thread_ap_block_state7_pp0_stage2_iter1();
    void thread_ap_block_state9();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_col_assign_phi_fu_215_p4();
    void thread_ap_phi_mux_countWait_phi_fu_249_p4();
    void thread_ap_phi_mux_idxRow_phi_fu_226_p4();
    void thread_ap_phi_mux_pixConvolved_phi_fu_237_p4();
    void thread_ap_ready();
    void thread_col_assign_4_0_2_fu_363_p2();
    void thread_countWait_3_fu_541_p2();
    void thread_dst_V_V_blk_n();
    void thread_dst_V_V_din();
    void thread_dst_V_V_write();
    void thread_exitcond6_fu_268_p2();
    void thread_exitcond_fu_535_p2();
    void thread_icmp2_fu_306_p2();
    void thread_icmp_fu_290_p2();
    void thread_idxCol_1_fu_383_p3();
    void thread_idxCol_fu_324_p2();
    void thread_idxRow_1_fu_336_p3();
    void thread_idxRow_3_fu_330_p2();
    void thread_internal_ap_ready();
    void thread_lineBuff_val_0_V_address0();
    void thread_lineBuff_val_0_V_address1();
    void thread_lineBuff_val_0_V_ce0();
    void thread_lineBuff_val_0_V_ce1();
    void thread_lineBuff_val_0_V_we0();
    void thread_lineBuff_val_1_V_address0();
    void thread_lineBuff_val_1_V_address1();
    void thread_lineBuff_val_1_V_ce0();
    void thread_lineBuff_val_1_V_ce1();
    void thread_lineBuff_val_1_V_we0();
    void thread_lineBuff_val_2_V_address0();
    void thread_lineBuff_val_2_V_address1();
    void thread_lineBuff_val_2_V_ce0();
    void thread_lineBuff_val_2_V_ce1();
    void thread_lineBuff_val_2_V_we0();
    void thread_or_cond_fu_312_p2();
    void thread_out_V_3_fu_515_p2();
    void thread_out_V_4_fu_520_p3();
    void thread_out_V_fu_503_p2();
    void thread_p_shl_cast_fu_429_p1();
    void thread_p_shl_fu_422_p3();
    void thread_phitmp_fu_396_p2();
    void thread_pixConvolved_1_fu_376_p3();
    void thread_pixConvolved_2_fu_389_p3();
    void thread_pixConvolved_4_fu_357_p2();
    void thread_real_start();
    void thread_src_V_V_blk_n();
    void thread_src_V_V_read();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp_10_fu_416_p2();
    void thread_tmp_11_fu_464_p2();
    void thread_tmp_12_fu_350_p1();
    void thread_tmp_13_fu_433_p2();
    void thread_tmp_14_fu_280_p4();
    void thread_tmp_15_fu_480_p2();
    void thread_tmp_16_fu_492_p2();
    void thread_tmp_17_fu_296_p4();
    void thread_tmp_18_fu_318_p2();
    void thread_tmp_19_fu_344_p2();
    void thread_tmp_20_fu_469_p2();
    void thread_tmp_21_fu_508_p3();
    void thread_tmp_40_0_2_fu_369_p1();
    void thread_tmp_V_fu_527_p3();
    void thread_tmp_s_fu_274_p1();
    void thread_val_V_0_2_cast_fu_406_p1();
    void thread_val_V_0_cast_fu_402_p1();
    void thread_val_V_27_2_cast_fu_452_p1();
    void thread_val_V_27_cast_fu_449_p1();
    void thread_val_V_2_1_2_cast_fu_445_p1();
    void thread_val_V_2_1_2_fu_438_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
