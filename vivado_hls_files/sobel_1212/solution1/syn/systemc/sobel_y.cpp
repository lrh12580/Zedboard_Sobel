// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sobel_y.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sobel_y::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sobel_y::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> sobel_y::ap_ST_fsm_state1 = "1";
const sc_lv<6> sobel_y::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<6> sobel_y::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<6> sobel_y::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<6> sobel_y::ap_ST_fsm_state9 = "10000";
const sc_lv<6> sobel_y::ap_ST_fsm_state10 = "100000";
const sc_lv<32> sobel_y::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool sobel_y::ap_const_boolean_1 = true;
const sc_lv<32> sobel_y::ap_const_lv32_2 = "10";
const bool sobel_y::ap_const_boolean_0 = false;
const sc_lv<1> sobel_y::ap_const_lv1_0 = "0";
const sc_lv<32> sobel_y::ap_const_lv32_1 = "1";
const sc_lv<1> sobel_y::ap_const_lv1_1 = "1";
const sc_lv<32> sobel_y::ap_const_lv32_5 = "101";
const sc_lv<32> sobel_y::ap_const_lv32_3 = "11";
const sc_lv<19> sobel_y::ap_const_lv19_1 = "1";
const sc_lv<10> sobel_y::ap_const_lv10_0 = "0000000000";
const sc_lv<32> sobel_y::ap_const_lv32_4 = "100";
const sc_lv<8> sobel_y::ap_const_lv8_0 = "00000000";
const sc_lv<19> sobel_y::ap_const_lv19_40001 = "1000000000000000001";
const sc_lv<32> sobel_y::ap_const_lv32_1F = "11111";
const sc_lv<31> sobel_y::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> sobel_y::ap_const_lv32_1FF = "111111111";
const sc_lv<19> sobel_y::ap_const_lv19_201 = "1000000001";
const sc_lv<8> sobel_y::ap_const_lv8_1 = "1";
const sc_lv<32> sobel_y::ap_const_lv32_A = "1010";
const sc_lv<10> sobel_y::ap_const_lv10_201 = "1000000001";
const sc_lv<10> sobel_y::ap_const_lv10_1 = "1";

sobel_y::sobel_y(sc_module_name name) : sc_module(name), mVcdFile(0) {
    lineBuff_val_0_V_U = new gaussianBlur_linefYi("lineBuff_val_0_V_U");
    lineBuff_val_0_V_U->clk(ap_clk);
    lineBuff_val_0_V_U->reset(ap_rst);
    lineBuff_val_0_V_U->address0(lineBuff_val_0_V_address0);
    lineBuff_val_0_V_U->ce0(lineBuff_val_0_V_ce0);
    lineBuff_val_0_V_U->we0(lineBuff_val_0_V_we0);
    lineBuff_val_0_V_U->d0(lineBuff_val_1_V_q0);
    lineBuff_val_0_V_U->q0(lineBuff_val_0_V_q0);
    lineBuff_val_0_V_U->address1(lineBuff_val_0_V_address1);
    lineBuff_val_0_V_U->ce1(lineBuff_val_0_V_ce1);
    lineBuff_val_0_V_U->q1(lineBuff_val_0_V_q1);
    lineBuff_val_1_V_U = new sobel_y_lineBuff_ncg("lineBuff_val_1_V_U");
    lineBuff_val_1_V_U->clk(ap_clk);
    lineBuff_val_1_V_U->reset(ap_rst);
    lineBuff_val_1_V_U->address0(lineBuff_val_1_V_address0);
    lineBuff_val_1_V_U->ce0(lineBuff_val_1_V_ce0);
    lineBuff_val_1_V_U->we0(lineBuff_val_1_V_we0);
    lineBuff_val_1_V_U->d0(lineBuff_val_2_V_q0);
    lineBuff_val_1_V_U->q0(lineBuff_val_1_V_q0);
    lineBuff_val_2_V_U = new gaussianBlur_linefYi("lineBuff_val_2_V_U");
    lineBuff_val_2_V_U->clk(ap_clk);
    lineBuff_val_2_V_U->reset(ap_rst);
    lineBuff_val_2_V_U->address0(lineBuff_val_2_V_address0);
    lineBuff_val_2_V_U->ce0(lineBuff_val_2_V_ce0);
    lineBuff_val_2_V_U->we0(lineBuff_val_2_V_we0);
    lineBuff_val_2_V_U->d0(src_V_V_dout);
    lineBuff_val_2_V_U->q0(lineBuff_val_2_V_q0);
    lineBuff_val_2_V_U->address1(lineBuff_val_2_V_address1);
    lineBuff_val_2_V_U->ce1(lineBuff_val_2_V_ce1);
    lineBuff_val_2_V_U->q1(lineBuff_val_2_V_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_accumulator_V_0_2_ca_fu_471_p1);
    sensitive << ( accumulator_V_0_2_reg_676 );

    SC_METHOD(thread_accumulator_V_0_2_fu_437_p2);
    sensitive << ( tmp1_cast_fu_433_p1 );
    sensitive << ( val_V_1_0_1_cast_fu_414_p1 );

    SC_METHOD(thread_accumulator_V_2_1_fu_489_p2);
    sensitive << ( accumulator_V_2_fu_478_p2 );
    sensitive << ( p_shl_cast_fu_459_p1 );

    SC_METHOD(thread_accumulator_V_2_2_fu_501_p2);
    sensitive << ( accumulator_V_2_1_fu_489_p2 );
    sensitive << ( val_V_2_2_cast_fu_468_p1 );

    SC_METHOD(thread_accumulator_V_2_fu_478_p2);
    sensitive << ( accumulator_V_0_2_ca_fu_471_p1 );
    sensitive << ( val_V_2_cast_fu_449_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_reg_pp0_iter1_tmp_10_reg_592 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_reg_pp0_iter1_tmp_10_reg_592 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_reg_pp0_iter1_tmp_10_reg_592 );

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);
    sensitive << ( src_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond1_reg_551 );

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( src_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond1_reg_551 );

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state10);
    sensitive << ( dst_V_V_full_n );
    sensitive << ( exitcond_fu_539_p2 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);
    sensitive << ( src_V_V_empty_n );
    sensitive << ( exitcond1_reg_551 );

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state6_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state7_pp0_stage2_iter1);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter2);
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_reg_pp0_iter1_tmp_10_reg_592 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond1_fu_267_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond_fu_539_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_col_assign_phi_fu_214_p4);
    sensitive << ( exitcond1_reg_551 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( col_assign_reg_210 );
    sensitive << ( idxCol_1_reg_621 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_countWait_phi_fu_248_p4);
    sensitive << ( exitcond1_reg_551 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( countWait_reg_244 );
    sensitive << ( phitmp_reg_631 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_idxRow_phi_fu_225_p4);
    sensitive << ( exitcond1_reg_551 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( idxRow_reg_221 );
    sensitive << ( idxRow_1_reg_587 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_pixConvolved_phi_fu_236_p4);
    sensitive << ( pixConvolved_reg_232 );
    sensitive << ( ap_reg_pp0_iter1_exitcond1_reg_551 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( pixConvolved_2_reg_626 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond_fu_539_p2 );

    SC_METHOD(thread_col_assign_1_0_2_fu_367_p2);
    sensitive << ( ap_phi_mux_pixConvolved_phi_fu_236_p4 );

    SC_METHOD(thread_countWait_2_fu_545_p2);
    sensitive << ( countWait_1_reg_256 );

    SC_METHOD(thread_dst_V_V_blk_n);
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_reg_pp0_iter1_tmp_10_reg_592 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond_fu_539_p2 );

    SC_METHOD(thread_dst_V_V_din);
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_reg_pp0_iter1_tmp_10_reg_592 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond_fu_539_p2 );
    sensitive << ( tmp_V_fu_531_p3 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_dst_V_V_write);
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_reg_pp0_iter1_tmp_10_reg_592 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond_fu_539_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_exitcond1_fu_267_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_countWait_phi_fu_248_p4 );

    SC_METHOD(thread_exitcond_fu_539_p2);
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond_fu_539_p2 );
    sensitive << ( countWait_1_reg_256 );

    SC_METHOD(thread_icmp1_fu_305_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond1_fu_267_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_4_fu_295_p4 );

    SC_METHOD(thread_icmp_fu_289_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond1_fu_267_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_3_fu_279_p4 );

    SC_METHOD(thread_idxCol_1_fu_380_p3);
    sensitive << ( tmp_s_reg_576 );
    sensitive << ( idxCol_reg_582 );

    SC_METHOD(thread_idxCol_fu_323_p2);
    sensitive << ( ap_phi_mux_col_assign_phi_fu_214_p4 );

    SC_METHOD(thread_idxRow_1_fu_335_p3);
    sensitive << ( tmp_s_fu_317_p2 );
    sensitive << ( ap_phi_mux_idxRow_phi_fu_225_p4 );
    sensitive << ( idxRow_2_fu_329_p2 );

    SC_METHOD(thread_idxRow_2_fu_329_p2);
    sensitive << ( ap_phi_mux_idxRow_phi_fu_225_p4 );

    SC_METHOD(thread_lineBuff_val_0_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_2_reg_555 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_5_fu_349_p1 );
    sensitive << ( tmp_13_0_2_fu_399_p1 );

    SC_METHOD(thread_lineBuff_val_0_V_address1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_13_0_1_fu_361_p1 );

    SC_METHOD(thread_lineBuff_val_0_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_lineBuff_val_0_V_ce1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_lineBuff_val_0_V_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond1_reg_551 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_lineBuff_val_1_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_2_fu_273_p1 );
    sensitive << ( lineBuff_val_1_V_ad_reg_560 );

    SC_METHOD(thread_lineBuff_val_1_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_lineBuff_val_1_V_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond1_reg_551 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_lineBuff_val_2_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_2_fu_273_p1 );
    sensitive << ( lineBuff_val_2_V_ad_reg_565 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_13_0_1_fu_361_p1 );

    SC_METHOD(thread_lineBuff_val_2_V_address1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_5_fu_349_p1 );
    sensitive << ( tmp_13_0_2_fu_399_p1 );

    SC_METHOD(thread_lineBuff_val_2_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_lineBuff_val_2_V_ce1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_lineBuff_val_2_V_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond1_reg_551 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_or_cond_fu_311_p2);
    sensitive << ( icmp_fu_289_p2 );
    sensitive << ( icmp1_fu_305_p2 );

    SC_METHOD(thread_out_V_1_fu_519_p2);
    sensitive << ( out_V_reg_691 );

    SC_METHOD(thread_out_V_2_fu_524_p3);
    sensitive << ( out_V_reg_691 );
    sensitive << ( tmp_12_fu_512_p3 );
    sensitive << ( out_V_1_fu_519_p2 );

    SC_METHOD(thread_out_V_fu_507_p2);
    sensitive << ( lineBuff_val_2_V_lo_3_reg_670 );
    sensitive << ( tmp_8_fu_495_p2 );

    SC_METHOD(thread_p_shl_cast_fu_459_p1);
    sensitive << ( p_shl_fu_452_p3 );

    SC_METHOD(thread_p_shl_fu_452_p3);
    sensitive << ( lineBuff_val_2_V_lo_2_reg_659 );

    SC_METHOD(thread_phitmp_fu_393_p2);
    sensitive << ( countWait_reg_244 );

    SC_METHOD(thread_pixConvolved_1_fu_373_p3);
    sensitive << ( or_cond_reg_570 );
    sensitive << ( ap_phi_mux_pixConvolved_phi_fu_236_p4 );
    sensitive << ( pixConvolved_3_fu_355_p2 );

    SC_METHOD(thread_pixConvolved_2_fu_386_p3);
    sensitive << ( tmp_s_reg_576 );
    sensitive << ( pixConvolved_1_fu_373_p3 );

    SC_METHOD(thread_pixConvolved_3_fu_355_p2);
    sensitive << ( ap_phi_mux_pixConvolved_phi_fu_236_p4 );

    SC_METHOD(thread_src_V_V_blk_n);
    sensitive << ( src_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond1_reg_551 );

    SC_METHOD(thread_src_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond1_reg_551 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_tmp1_cast_fu_433_p1);
    sensitive << ( tmp1_fu_427_p2 );

    SC_METHOD(thread_tmp1_fu_427_p2);
    sensitive << ( val_V_0_cast_cast_fu_404_p1 );
    sensitive << ( val_V_0_2_cast_cast_fu_418_p1 );

    SC_METHOD(thread_tmp2_fu_443_p2);
    sensitive << ( lineBuff_val_0_V_q0 );
    sensitive << ( tmp_9_fu_422_p2 );

    SC_METHOD(thread_tmp_10_fu_343_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond1_fu_267_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_countWait_phi_fu_248_p4 );

    SC_METHOD(thread_tmp_12_fu_512_p3);
    sensitive << ( accumulator_V_2_2_reg_686 );

    SC_METHOD(thread_tmp_13_0_1_fu_361_p1);
    sensitive << ( pixConvolved_3_fu_355_p2 );

    SC_METHOD(thread_tmp_13_0_2_fu_399_p1);
    sensitive << ( col_assign_1_0_2_reg_606 );

    SC_METHOD(thread_tmp_1_fu_463_p2);
    sensitive << ( lineBuff_val_2_V_lo_2_reg_659 );

    SC_METHOD(thread_tmp_2_fu_273_p1);
    sensitive << ( ap_phi_mux_col_assign_phi_fu_214_p4 );

    SC_METHOD(thread_tmp_3_fu_279_p4);
    sensitive << ( ap_phi_mux_idxRow_phi_fu_225_p4 );

    SC_METHOD(thread_tmp_4_fu_295_p4);
    sensitive << ( ap_phi_mux_col_assign_phi_fu_214_p4 );

    SC_METHOD(thread_tmp_5_fu_349_p1);
    sensitive << ( ap_phi_mux_pixConvolved_phi_fu_236_p4 );

    SC_METHOD(thread_tmp_6_fu_474_p2);
    sensitive << ( lineBuff_val_0_V_lo_reg_636 );
    sensitive << ( tmp2_reg_681 );

    SC_METHOD(thread_tmp_7_fu_484_p2);
    sensitive << ( lineBuff_val_2_V_lo_1_reg_653 );
    sensitive << ( tmp_6_fu_474_p2 );

    SC_METHOD(thread_tmp_8_fu_495_p2);
    sensitive << ( tmp_7_fu_484_p2 );
    sensitive << ( tmp_1_fu_463_p2 );

    SC_METHOD(thread_tmp_9_fu_422_p2);
    sensitive << ( lineBuff_val_0_V_lo_1_reg_642 );

    SC_METHOD(thread_tmp_V_fu_531_p3);
    sensitive << ( ap_reg_pp0_iter1_or_cond_reg_570 );
    sensitive << ( out_V_2_fu_524_p3 );

    SC_METHOD(thread_tmp_s_fu_317_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond1_fu_267_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_col_assign_phi_fu_214_p4 );

    SC_METHOD(thread_val_V_0_2_cast_cast_fu_418_p1);
    sensitive << ( lineBuff_val_0_V_q0 );

    SC_METHOD(thread_val_V_0_cast_cast_fu_404_p1);
    sensitive << ( lineBuff_val_0_V_lo_reg_636 );

    SC_METHOD(thread_val_V_1_0_1_cast_fu_414_p1);
    sensitive << ( val_V_1_0_1_fu_407_p3 );

    SC_METHOD(thread_val_V_1_0_1_fu_407_p3);
    sensitive << ( lineBuff_val_0_V_lo_1_reg_642 );

    SC_METHOD(thread_val_V_2_2_cast_fu_468_p1);
    sensitive << ( lineBuff_val_2_V_lo_3_reg_670 );

    SC_METHOD(thread_val_V_2_cast_fu_449_p1);
    sensitive << ( lineBuff_val_2_V_lo_1_reg_653 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( dst_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond_fu_539_p2 );
    sensitive << ( exitcond1_fu_267_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sobel_y_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, src_V_V_dout, "(port)src_V_V_dout");
    sc_trace(mVcdFile, src_V_V_empty_n, "(port)src_V_V_empty_n");
    sc_trace(mVcdFile, src_V_V_read, "(port)src_V_V_read");
    sc_trace(mVcdFile, dst_V_V_din, "(port)dst_V_V_din");
    sc_trace(mVcdFile, dst_V_V_full_n, "(port)dst_V_V_full_n");
    sc_trace(mVcdFile, dst_V_V_write, "(port)dst_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, src_V_V_blk_n, "src_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, exitcond1_reg_551, "exitcond1_reg_551");
    sc_trace(mVcdFile, dst_V_V_blk_n, "dst_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_10_reg_592, "tmp_10_reg_592");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_tmp_10_reg_592, "ap_reg_pp0_iter1_tmp_10_reg_592");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, exitcond_fu_539_p2, "exitcond_fu_539_p2");
    sc_trace(mVcdFile, col_assign_reg_210, "col_assign_reg_210");
    sc_trace(mVcdFile, idxRow_reg_221, "idxRow_reg_221");
    sc_trace(mVcdFile, pixConvolved_reg_232, "pixConvolved_reg_232");
    sc_trace(mVcdFile, countWait_reg_244, "countWait_reg_244");
    sc_trace(mVcdFile, exitcond1_fu_267_p2, "exitcond1_fu_267_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter1, "ap_block_state5_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter2, "ap_block_state8_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond1_reg_551, "ap_reg_pp0_iter1_exitcond1_reg_551");
    sc_trace(mVcdFile, tmp_2_fu_273_p1, "tmp_2_fu_273_p1");
    sc_trace(mVcdFile, tmp_2_reg_555, "tmp_2_reg_555");
    sc_trace(mVcdFile, lineBuff_val_1_V_ad_reg_560, "lineBuff_val_1_V_ad_reg_560");
    sc_trace(mVcdFile, lineBuff_val_2_V_ad_reg_565, "lineBuff_val_2_V_ad_reg_565");
    sc_trace(mVcdFile, or_cond_fu_311_p2, "or_cond_fu_311_p2");
    sc_trace(mVcdFile, or_cond_reg_570, "or_cond_reg_570");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_or_cond_reg_570, "ap_reg_pp0_iter1_or_cond_reg_570");
    sc_trace(mVcdFile, tmp_s_fu_317_p2, "tmp_s_fu_317_p2");
    sc_trace(mVcdFile, tmp_s_reg_576, "tmp_s_reg_576");
    sc_trace(mVcdFile, idxCol_fu_323_p2, "idxCol_fu_323_p2");
    sc_trace(mVcdFile, idxCol_reg_582, "idxCol_reg_582");
    sc_trace(mVcdFile, idxRow_1_fu_335_p3, "idxRow_1_fu_335_p3");
    sc_trace(mVcdFile, idxRow_1_reg_587, "idxRow_1_reg_587");
    sc_trace(mVcdFile, tmp_10_fu_343_p2, "tmp_10_fu_343_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage2_iter1, "ap_block_state7_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, col_assign_1_0_2_fu_367_p2, "col_assign_1_0_2_fu_367_p2");
    sc_trace(mVcdFile, col_assign_1_0_2_reg_606, "col_assign_1_0_2_reg_606");
    sc_trace(mVcdFile, idxCol_1_fu_380_p3, "idxCol_1_fu_380_p3");
    sc_trace(mVcdFile, idxCol_1_reg_621, "idxCol_1_reg_621");
    sc_trace(mVcdFile, pixConvolved_2_fu_386_p3, "pixConvolved_2_fu_386_p3");
    sc_trace(mVcdFile, pixConvolved_2_reg_626, "pixConvolved_2_reg_626");
    sc_trace(mVcdFile, phitmp_fu_393_p2, "phitmp_fu_393_p2");
    sc_trace(mVcdFile, phitmp_reg_631, "phitmp_reg_631");
    sc_trace(mVcdFile, lineBuff_val_0_V_q0, "lineBuff_val_0_V_q0");
    sc_trace(mVcdFile, lineBuff_val_0_V_lo_reg_636, "lineBuff_val_0_V_lo_reg_636");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, lineBuff_val_0_V_q1, "lineBuff_val_0_V_q1");
    sc_trace(mVcdFile, lineBuff_val_0_V_lo_1_reg_642, "lineBuff_val_0_V_lo_1_reg_642");
    sc_trace(mVcdFile, lineBuff_val_2_V_q1, "lineBuff_val_2_V_q1");
    sc_trace(mVcdFile, lineBuff_val_2_V_lo_1_reg_653, "lineBuff_val_2_V_lo_1_reg_653");
    sc_trace(mVcdFile, lineBuff_val_2_V_q0, "lineBuff_val_2_V_q0");
    sc_trace(mVcdFile, lineBuff_val_2_V_lo_2_reg_659, "lineBuff_val_2_V_lo_2_reg_659");
    sc_trace(mVcdFile, lineBuff_val_2_V_lo_3_reg_670, "lineBuff_val_2_V_lo_3_reg_670");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage1_iter1, "ap_block_state6_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, accumulator_V_0_2_fu_437_p2, "accumulator_V_0_2_fu_437_p2");
    sc_trace(mVcdFile, accumulator_V_0_2_reg_676, "accumulator_V_0_2_reg_676");
    sc_trace(mVcdFile, tmp2_fu_443_p2, "tmp2_fu_443_p2");
    sc_trace(mVcdFile, tmp2_reg_681, "tmp2_reg_681");
    sc_trace(mVcdFile, accumulator_V_2_2_fu_501_p2, "accumulator_V_2_2_fu_501_p2");
    sc_trace(mVcdFile, accumulator_V_2_2_reg_686, "accumulator_V_2_2_reg_686");
    sc_trace(mVcdFile, out_V_fu_507_p2, "out_V_fu_507_p2");
    sc_trace(mVcdFile, out_V_reg_691, "out_V_reg_691");
    sc_trace(mVcdFile, countWait_2_fu_545_p2, "countWait_2_fu_545_p2");
    sc_trace(mVcdFile, ap_block_state10, "ap_block_state10");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, lineBuff_val_0_V_address0, "lineBuff_val_0_V_address0");
    sc_trace(mVcdFile, lineBuff_val_0_V_ce0, "lineBuff_val_0_V_ce0");
    sc_trace(mVcdFile, lineBuff_val_0_V_we0, "lineBuff_val_0_V_we0");
    sc_trace(mVcdFile, lineBuff_val_0_V_address1, "lineBuff_val_0_V_address1");
    sc_trace(mVcdFile, lineBuff_val_0_V_ce1, "lineBuff_val_0_V_ce1");
    sc_trace(mVcdFile, lineBuff_val_1_V_address0, "lineBuff_val_1_V_address0");
    sc_trace(mVcdFile, lineBuff_val_1_V_ce0, "lineBuff_val_1_V_ce0");
    sc_trace(mVcdFile, lineBuff_val_1_V_we0, "lineBuff_val_1_V_we0");
    sc_trace(mVcdFile, lineBuff_val_1_V_q0, "lineBuff_val_1_V_q0");
    sc_trace(mVcdFile, lineBuff_val_2_V_address0, "lineBuff_val_2_V_address0");
    sc_trace(mVcdFile, lineBuff_val_2_V_ce0, "lineBuff_val_2_V_ce0");
    sc_trace(mVcdFile, lineBuff_val_2_V_we0, "lineBuff_val_2_V_we0");
    sc_trace(mVcdFile, lineBuff_val_2_V_address1, "lineBuff_val_2_V_address1");
    sc_trace(mVcdFile, lineBuff_val_2_V_ce1, "lineBuff_val_2_V_ce1");
    sc_trace(mVcdFile, ap_phi_mux_col_assign_phi_fu_214_p4, "ap_phi_mux_col_assign_phi_fu_214_p4");
    sc_trace(mVcdFile, ap_phi_mux_idxRow_phi_fu_225_p4, "ap_phi_mux_idxRow_phi_fu_225_p4");
    sc_trace(mVcdFile, ap_phi_mux_pixConvolved_phi_fu_236_p4, "ap_phi_mux_pixConvolved_phi_fu_236_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, ap_phi_mux_countWait_phi_fu_248_p4, "ap_phi_mux_countWait_phi_fu_248_p4");
    sc_trace(mVcdFile, countWait_1_reg_256, "countWait_1_reg_256");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_5_fu_349_p1, "tmp_5_fu_349_p1");
    sc_trace(mVcdFile, tmp_13_0_1_fu_361_p1, "tmp_13_0_1_fu_361_p1");
    sc_trace(mVcdFile, tmp_13_0_2_fu_399_p1, "tmp_13_0_2_fu_399_p1");
    sc_trace(mVcdFile, tmp_V_fu_531_p3, "tmp_V_fu_531_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_3_fu_279_p4, "tmp_3_fu_279_p4");
    sc_trace(mVcdFile, tmp_4_fu_295_p4, "tmp_4_fu_295_p4");
    sc_trace(mVcdFile, icmp_fu_289_p2, "icmp_fu_289_p2");
    sc_trace(mVcdFile, icmp1_fu_305_p2, "icmp1_fu_305_p2");
    sc_trace(mVcdFile, idxRow_2_fu_329_p2, "idxRow_2_fu_329_p2");
    sc_trace(mVcdFile, pixConvolved_3_fu_355_p2, "pixConvolved_3_fu_355_p2");
    sc_trace(mVcdFile, pixConvolved_1_fu_373_p3, "pixConvolved_1_fu_373_p3");
    sc_trace(mVcdFile, val_V_1_0_1_fu_407_p3, "val_V_1_0_1_fu_407_p3");
    sc_trace(mVcdFile, val_V_0_cast_cast_fu_404_p1, "val_V_0_cast_cast_fu_404_p1");
    sc_trace(mVcdFile, val_V_0_2_cast_cast_fu_418_p1, "val_V_0_2_cast_cast_fu_418_p1");
    sc_trace(mVcdFile, tmp1_fu_427_p2, "tmp1_fu_427_p2");
    sc_trace(mVcdFile, tmp1_cast_fu_433_p1, "tmp1_cast_fu_433_p1");
    sc_trace(mVcdFile, val_V_1_0_1_cast_fu_414_p1, "val_V_1_0_1_cast_fu_414_p1");
    sc_trace(mVcdFile, tmp_9_fu_422_p2, "tmp_9_fu_422_p2");
    sc_trace(mVcdFile, p_shl_fu_452_p3, "p_shl_fu_452_p3");
    sc_trace(mVcdFile, accumulator_V_0_2_ca_fu_471_p1, "accumulator_V_0_2_ca_fu_471_p1");
    sc_trace(mVcdFile, val_V_2_cast_fu_449_p1, "val_V_2_cast_fu_449_p1");
    sc_trace(mVcdFile, tmp_6_fu_474_p2, "tmp_6_fu_474_p2");
    sc_trace(mVcdFile, accumulator_V_2_fu_478_p2, "accumulator_V_2_fu_478_p2");
    sc_trace(mVcdFile, p_shl_cast_fu_459_p1, "p_shl_cast_fu_459_p1");
    sc_trace(mVcdFile, tmp_7_fu_484_p2, "tmp_7_fu_484_p2");
    sc_trace(mVcdFile, tmp_1_fu_463_p2, "tmp_1_fu_463_p2");
    sc_trace(mVcdFile, accumulator_V_2_1_fu_489_p2, "accumulator_V_2_1_fu_489_p2");
    sc_trace(mVcdFile, val_V_2_2_cast_fu_468_p1, "val_V_2_2_cast_fu_468_p1");
    sc_trace(mVcdFile, tmp_8_fu_495_p2, "tmp_8_fu_495_p2");
    sc_trace(mVcdFile, tmp_12_fu_512_p3, "tmp_12_fu_512_p3");
    sc_trace(mVcdFile, out_V_1_fu_519_p2, "out_V_1_fu_519_p2");
    sc_trace(mVcdFile, out_V_2_fu_524_p3, "out_V_2_fu_524_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

sobel_y::~sobel_y() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete lineBuff_val_0_V_U;
    delete lineBuff_val_1_V_U;
    delete lineBuff_val_2_V_U;
}

void sobel_y::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_539_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read())) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_539_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0))) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_551.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        col_assign_reg_210 = idxCol_1_reg_621.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        col_assign_reg_210 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        countWait_1_reg_256 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_539_p2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_539_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read())))) {
        countWait_1_reg_256 = countWait_2_fu_545_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_551.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        countWait_reg_244 = phitmp_reg_631.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        countWait_reg_244 = ap_const_lv19_1;
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_551.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        idxRow_reg_221 = idxRow_1_reg_587.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        idxRow_reg_221 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond1_reg_551.read()))) {
        pixConvolved_reg_232 = pixConvolved_2_reg_626.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        pixConvolved_reg_232 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond1_reg_551.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter1_or_cond_reg_570.read()))) {
        accumulator_V_0_2_reg_676 = accumulator_V_0_2_fu_437_p2.read();
        tmp2_reg_681 = tmp2_fu_443_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond1_reg_551.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter1_or_cond_reg_570.read()))) {
        accumulator_V_2_2_reg_686 = accumulator_V_2_2_fu_501_p2.read();
        out_V_reg_691 = out_V_fu_507_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond1_reg_551 = exitcond1_reg_551.read();
        ap_reg_pp0_iter1_or_cond_reg_570 = or_cond_reg_570.read();
        ap_reg_pp0_iter1_tmp_10_reg_592 = tmp_10_reg_592.read();
        exitcond1_reg_551 = exitcond1_fu_267_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_551.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_570.read()))) {
        col_assign_1_0_2_reg_606 = col_assign_1_0_2_fu_367_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond1_reg_551.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        idxCol_1_reg_621 = idxCol_1_fu_380_p3.read();
        phitmp_reg_631 = phitmp_fu_393_p2.read();
        pixConvolved_2_reg_626 = pixConvolved_2_fu_386_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_267_p2.read()))) {
        idxCol_reg_582 = idxCol_fu_323_p2.read();
        lineBuff_val_1_V_ad_reg_560 =  (sc_lv<9>) (tmp_2_fu_273_p1.read());
        lineBuff_val_2_V_ad_reg_565 =  (sc_lv<9>) (tmp_2_fu_273_p1.read());
        or_cond_reg_570 = or_cond_fu_311_p2.read();
        tmp_10_reg_592 = tmp_10_fu_343_p2.read();
        tmp_2_reg_555 = tmp_2_fu_273_p1.read();
        tmp_s_reg_576 = tmp_s_fu_317_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_267_p2.read()))) {
        idxRow_1_reg_587 = idxRow_1_fu_335_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_551.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_570.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        lineBuff_val_0_V_lo_1_reg_642 = lineBuff_val_0_V_q1.read();
        lineBuff_val_0_V_lo_reg_636 = lineBuff_val_0_V_q0.read();
        lineBuff_val_2_V_lo_1_reg_653 = lineBuff_val_2_V_q1.read();
        lineBuff_val_2_V_lo_2_reg_659 = lineBuff_val_2_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond1_reg_551.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter1_or_cond_reg_570.read()))) {
        lineBuff_val_2_V_lo_3_reg_670 = lineBuff_val_2_V_q1.read();
    }
}

void sobel_y::thread_accumulator_V_0_2_ca_fu_471_p1() {
    accumulator_V_0_2_ca_fu_471_p1 = esl_zext<11,10>(accumulator_V_0_2_reg_676.read());
}

void sobel_y::thread_accumulator_V_0_2_fu_437_p2() {
    accumulator_V_0_2_fu_437_p2 = (!tmp1_cast_fu_433_p1.read().is_01() || !val_V_1_0_1_cast_fu_414_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp1_cast_fu_433_p1.read()) + sc_biguint<10>(val_V_1_0_1_cast_fu_414_p1.read()));
}

void sobel_y::thread_accumulator_V_2_1_fu_489_p2() {
    accumulator_V_2_1_fu_489_p2 = (!accumulator_V_2_fu_478_p2.read().is_01() || !p_shl_cast_fu_459_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(accumulator_V_2_fu_478_p2.read()) - sc_biguint<11>(p_shl_cast_fu_459_p1.read()));
}

void sobel_y::thread_accumulator_V_2_2_fu_501_p2() {
    accumulator_V_2_2_fu_501_p2 = (!accumulator_V_2_1_fu_489_p2.read().is_01() || !val_V_2_2_cast_fu_468_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(accumulator_V_2_1_fu_489_p2.read()) - sc_biguint<11>(val_V_2_2_cast_fu_468_p1.read()));
}

void sobel_y::thread_accumulator_V_2_fu_478_p2() {
    accumulator_V_2_fu_478_p2 = (!accumulator_V_0_2_ca_fu_471_p1.read().is_01() || !val_V_2_cast_fu_449_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(accumulator_V_0_2_ca_fu_471_p1.read()) - sc_biguint<11>(val_V_2_cast_fu_449_p1.read()));
}

void sobel_y::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void sobel_y::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void sobel_y::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void sobel_y::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void sobel_y::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[5];
}

void sobel_y::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[4];
}

void sobel_y::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_y::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_10_reg_592.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read()));
}

void sobel_y::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_10_reg_592.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read()));
}

void sobel_y::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_10_reg_592.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read()));
}

void sobel_y::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_y::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond1_reg_551.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, src_V_V_empty_n.read()));
}

void sobel_y::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond1_reg_551.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, src_V_V_empty_n.read()));
}

void sobel_y::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_y::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_y::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_y::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void sobel_y::thread_ap_block_state10() {
    ap_block_state10 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_539_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read()));
}

void sobel_y::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_y::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = (esl_seteq<1,1,1>(exitcond1_reg_551.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, src_V_V_empty_n.read()));
}

void sobel_y::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_y::thread_ap_block_state5_pp0_stage0_iter1() {
    ap_block_state5_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_y::thread_ap_block_state6_pp0_stage1_iter1() {
    ap_block_state6_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_y::thread_ap_block_state7_pp0_stage2_iter1() {
    ap_block_state7_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_y::thread_ap_block_state8_pp0_stage0_iter2() {
    ap_block_state8_pp0_stage0_iter2 = (esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_10_reg_592.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read()));
}

void sobel_y::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_267_p2.read())) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void sobel_y::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_539_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_539_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void sobel_y::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void sobel_y::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sobel_y::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void sobel_y::thread_ap_phi_mux_col_assign_phi_fu_214_p4() {
    if ((esl_seteq<1,1,1>(exitcond1_reg_551.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_phi_mux_col_assign_phi_fu_214_p4 = idxCol_1_reg_621.read();
    } else {
        ap_phi_mux_col_assign_phi_fu_214_p4 = col_assign_reg_210.read();
    }
}

void sobel_y::thread_ap_phi_mux_countWait_phi_fu_248_p4() {
    if ((esl_seteq<1,1,1>(exitcond1_reg_551.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_phi_mux_countWait_phi_fu_248_p4 = phitmp_reg_631.read();
    } else {
        ap_phi_mux_countWait_phi_fu_248_p4 = countWait_reg_244.read();
    }
}

void sobel_y::thread_ap_phi_mux_idxRow_phi_fu_225_p4() {
    if ((esl_seteq<1,1,1>(exitcond1_reg_551.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_phi_mux_idxRow_phi_fu_225_p4 = idxRow_1_reg_587.read();
    } else {
        ap_phi_mux_idxRow_phi_fu_225_p4 = idxRow_reg_221.read();
    }
}

void sobel_y::thread_ap_phi_mux_pixConvolved_phi_fu_236_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond1_reg_551.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        ap_phi_mux_pixConvolved_phi_fu_236_p4 = pixConvolved_2_reg_626.read();
    } else {
        ap_phi_mux_pixConvolved_phi_fu_236_p4 = pixConvolved_reg_232.read();
    }
}

void sobel_y::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_539_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_539_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void sobel_y::thread_col_assign_1_0_2_fu_367_p2() {
    col_assign_1_0_2_fu_367_p2 = (!ap_const_lv32_2.is_01() || !ap_phi_mux_pixConvolved_phi_fu_236_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_2) + sc_biguint<32>(ap_phi_mux_pixConvolved_phi_fu_236_p4.read()));
}

void sobel_y::thread_countWait_2_fu_545_p2() {
    countWait_2_fu_545_p2 = (!countWait_1_reg_256.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(countWait_1_reg_256.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void sobel_y::thread_dst_V_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_10_reg_592.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_539_p2.read())))) {
        dst_V_V_blk_n = dst_V_V_full_n.read();
    } else {
        dst_V_V_blk_n = ap_const_logic_1;
    }
}

void sobel_y::thread_dst_V_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_539_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_539_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read())))) {
        dst_V_V_din = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_10_reg_592.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        dst_V_V_din = tmp_V_fu_531_p3.read();
    } else {
        dst_V_V_din = "XXXXXXXX";
    }
}

void sobel_y::thread_dst_V_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_539_p2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_539_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_reg_pp0_iter1_tmp_10_reg_592.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        dst_V_V_write = ap_const_logic_1;
    } else {
        dst_V_V_write = ap_const_logic_0;
    }
}

void sobel_y::thread_exitcond1_fu_267_p2() {
    exitcond1_fu_267_p2 = (!ap_phi_mux_countWait_phi_fu_248_p4.read().is_01() || !ap_const_lv19_40001.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_countWait_phi_fu_248_p4.read() == ap_const_lv19_40001);
}

void sobel_y::thread_exitcond_fu_539_p2() {
    exitcond_fu_539_p2 = (!countWait_1_reg_256.read().is_01() || !ap_const_lv10_201.is_01())? sc_lv<1>(): sc_lv<1>(countWait_1_reg_256.read() == ap_const_lv10_201);
}

void sobel_y::thread_icmp1_fu_305_p2() {
    icmp1_fu_305_p2 = (!tmp_4_fu_295_p4.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): (sc_bigint<31>(tmp_4_fu_295_p4.read()) > sc_bigint<31>(ap_const_lv31_0));
}

void sobel_y::thread_icmp_fu_289_p2() {
    icmp_fu_289_p2 = (!tmp_3_fu_279_p4.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): (sc_bigint<31>(tmp_3_fu_279_p4.read()) > sc_bigint<31>(ap_const_lv31_0));
}

void sobel_y::thread_idxCol_1_fu_380_p3() {
    idxCol_1_fu_380_p3 = (!tmp_s_reg_576.read()[0].is_01())? sc_lv<32>(): ((tmp_s_reg_576.read()[0].to_bool())? idxCol_reg_582.read(): ap_const_lv32_0);
}

void sobel_y::thread_idxCol_fu_323_p2() {
    idxCol_fu_323_p2 = (!ap_const_lv32_1.is_01() || !ap_phi_mux_col_assign_phi_fu_214_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(ap_phi_mux_col_assign_phi_fu_214_p4.read()));
}

void sobel_y::thread_idxRow_1_fu_335_p3() {
    idxRow_1_fu_335_p3 = (!tmp_s_fu_317_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_s_fu_317_p2.read()[0].to_bool())? ap_phi_mux_idxRow_phi_fu_225_p4.read(): idxRow_2_fu_329_p2.read());
}

void sobel_y::thread_idxRow_2_fu_329_p2() {
    idxRow_2_fu_329_p2 = (!ap_const_lv32_1.is_01() || !ap_phi_mux_idxRow_phi_fu_225_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(ap_phi_mux_idxRow_phi_fu_225_p4.read()));
}

void sobel_y::thread_lineBuff_val_0_V_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        lineBuff_val_0_V_address0 =  (sc_lv<9>) (tmp_13_0_2_fu_399_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        lineBuff_val_0_V_address0 =  (sc_lv<9>) (tmp_5_fu_349_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        lineBuff_val_0_V_address0 =  (sc_lv<9>) (tmp_2_reg_555.read());
    } else {
        lineBuff_val_0_V_address0 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void sobel_y::thread_lineBuff_val_0_V_address1() {
    lineBuff_val_0_V_address1 =  (sc_lv<9>) (tmp_13_0_1_fu_361_p1.read());
}

void sobel_y::thread_lineBuff_val_0_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        lineBuff_val_0_V_ce0 = ap_const_logic_1;
    } else {
        lineBuff_val_0_V_ce0 = ap_const_logic_0;
    }
}

void sobel_y::thread_lineBuff_val_0_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        lineBuff_val_0_V_ce1 = ap_const_logic_1;
    } else {
        lineBuff_val_0_V_ce1 = ap_const_logic_0;
    }
}

void sobel_y::thread_lineBuff_val_0_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond1_reg_551.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        lineBuff_val_0_V_we0 = ap_const_logic_1;
    } else {
        lineBuff_val_0_V_we0 = ap_const_logic_0;
    }
}

void sobel_y::thread_lineBuff_val_1_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            lineBuff_val_1_V_address0 = lineBuff_val_1_V_ad_reg_560.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            lineBuff_val_1_V_address0 =  (sc_lv<9>) (tmp_2_fu_273_p1.read());
        } else {
            lineBuff_val_1_V_address0 =  (sc_lv<9>) ("XXXXXXXXX");
        }
    } else {
        lineBuff_val_1_V_address0 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void sobel_y::thread_lineBuff_val_1_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        lineBuff_val_1_V_ce0 = ap_const_logic_1;
    } else {
        lineBuff_val_1_V_ce0 = ap_const_logic_0;
    }
}

void sobel_y::thread_lineBuff_val_1_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond1_reg_551.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        lineBuff_val_1_V_we0 = ap_const_logic_1;
    } else {
        lineBuff_val_1_V_we0 = ap_const_logic_0;
    }
}

void sobel_y::thread_lineBuff_val_2_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            lineBuff_val_2_V_address0 =  (sc_lv<9>) (tmp_13_0_1_fu_361_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            lineBuff_val_2_V_address0 = lineBuff_val_2_V_ad_reg_565.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            lineBuff_val_2_V_address0 =  (sc_lv<9>) (tmp_2_fu_273_p1.read());
        } else {
            lineBuff_val_2_V_address0 =  (sc_lv<9>) ("XXXXXXXXX");
        }
    } else {
        lineBuff_val_2_V_address0 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void sobel_y::thread_lineBuff_val_2_V_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        lineBuff_val_2_V_address1 =  (sc_lv<9>) (tmp_13_0_2_fu_399_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        lineBuff_val_2_V_address1 =  (sc_lv<9>) (tmp_5_fu_349_p1.read());
    } else {
        lineBuff_val_2_V_address1 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void sobel_y::thread_lineBuff_val_2_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        lineBuff_val_2_V_ce0 = ap_const_logic_1;
    } else {
        lineBuff_val_2_V_ce0 = ap_const_logic_0;
    }
}

void sobel_y::thread_lineBuff_val_2_V_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        lineBuff_val_2_V_ce1 = ap_const_logic_1;
    } else {
        lineBuff_val_2_V_ce1 = ap_const_logic_0;
    }
}

void sobel_y::thread_lineBuff_val_2_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond1_reg_551.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        lineBuff_val_2_V_we0 = ap_const_logic_1;
    } else {
        lineBuff_val_2_V_we0 = ap_const_logic_0;
    }
}

void sobel_y::thread_or_cond_fu_311_p2() {
    or_cond_fu_311_p2 = (icmp_fu_289_p2.read() & icmp1_fu_305_p2.read());
}

void sobel_y::thread_out_V_1_fu_519_p2() {
    out_V_1_fu_519_p2 = (!ap_const_lv8_0.is_01() || !out_V_reg_691.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_0) - sc_biguint<8>(out_V_reg_691.read()));
}

void sobel_y::thread_out_V_2_fu_524_p3() {
    out_V_2_fu_524_p3 = (!tmp_12_fu_512_p3.read()[0].is_01())? sc_lv<8>(): ((tmp_12_fu_512_p3.read()[0].to_bool())? out_V_1_fu_519_p2.read(): out_V_reg_691.read());
}

void sobel_y::thread_out_V_fu_507_p2() {
    out_V_fu_507_p2 = (!tmp_8_fu_495_p2.read().is_01() || !lineBuff_val_2_V_lo_3_reg_670.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_8_fu_495_p2.read()) - sc_biguint<8>(lineBuff_val_2_V_lo_3_reg_670.read()));
}

void sobel_y::thread_p_shl_cast_fu_459_p1() {
    p_shl_cast_fu_459_p1 = esl_zext<11,9>(p_shl_fu_452_p3.read());
}

void sobel_y::thread_p_shl_fu_452_p3() {
    p_shl_fu_452_p3 = esl_concat<8,1>(lineBuff_val_2_V_lo_2_reg_659.read(), ap_const_lv1_0);
}

void sobel_y::thread_phitmp_fu_393_p2() {
    phitmp_fu_393_p2 = (!countWait_reg_244.read().is_01() || !ap_const_lv19_1.is_01())? sc_lv<19>(): (sc_biguint<19>(countWait_reg_244.read()) + sc_biguint<19>(ap_const_lv19_1));
}

void sobel_y::thread_pixConvolved_1_fu_373_p3() {
    pixConvolved_1_fu_373_p3 = (!or_cond_reg_570.read()[0].is_01())? sc_lv<32>(): ((or_cond_reg_570.read()[0].to_bool())? pixConvolved_3_fu_355_p2.read(): ap_phi_mux_pixConvolved_phi_fu_236_p4.read());
}

void sobel_y::thread_pixConvolved_2_fu_386_p3() {
    pixConvolved_2_fu_386_p3 = (!tmp_s_reg_576.read()[0].is_01())? sc_lv<32>(): ((tmp_s_reg_576.read()[0].to_bool())? pixConvolved_1_fu_373_p3.read(): ap_const_lv32_0);
}

void sobel_y::thread_pixConvolved_3_fu_355_p2() {
    pixConvolved_3_fu_355_p2 = (!ap_const_lv32_1.is_01() || !ap_phi_mux_pixConvolved_phi_fu_236_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(ap_phi_mux_pixConvolved_phi_fu_236_p4.read()));
}

void sobel_y::thread_src_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond1_reg_551.read(), ap_const_lv1_0))) {
        src_V_V_blk_n = src_V_V_empty_n.read();
    } else {
        src_V_V_blk_n = ap_const_logic_1;
    }
}

void sobel_y::thread_src_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond1_reg_551.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        src_V_V_read = ap_const_logic_1;
    } else {
        src_V_V_read = ap_const_logic_0;
    }
}

void sobel_y::thread_tmp1_cast_fu_433_p1() {
    tmp1_cast_fu_433_p1 = esl_zext<10,9>(tmp1_fu_427_p2.read());
}

void sobel_y::thread_tmp1_fu_427_p2() {
    tmp1_fu_427_p2 = (!val_V_0_cast_cast_fu_404_p1.read().is_01() || !val_V_0_2_cast_cast_fu_418_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(val_V_0_cast_cast_fu_404_p1.read()) + sc_biguint<9>(val_V_0_2_cast_cast_fu_418_p1.read()));
}

void sobel_y::thread_tmp2_fu_443_p2() {
    tmp2_fu_443_p2 = (!lineBuff_val_0_V_q0.read().is_01() || !tmp_9_fu_422_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(lineBuff_val_0_V_q0.read()) + sc_biguint<8>(tmp_9_fu_422_p2.read()));
}

void sobel_y::thread_tmp_10_fu_343_p2() {
    tmp_10_fu_343_p2 = (!ap_phi_mux_countWait_phi_fu_248_p4.read().is_01() || !ap_const_lv19_201.is_01())? sc_lv<1>(): (sc_biguint<19>(ap_phi_mux_countWait_phi_fu_248_p4.read()) > sc_biguint<19>(ap_const_lv19_201));
}

void sobel_y::thread_tmp_12_fu_512_p3() {
    tmp_12_fu_512_p3 = accumulator_V_2_2_reg_686.read().range(10, 10);
}

void sobel_y::thread_tmp_13_0_1_fu_361_p1() {
    tmp_13_0_1_fu_361_p1 = esl_zext<64,32>(pixConvolved_3_fu_355_p2.read());
}

void sobel_y::thread_tmp_13_0_2_fu_399_p1() {
    tmp_13_0_2_fu_399_p1 = esl_zext<64,32>(col_assign_1_0_2_reg_606.read());
}

void sobel_y::thread_tmp_1_fu_463_p2() {
    tmp_1_fu_463_p2 = (!ap_const_lv8_1.is_01())? sc_lv<8>(): lineBuff_val_2_V_lo_2_reg_659.read() << (unsigned short)ap_const_lv8_1.to_uint();
}

void sobel_y::thread_tmp_2_fu_273_p1() {
    tmp_2_fu_273_p1 = esl_zext<64,32>(ap_phi_mux_col_assign_phi_fu_214_p4.read());
}

void sobel_y::thread_tmp_3_fu_279_p4() {
    tmp_3_fu_279_p4 = ap_phi_mux_idxRow_phi_fu_225_p4.read().range(31, 1);
}

void sobel_y::thread_tmp_4_fu_295_p4() {
    tmp_4_fu_295_p4 = ap_phi_mux_col_assign_phi_fu_214_p4.read().range(31, 1);
}

void sobel_y::thread_tmp_5_fu_349_p1() {
    tmp_5_fu_349_p1 = esl_zext<64,32>(ap_phi_mux_pixConvolved_phi_fu_236_p4.read());
}

void sobel_y::thread_tmp_6_fu_474_p2() {
    tmp_6_fu_474_p2 = (!tmp2_reg_681.read().is_01() || !lineBuff_val_0_V_lo_reg_636.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp2_reg_681.read()) + sc_biguint<8>(lineBuff_val_0_V_lo_reg_636.read()));
}

void sobel_y::thread_tmp_7_fu_484_p2() {
    tmp_7_fu_484_p2 = (!tmp_6_fu_474_p2.read().is_01() || !lineBuff_val_2_V_lo_1_reg_653.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_6_fu_474_p2.read()) - sc_biguint<8>(lineBuff_val_2_V_lo_1_reg_653.read()));
}

void sobel_y::thread_tmp_8_fu_495_p2() {
    tmp_8_fu_495_p2 = (!tmp_7_fu_484_p2.read().is_01() || !tmp_1_fu_463_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_7_fu_484_p2.read()) - sc_biguint<8>(tmp_1_fu_463_p2.read()));
}

void sobel_y::thread_tmp_9_fu_422_p2() {
    tmp_9_fu_422_p2 = (!ap_const_lv8_1.is_01())? sc_lv<8>(): lineBuff_val_0_V_lo_1_reg_642.read() << (unsigned short)ap_const_lv8_1.to_uint();
}

void sobel_y::thread_tmp_V_fu_531_p3() {
    tmp_V_fu_531_p3 = (!ap_reg_pp0_iter1_or_cond_reg_570.read()[0].is_01())? sc_lv<8>(): ((ap_reg_pp0_iter1_or_cond_reg_570.read()[0].to_bool())? out_V_2_fu_524_p3.read(): ap_const_lv8_0);
}

void sobel_y::thread_tmp_s_fu_317_p2() {
    tmp_s_fu_317_p2 = (!ap_phi_mux_col_assign_phi_fu_214_p4.read().is_01() || !ap_const_lv32_1FF.is_01())? sc_lv<1>(): (sc_bigint<32>(ap_phi_mux_col_assign_phi_fu_214_p4.read()) < sc_bigint<32>(ap_const_lv32_1FF));
}

void sobel_y::thread_val_V_0_2_cast_cast_fu_418_p1() {
    val_V_0_2_cast_cast_fu_418_p1 = esl_zext<9,8>(lineBuff_val_0_V_q0.read());
}

void sobel_y::thread_val_V_0_cast_cast_fu_404_p1() {
    val_V_0_cast_cast_fu_404_p1 = esl_zext<9,8>(lineBuff_val_0_V_lo_reg_636.read());
}

void sobel_y::thread_val_V_1_0_1_cast_fu_414_p1() {
    val_V_1_0_1_cast_fu_414_p1 = esl_zext<10,9>(val_V_1_0_1_fu_407_p3.read());
}

void sobel_y::thread_val_V_1_0_1_fu_407_p3() {
    val_V_1_0_1_fu_407_p3 = esl_concat<8,1>(lineBuff_val_0_V_lo_1_reg_642.read(), ap_const_lv1_0);
}

void sobel_y::thread_val_V_2_2_cast_fu_468_p1() {
    val_V_2_2_cast_fu_468_p1 = esl_zext<11,8>(lineBuff_val_2_V_lo_3_reg_670.read());
}

void sobel_y::thread_val_V_2_cast_fu_449_p1() {
    val_V_2_cast_fu_449_p1 = esl_zext<11,8>(lineBuff_val_2_V_lo_1_reg_653.read());
}

void sobel_y::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_267_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_267_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_539_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_539_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_539_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_539_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

}

