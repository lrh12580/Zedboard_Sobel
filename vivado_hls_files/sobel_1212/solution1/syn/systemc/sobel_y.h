// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _sobel_y_HH_
#define _sobel_y_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "gaussianBlur_linefYi.h"
#include "sobel_y_lineBuff_ncg.h"

namespace ap_rtl {

struct sobel_y : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > src_V_V_dout;
    sc_in< sc_logic > src_V_V_empty_n;
    sc_out< sc_logic > src_V_V_read;
    sc_out< sc_lv<8> > dst_V_V_din;
    sc_in< sc_logic > dst_V_V_full_n;
    sc_out< sc_logic > dst_V_V_write;


    // Module declarations
    sobel_y(sc_module_name name);
    SC_HAS_PROCESS(sobel_y);

    ~sobel_y();

    sc_trace_file* mVcdFile;

    gaussianBlur_linefYi* lineBuff_val_0_V_U;
    sobel_y_lineBuff_ncg* lineBuff_val_1_V_U;
    gaussianBlur_linefYi* lineBuff_val_2_V_U;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > src_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<1> > exitcond1_reg_551;
    sc_signal< sc_logic > dst_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > tmp_10_reg_592;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_tmp_10_reg_592;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > exitcond_fu_539_p2;
    sc_signal< sc_lv<32> > col_assign_reg_210;
    sc_signal< sc_lv<32> > idxRow_reg_221;
    sc_signal< sc_lv<32> > pixConvolved_reg_232;
    sc_signal< sc_lv<19> > countWait_reg_244;
    sc_signal< sc_lv<1> > exitcond1_fu_267_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_exitcond1_reg_551;
    sc_signal< sc_lv<64> > tmp_2_fu_273_p1;
    sc_signal< sc_lv<64> > tmp_2_reg_555;
    sc_signal< sc_lv<9> > lineBuff_val_1_V_ad_reg_560;
    sc_signal< sc_lv<9> > lineBuff_val_2_V_ad_reg_565;
    sc_signal< sc_lv<1> > or_cond_fu_311_p2;
    sc_signal< sc_lv<1> > or_cond_reg_570;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_or_cond_reg_570;
    sc_signal< sc_lv<1> > tmp_s_fu_317_p2;
    sc_signal< sc_lv<1> > tmp_s_reg_576;
    sc_signal< sc_lv<32> > idxCol_fu_323_p2;
    sc_signal< sc_lv<32> > idxCol_reg_582;
    sc_signal< sc_lv<32> > idxRow_1_fu_335_p3;
    sc_signal< sc_lv<32> > idxRow_1_reg_587;
    sc_signal< sc_lv<1> > tmp_10_fu_343_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state4_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage2_iter1;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<32> > col_assign_1_0_2_fu_367_p2;
    sc_signal< sc_lv<32> > col_assign_1_0_2_reg_606;
    sc_signal< sc_lv<32> > idxCol_1_fu_380_p3;
    sc_signal< sc_lv<32> > idxCol_1_reg_621;
    sc_signal< sc_lv<32> > pixConvolved_2_fu_386_p3;
    sc_signal< sc_lv<32> > pixConvolved_2_reg_626;
    sc_signal< sc_lv<19> > phitmp_fu_393_p2;
    sc_signal< sc_lv<19> > phitmp_reg_631;
    sc_signal< sc_lv<8> > lineBuff_val_0_V_q0;
    sc_signal< sc_lv<8> > lineBuff_val_0_V_lo_reg_636;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<8> > lineBuff_val_0_V_q1;
    sc_signal< sc_lv<8> > lineBuff_val_0_V_lo_1_reg_642;
    sc_signal< sc_lv<8> > lineBuff_val_2_V_q1;
    sc_signal< sc_lv<8> > lineBuff_val_2_V_lo_1_reg_653;
    sc_signal< sc_lv<8> > lineBuff_val_2_V_q0;
    sc_signal< sc_lv<8> > lineBuff_val_2_V_lo_2_reg_659;
    sc_signal< sc_lv<8> > lineBuff_val_2_V_lo_3_reg_670;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<10> > accumulator_V_0_2_fu_437_p2;
    sc_signal< sc_lv<10> > accumulator_V_0_2_reg_676;
    sc_signal< sc_lv<8> > tmp2_fu_443_p2;
    sc_signal< sc_lv<8> > tmp2_reg_681;
    sc_signal< sc_lv<11> > accumulator_V_2_2_fu_501_p2;
    sc_signal< sc_lv<11> > accumulator_V_2_2_reg_686;
    sc_signal< sc_lv<8> > out_V_fu_507_p2;
    sc_signal< sc_lv<8> > out_V_reg_691;
    sc_signal< sc_lv<10> > countWait_2_fu_545_p2;
    sc_signal< bool > ap_block_state10;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< sc_lv<9> > lineBuff_val_0_V_address0;
    sc_signal< sc_logic > lineBuff_val_0_V_ce0;
    sc_signal< sc_logic > lineBuff_val_0_V_we0;
    sc_signal< sc_lv<9> > lineBuff_val_0_V_address1;
    sc_signal< sc_logic > lineBuff_val_0_V_ce1;
    sc_signal< sc_lv<9> > lineBuff_val_1_V_address0;
    sc_signal< sc_logic > lineBuff_val_1_V_ce0;
    sc_signal< sc_logic > lineBuff_val_1_V_we0;
    sc_signal< sc_lv<8> > lineBuff_val_1_V_q0;
    sc_signal< sc_lv<9> > lineBuff_val_2_V_address0;
    sc_signal< sc_logic > lineBuff_val_2_V_ce0;
    sc_signal< sc_logic > lineBuff_val_2_V_we0;
    sc_signal< sc_lv<9> > lineBuff_val_2_V_address1;
    sc_signal< sc_logic > lineBuff_val_2_V_ce1;
    sc_signal< sc_lv<32> > ap_phi_mux_col_assign_phi_fu_214_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_idxRow_phi_fu_225_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_pixConvolved_phi_fu_236_p4;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<19> > ap_phi_mux_countWait_phi_fu_248_p4;
    sc_signal< sc_lv<10> > countWait_1_reg_256;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<64> > tmp_5_fu_349_p1;
    sc_signal< sc_lv<64> > tmp_13_0_1_fu_361_p1;
    sc_signal< sc_lv<64> > tmp_13_0_2_fu_399_p1;
    sc_signal< sc_lv<8> > tmp_V_fu_531_p3;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<31> > tmp_3_fu_279_p4;
    sc_signal< sc_lv<31> > tmp_4_fu_295_p4;
    sc_signal< sc_lv<1> > icmp_fu_289_p2;
    sc_signal< sc_lv<1> > icmp1_fu_305_p2;
    sc_signal< sc_lv<32> > idxRow_2_fu_329_p2;
    sc_signal< sc_lv<32> > pixConvolved_3_fu_355_p2;
    sc_signal< sc_lv<32> > pixConvolved_1_fu_373_p3;
    sc_signal< sc_lv<9> > val_V_1_0_1_fu_407_p3;
    sc_signal< sc_lv<9> > val_V_0_cast_cast_fu_404_p1;
    sc_signal< sc_lv<9> > val_V_0_2_cast_cast_fu_418_p1;
    sc_signal< sc_lv<9> > tmp1_fu_427_p2;
    sc_signal< sc_lv<10> > tmp1_cast_fu_433_p1;
    sc_signal< sc_lv<10> > val_V_1_0_1_cast_fu_414_p1;
    sc_signal< sc_lv<8> > tmp_9_fu_422_p2;
    sc_signal< sc_lv<9> > p_shl_fu_452_p3;
    sc_signal< sc_lv<11> > accumulator_V_0_2_ca_fu_471_p1;
    sc_signal< sc_lv<11> > val_V_2_cast_fu_449_p1;
    sc_signal< sc_lv<8> > tmp_6_fu_474_p2;
    sc_signal< sc_lv<11> > accumulator_V_2_fu_478_p2;
    sc_signal< sc_lv<11> > p_shl_cast_fu_459_p1;
    sc_signal< sc_lv<8> > tmp_7_fu_484_p2;
    sc_signal< sc_lv<8> > tmp_1_fu_463_p2;
    sc_signal< sc_lv<11> > accumulator_V_2_1_fu_489_p2;
    sc_signal< sc_lv<11> > val_V_2_2_cast_fu_468_p1;
    sc_signal< sc_lv<8> > tmp_8_fu_495_p2;
    sc_signal< sc_lv<1> > tmp_12_fu_512_p3;
    sc_signal< sc_lv<8> > out_V_1_fu_519_p2;
    sc_signal< sc_lv<8> > out_V_2_fu_524_p3;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage0;
    static const sc_lv<6> ap_ST_fsm_pp0_stage1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage2;
    static const sc_lv<6> ap_ST_fsm_state9;
    static const sc_lv<6> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<19> ap_const_lv19_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<19> ap_const_lv19_40001;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_1FF;
    static const sc_lv<19> ap_const_lv19_201;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<10> ap_const_lv10_201;
    static const sc_lv<10> ap_const_lv10_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_accumulator_V_0_2_ca_fu_471_p1();
    void thread_accumulator_V_0_2_fu_437_p2();
    void thread_accumulator_V_2_1_fu_489_p2();
    void thread_accumulator_V_2_2_fu_501_p2();
    void thread_accumulator_V_2_fu_478_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state10();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage2_iter0();
    void thread_ap_block_state5_pp0_stage0_iter1();
    void thread_ap_block_state6_pp0_stage1_iter1();
    void thread_ap_block_state7_pp0_stage2_iter1();
    void thread_ap_block_state8_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_col_assign_phi_fu_214_p4();
    void thread_ap_phi_mux_countWait_phi_fu_248_p4();
    void thread_ap_phi_mux_idxRow_phi_fu_225_p4();
    void thread_ap_phi_mux_pixConvolved_phi_fu_236_p4();
    void thread_ap_ready();
    void thread_col_assign_1_0_2_fu_367_p2();
    void thread_countWait_2_fu_545_p2();
    void thread_dst_V_V_blk_n();
    void thread_dst_V_V_din();
    void thread_dst_V_V_write();
    void thread_exitcond1_fu_267_p2();
    void thread_exitcond_fu_539_p2();
    void thread_icmp1_fu_305_p2();
    void thread_icmp_fu_289_p2();
    void thread_idxCol_1_fu_380_p3();
    void thread_idxCol_fu_323_p2();
    void thread_idxRow_1_fu_335_p3();
    void thread_idxRow_2_fu_329_p2();
    void thread_lineBuff_val_0_V_address0();
    void thread_lineBuff_val_0_V_address1();
    void thread_lineBuff_val_0_V_ce0();
    void thread_lineBuff_val_0_V_ce1();
    void thread_lineBuff_val_0_V_we0();
    void thread_lineBuff_val_1_V_address0();
    void thread_lineBuff_val_1_V_ce0();
    void thread_lineBuff_val_1_V_we0();
    void thread_lineBuff_val_2_V_address0();
    void thread_lineBuff_val_2_V_address1();
    void thread_lineBuff_val_2_V_ce0();
    void thread_lineBuff_val_2_V_ce1();
    void thread_lineBuff_val_2_V_we0();
    void thread_or_cond_fu_311_p2();
    void thread_out_V_1_fu_519_p2();
    void thread_out_V_2_fu_524_p3();
    void thread_out_V_fu_507_p2();
    void thread_p_shl_cast_fu_459_p1();
    void thread_p_shl_fu_452_p3();
    void thread_phitmp_fu_393_p2();
    void thread_pixConvolved_1_fu_373_p3();
    void thread_pixConvolved_2_fu_386_p3();
    void thread_pixConvolved_3_fu_355_p2();
    void thread_src_V_V_blk_n();
    void thread_src_V_V_read();
    void thread_tmp1_cast_fu_433_p1();
    void thread_tmp1_fu_427_p2();
    void thread_tmp2_fu_443_p2();
    void thread_tmp_10_fu_343_p2();
    void thread_tmp_12_fu_512_p3();
    void thread_tmp_13_0_1_fu_361_p1();
    void thread_tmp_13_0_2_fu_399_p1();
    void thread_tmp_1_fu_463_p2();
    void thread_tmp_2_fu_273_p1();
    void thread_tmp_3_fu_279_p4();
    void thread_tmp_4_fu_295_p4();
    void thread_tmp_5_fu_349_p1();
    void thread_tmp_6_fu_474_p2();
    void thread_tmp_7_fu_484_p2();
    void thread_tmp_8_fu_495_p2();
    void thread_tmp_9_fu_422_p2();
    void thread_tmp_V_fu_531_p3();
    void thread_tmp_s_fu_317_p2();
    void thread_val_V_0_2_cast_cast_fu_418_p1();
    void thread_val_V_0_cast_cast_fu_404_p1();
    void thread_val_V_1_0_1_cast_fu_414_p1();
    void thread_val_V_1_0_1_fu_407_p3();
    void thread_val_V_2_2_cast_fu_468_p1();
    void thread_val_V_2_cast_fu_449_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
