// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Stream2Mem_Batch (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        m_axi_out_V_AWVALID,
        m_axi_out_V_AWREADY,
        m_axi_out_V_AWADDR,
        m_axi_out_V_AWID,
        m_axi_out_V_AWLEN,
        m_axi_out_V_AWSIZE,
        m_axi_out_V_AWBURST,
        m_axi_out_V_AWLOCK,
        m_axi_out_V_AWCACHE,
        m_axi_out_V_AWPROT,
        m_axi_out_V_AWQOS,
        m_axi_out_V_AWREGION,
        m_axi_out_V_AWUSER,
        m_axi_out_V_WVALID,
        m_axi_out_V_WREADY,
        m_axi_out_V_WDATA,
        m_axi_out_V_WSTRB,
        m_axi_out_V_WLAST,
        m_axi_out_V_WID,
        m_axi_out_V_WUSER,
        m_axi_out_V_ARVALID,
        m_axi_out_V_ARREADY,
        m_axi_out_V_ARADDR,
        m_axi_out_V_ARID,
        m_axi_out_V_ARLEN,
        m_axi_out_V_ARSIZE,
        m_axi_out_V_ARBURST,
        m_axi_out_V_ARLOCK,
        m_axi_out_V_ARCACHE,
        m_axi_out_V_ARPROT,
        m_axi_out_V_ARQOS,
        m_axi_out_V_ARREGION,
        m_axi_out_V_ARUSER,
        m_axi_out_V_RVALID,
        m_axi_out_V_RREADY,
        m_axi_out_V_RDATA,
        m_axi_out_V_RLAST,
        m_axi_out_V_RID,
        m_axi_out_V_RUSER,
        m_axi_out_V_RRESP,
        m_axi_out_V_BVALID,
        m_axi_out_V_BREADY,
        m_axi_out_V_BRESP,
        m_axi_out_V_BID,
        m_axi_out_V_BUSER,
        out_V_offset_dout,
        out_V_offset_empty_n,
        out_V_offset_read
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output   m_axi_out_V_AWVALID;
input   m_axi_out_V_AWREADY;
output  [31:0] m_axi_out_V_AWADDR;
output  [0:0] m_axi_out_V_AWID;
output  [31:0] m_axi_out_V_AWLEN;
output  [2:0] m_axi_out_V_AWSIZE;
output  [1:0] m_axi_out_V_AWBURST;
output  [1:0] m_axi_out_V_AWLOCK;
output  [3:0] m_axi_out_V_AWCACHE;
output  [2:0] m_axi_out_V_AWPROT;
output  [3:0] m_axi_out_V_AWQOS;
output  [3:0] m_axi_out_V_AWREGION;
output  [0:0] m_axi_out_V_AWUSER;
output   m_axi_out_V_WVALID;
input   m_axi_out_V_WREADY;
output  [31:0] m_axi_out_V_WDATA;
output  [3:0] m_axi_out_V_WSTRB;
output   m_axi_out_V_WLAST;
output  [0:0] m_axi_out_V_WID;
output  [0:0] m_axi_out_V_WUSER;
output   m_axi_out_V_ARVALID;
input   m_axi_out_V_ARREADY;
output  [31:0] m_axi_out_V_ARADDR;
output  [0:0] m_axi_out_V_ARID;
output  [31:0] m_axi_out_V_ARLEN;
output  [2:0] m_axi_out_V_ARSIZE;
output  [1:0] m_axi_out_V_ARBURST;
output  [1:0] m_axi_out_V_ARLOCK;
output  [3:0] m_axi_out_V_ARCACHE;
output  [2:0] m_axi_out_V_ARPROT;
output  [3:0] m_axi_out_V_ARQOS;
output  [3:0] m_axi_out_V_ARREGION;
output  [0:0] m_axi_out_V_ARUSER;
input   m_axi_out_V_RVALID;
output   m_axi_out_V_RREADY;
input  [31:0] m_axi_out_V_RDATA;
input   m_axi_out_V_RLAST;
input  [0:0] m_axi_out_V_RID;
input  [0:0] m_axi_out_V_RUSER;
input  [1:0] m_axi_out_V_RRESP;
input   m_axi_out_V_BVALID;
output   m_axi_out_V_BREADY;
input  [1:0] m_axi_out_V_BRESP;
input  [0:0] m_axi_out_V_BID;
input  [0:0] m_axi_out_V_BUSER;
input  [31:0] out_V_offset_dout;
input   out_V_offset_empty_n;
output   out_V_offset_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_V_V_read;
reg m_axi_out_V_AWVALID;
reg[31:0] m_axi_out_V_AWADDR;
reg[0:0] m_axi_out_V_AWID;
reg[31:0] m_axi_out_V_AWLEN;
reg[2:0] m_axi_out_V_AWSIZE;
reg[1:0] m_axi_out_V_AWBURST;
reg[1:0] m_axi_out_V_AWLOCK;
reg[3:0] m_axi_out_V_AWCACHE;
reg[2:0] m_axi_out_V_AWPROT;
reg[3:0] m_axi_out_V_AWQOS;
reg[3:0] m_axi_out_V_AWREGION;
reg[0:0] m_axi_out_V_AWUSER;
reg m_axi_out_V_WVALID;
reg[31:0] m_axi_out_V_WDATA;
reg[3:0] m_axi_out_V_WSTRB;
reg m_axi_out_V_WLAST;
reg[0:0] m_axi_out_V_WID;
reg[0:0] m_axi_out_V_WUSER;
reg m_axi_out_V_BREADY;
reg out_V_offset_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    out_V_offset_blk_n;
reg   [29:0] out_V_offset1_i_reg_168;
reg    ap_block_state1;
wire   [0:0] tmp_i_89_fu_124_p2;
reg   [0:0] tmp_i_89_reg_177;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_i_fu_114_p2;
wire   [31:0] tmp_48_fu_130_p2;
reg   [31:0] tmp_48_reg_181;
wire    grp_Stream2Mem_fu_76_ap_start;
wire    grp_Stream2Mem_fu_76_ap_done;
wire    grp_Stream2Mem_fu_76_ap_idle;
wire    grp_Stream2Mem_fu_76_ap_ready;
wire    grp_Stream2Mem_fu_76_in_V_V_read;
wire    grp_Stream2Mem_fu_76_m_axi_out_V_AWVALID;
wire   [31:0] grp_Stream2Mem_fu_76_m_axi_out_V_AWADDR;
wire   [0:0] grp_Stream2Mem_fu_76_m_axi_out_V_AWID;
wire   [31:0] grp_Stream2Mem_fu_76_m_axi_out_V_AWLEN;
wire   [2:0] grp_Stream2Mem_fu_76_m_axi_out_V_AWSIZE;
wire   [1:0] grp_Stream2Mem_fu_76_m_axi_out_V_AWBURST;
wire   [1:0] grp_Stream2Mem_fu_76_m_axi_out_V_AWLOCK;
wire   [3:0] grp_Stream2Mem_fu_76_m_axi_out_V_AWCACHE;
wire   [2:0] grp_Stream2Mem_fu_76_m_axi_out_V_AWPROT;
wire   [3:0] grp_Stream2Mem_fu_76_m_axi_out_V_AWQOS;
wire   [3:0] grp_Stream2Mem_fu_76_m_axi_out_V_AWREGION;
wire   [0:0] grp_Stream2Mem_fu_76_m_axi_out_V_AWUSER;
wire    grp_Stream2Mem_fu_76_m_axi_out_V_WVALID;
wire   [31:0] grp_Stream2Mem_fu_76_m_axi_out_V_WDATA;
wire   [3:0] grp_Stream2Mem_fu_76_m_axi_out_V_WSTRB;
wire    grp_Stream2Mem_fu_76_m_axi_out_V_WLAST;
wire   [0:0] grp_Stream2Mem_fu_76_m_axi_out_V_WID;
wire   [0:0] grp_Stream2Mem_fu_76_m_axi_out_V_WUSER;
wire    grp_Stream2Mem_fu_76_m_axi_out_V_ARVALID;
wire   [31:0] grp_Stream2Mem_fu_76_m_axi_out_V_ARADDR;
wire   [0:0] grp_Stream2Mem_fu_76_m_axi_out_V_ARID;
wire   [31:0] grp_Stream2Mem_fu_76_m_axi_out_V_ARLEN;
wire   [2:0] grp_Stream2Mem_fu_76_m_axi_out_V_ARSIZE;
wire   [1:0] grp_Stream2Mem_fu_76_m_axi_out_V_ARBURST;
wire   [1:0] grp_Stream2Mem_fu_76_m_axi_out_V_ARLOCK;
wire   [3:0] grp_Stream2Mem_fu_76_m_axi_out_V_ARCACHE;
wire   [2:0] grp_Stream2Mem_fu_76_m_axi_out_V_ARPROT;
wire   [3:0] grp_Stream2Mem_fu_76_m_axi_out_V_ARQOS;
wire   [3:0] grp_Stream2Mem_fu_76_m_axi_out_V_ARREGION;
wire   [0:0] grp_Stream2Mem_fu_76_m_axi_out_V_ARUSER;
wire    grp_Stream2Mem_fu_76_m_axi_out_V_RREADY;
wire    grp_Stream2Mem_fu_76_m_axi_out_V_BREADY;
wire    grp_Stream2Mem_1_fu_86_ap_start;
wire    grp_Stream2Mem_1_fu_86_ap_done;
wire    grp_Stream2Mem_1_fu_86_ap_idle;
wire    grp_Stream2Mem_1_fu_86_ap_ready;
wire    grp_Stream2Mem_1_fu_86_in_V_V_read;
wire    grp_Stream2Mem_1_fu_86_m_axi_out_V_AWVALID;
wire   [31:0] grp_Stream2Mem_1_fu_86_m_axi_out_V_AWADDR;
wire   [0:0] grp_Stream2Mem_1_fu_86_m_axi_out_V_AWID;
wire   [31:0] grp_Stream2Mem_1_fu_86_m_axi_out_V_AWLEN;
wire   [2:0] grp_Stream2Mem_1_fu_86_m_axi_out_V_AWSIZE;
wire   [1:0] grp_Stream2Mem_1_fu_86_m_axi_out_V_AWBURST;
wire   [1:0] grp_Stream2Mem_1_fu_86_m_axi_out_V_AWLOCK;
wire   [3:0] grp_Stream2Mem_1_fu_86_m_axi_out_V_AWCACHE;
wire   [2:0] grp_Stream2Mem_1_fu_86_m_axi_out_V_AWPROT;
wire   [3:0] grp_Stream2Mem_1_fu_86_m_axi_out_V_AWQOS;
wire   [3:0] grp_Stream2Mem_1_fu_86_m_axi_out_V_AWREGION;
wire   [0:0] grp_Stream2Mem_1_fu_86_m_axi_out_V_AWUSER;
wire    grp_Stream2Mem_1_fu_86_m_axi_out_V_WVALID;
wire   [31:0] grp_Stream2Mem_1_fu_86_m_axi_out_V_WDATA;
wire   [3:0] grp_Stream2Mem_1_fu_86_m_axi_out_V_WSTRB;
wire    grp_Stream2Mem_1_fu_86_m_axi_out_V_WLAST;
wire   [0:0] grp_Stream2Mem_1_fu_86_m_axi_out_V_WID;
wire   [0:0] grp_Stream2Mem_1_fu_86_m_axi_out_V_WUSER;
wire    grp_Stream2Mem_1_fu_86_m_axi_out_V_ARVALID;
wire   [31:0] grp_Stream2Mem_1_fu_86_m_axi_out_V_ARADDR;
wire   [0:0] grp_Stream2Mem_1_fu_86_m_axi_out_V_ARID;
wire   [31:0] grp_Stream2Mem_1_fu_86_m_axi_out_V_ARLEN;
wire   [2:0] grp_Stream2Mem_1_fu_86_m_axi_out_V_ARSIZE;
wire   [1:0] grp_Stream2Mem_1_fu_86_m_axi_out_V_ARBURST;
wire   [1:0] grp_Stream2Mem_1_fu_86_m_axi_out_V_ARLOCK;
wire   [3:0] grp_Stream2Mem_1_fu_86_m_axi_out_V_ARCACHE;
wire   [2:0] grp_Stream2Mem_1_fu_86_m_axi_out_V_ARPROT;
wire   [3:0] grp_Stream2Mem_1_fu_86_m_axi_out_V_ARQOS;
wire   [3:0] grp_Stream2Mem_1_fu_86_m_axi_out_V_ARREGION;
wire   [0:0] grp_Stream2Mem_1_fu_86_m_axi_out_V_ARUSER;
wire    grp_Stream2Mem_1_fu_86_m_axi_out_V_RREADY;
wire    grp_Stream2Mem_1_fu_86_m_axi_out_V_BREADY;
reg    ap_reg_grp_Stream2Mem_fu_76_ap_start;
wire    ap_CS_fsm_state3;
reg    ap_reg_grp_Stream2Mem_1_fu_86_ap_start;
reg   [31:0] rep_fu_66;
wire   [31:0] rep_2_fu_138_p2;
wire   [31:0] rep_1_fu_149_p2;
wire   [3:0] tmp_fu_120_p1;
reg   [2:0] ap_NS_fsm;
reg    ap_block_state3_on_subcall_done;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_reg_grp_Stream2Mem_fu_76_ap_start = 1'b0;
#0 ap_reg_grp_Stream2Mem_1_fu_86_ap_start = 1'b0;
end

Stream2Mem grp_Stream2Mem_fu_76(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Stream2Mem_fu_76_ap_start),
    .ap_done(grp_Stream2Mem_fu_76_ap_done),
    .ap_idle(grp_Stream2Mem_fu_76_ap_idle),
    .ap_ready(grp_Stream2Mem_fu_76_ap_ready),
    .in_V_V_dout(in_V_V_dout),
    .in_V_V_empty_n(in_V_V_empty_n),
    .in_V_V_read(grp_Stream2Mem_fu_76_in_V_V_read),
    .m_axi_out_V_AWVALID(grp_Stream2Mem_fu_76_m_axi_out_V_AWVALID),
    .m_axi_out_V_AWREADY(m_axi_out_V_AWREADY),
    .m_axi_out_V_AWADDR(grp_Stream2Mem_fu_76_m_axi_out_V_AWADDR),
    .m_axi_out_V_AWID(grp_Stream2Mem_fu_76_m_axi_out_V_AWID),
    .m_axi_out_V_AWLEN(grp_Stream2Mem_fu_76_m_axi_out_V_AWLEN),
    .m_axi_out_V_AWSIZE(grp_Stream2Mem_fu_76_m_axi_out_V_AWSIZE),
    .m_axi_out_V_AWBURST(grp_Stream2Mem_fu_76_m_axi_out_V_AWBURST),
    .m_axi_out_V_AWLOCK(grp_Stream2Mem_fu_76_m_axi_out_V_AWLOCK),
    .m_axi_out_V_AWCACHE(grp_Stream2Mem_fu_76_m_axi_out_V_AWCACHE),
    .m_axi_out_V_AWPROT(grp_Stream2Mem_fu_76_m_axi_out_V_AWPROT),
    .m_axi_out_V_AWQOS(grp_Stream2Mem_fu_76_m_axi_out_V_AWQOS),
    .m_axi_out_V_AWREGION(grp_Stream2Mem_fu_76_m_axi_out_V_AWREGION),
    .m_axi_out_V_AWUSER(grp_Stream2Mem_fu_76_m_axi_out_V_AWUSER),
    .m_axi_out_V_WVALID(grp_Stream2Mem_fu_76_m_axi_out_V_WVALID),
    .m_axi_out_V_WREADY(m_axi_out_V_WREADY),
    .m_axi_out_V_WDATA(grp_Stream2Mem_fu_76_m_axi_out_V_WDATA),
    .m_axi_out_V_WSTRB(grp_Stream2Mem_fu_76_m_axi_out_V_WSTRB),
    .m_axi_out_V_WLAST(grp_Stream2Mem_fu_76_m_axi_out_V_WLAST),
    .m_axi_out_V_WID(grp_Stream2Mem_fu_76_m_axi_out_V_WID),
    .m_axi_out_V_WUSER(grp_Stream2Mem_fu_76_m_axi_out_V_WUSER),
    .m_axi_out_V_ARVALID(grp_Stream2Mem_fu_76_m_axi_out_V_ARVALID),
    .m_axi_out_V_ARREADY(1'b0),
    .m_axi_out_V_ARADDR(grp_Stream2Mem_fu_76_m_axi_out_V_ARADDR),
    .m_axi_out_V_ARID(grp_Stream2Mem_fu_76_m_axi_out_V_ARID),
    .m_axi_out_V_ARLEN(grp_Stream2Mem_fu_76_m_axi_out_V_ARLEN),
    .m_axi_out_V_ARSIZE(grp_Stream2Mem_fu_76_m_axi_out_V_ARSIZE),
    .m_axi_out_V_ARBURST(grp_Stream2Mem_fu_76_m_axi_out_V_ARBURST),
    .m_axi_out_V_ARLOCK(grp_Stream2Mem_fu_76_m_axi_out_V_ARLOCK),
    .m_axi_out_V_ARCACHE(grp_Stream2Mem_fu_76_m_axi_out_V_ARCACHE),
    .m_axi_out_V_ARPROT(grp_Stream2Mem_fu_76_m_axi_out_V_ARPROT),
    .m_axi_out_V_ARQOS(grp_Stream2Mem_fu_76_m_axi_out_V_ARQOS),
    .m_axi_out_V_ARREGION(grp_Stream2Mem_fu_76_m_axi_out_V_ARREGION),
    .m_axi_out_V_ARUSER(grp_Stream2Mem_fu_76_m_axi_out_V_ARUSER),
    .m_axi_out_V_RVALID(1'b0),
    .m_axi_out_V_RREADY(grp_Stream2Mem_fu_76_m_axi_out_V_RREADY),
    .m_axi_out_V_RDATA(32'd0),
    .m_axi_out_V_RLAST(1'b0),
    .m_axi_out_V_RID(1'd0),
    .m_axi_out_V_RUSER(1'd0),
    .m_axi_out_V_RRESP(2'd0),
    .m_axi_out_V_BVALID(m_axi_out_V_BVALID),
    .m_axi_out_V_BREADY(grp_Stream2Mem_fu_76_m_axi_out_V_BREADY),
    .m_axi_out_V_BRESP(m_axi_out_V_BRESP),
    .m_axi_out_V_BID(m_axi_out_V_BID),
    .m_axi_out_V_BUSER(m_axi_out_V_BUSER),
    .out_V_offset(out_V_offset1_i_reg_168),
    .out_V_offset1(tmp_48_reg_181)
);

Stream2Mem_1 grp_Stream2Mem_1_fu_86(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Stream2Mem_1_fu_86_ap_start),
    .ap_done(grp_Stream2Mem_1_fu_86_ap_done),
    .ap_idle(grp_Stream2Mem_1_fu_86_ap_idle),
    .ap_ready(grp_Stream2Mem_1_fu_86_ap_ready),
    .in_V_V_dout(in_V_V_dout),
    .in_V_V_empty_n(in_V_V_empty_n),
    .in_V_V_read(grp_Stream2Mem_1_fu_86_in_V_V_read),
    .m_axi_out_V_AWVALID(grp_Stream2Mem_1_fu_86_m_axi_out_V_AWVALID),
    .m_axi_out_V_AWREADY(m_axi_out_V_AWREADY),
    .m_axi_out_V_AWADDR(grp_Stream2Mem_1_fu_86_m_axi_out_V_AWADDR),
    .m_axi_out_V_AWID(grp_Stream2Mem_1_fu_86_m_axi_out_V_AWID),
    .m_axi_out_V_AWLEN(grp_Stream2Mem_1_fu_86_m_axi_out_V_AWLEN),
    .m_axi_out_V_AWSIZE(grp_Stream2Mem_1_fu_86_m_axi_out_V_AWSIZE),
    .m_axi_out_V_AWBURST(grp_Stream2Mem_1_fu_86_m_axi_out_V_AWBURST),
    .m_axi_out_V_AWLOCK(grp_Stream2Mem_1_fu_86_m_axi_out_V_AWLOCK),
    .m_axi_out_V_AWCACHE(grp_Stream2Mem_1_fu_86_m_axi_out_V_AWCACHE),
    .m_axi_out_V_AWPROT(grp_Stream2Mem_1_fu_86_m_axi_out_V_AWPROT),
    .m_axi_out_V_AWQOS(grp_Stream2Mem_1_fu_86_m_axi_out_V_AWQOS),
    .m_axi_out_V_AWREGION(grp_Stream2Mem_1_fu_86_m_axi_out_V_AWREGION),
    .m_axi_out_V_AWUSER(grp_Stream2Mem_1_fu_86_m_axi_out_V_AWUSER),
    .m_axi_out_V_WVALID(grp_Stream2Mem_1_fu_86_m_axi_out_V_WVALID),
    .m_axi_out_V_WREADY(m_axi_out_V_WREADY),
    .m_axi_out_V_WDATA(grp_Stream2Mem_1_fu_86_m_axi_out_V_WDATA),
    .m_axi_out_V_WSTRB(grp_Stream2Mem_1_fu_86_m_axi_out_V_WSTRB),
    .m_axi_out_V_WLAST(grp_Stream2Mem_1_fu_86_m_axi_out_V_WLAST),
    .m_axi_out_V_WID(grp_Stream2Mem_1_fu_86_m_axi_out_V_WID),
    .m_axi_out_V_WUSER(grp_Stream2Mem_1_fu_86_m_axi_out_V_WUSER),
    .m_axi_out_V_ARVALID(grp_Stream2Mem_1_fu_86_m_axi_out_V_ARVALID),
    .m_axi_out_V_ARREADY(1'b0),
    .m_axi_out_V_ARADDR(grp_Stream2Mem_1_fu_86_m_axi_out_V_ARADDR),
    .m_axi_out_V_ARID(grp_Stream2Mem_1_fu_86_m_axi_out_V_ARID),
    .m_axi_out_V_ARLEN(grp_Stream2Mem_1_fu_86_m_axi_out_V_ARLEN),
    .m_axi_out_V_ARSIZE(grp_Stream2Mem_1_fu_86_m_axi_out_V_ARSIZE),
    .m_axi_out_V_ARBURST(grp_Stream2Mem_1_fu_86_m_axi_out_V_ARBURST),
    .m_axi_out_V_ARLOCK(grp_Stream2Mem_1_fu_86_m_axi_out_V_ARLOCK),
    .m_axi_out_V_ARCACHE(grp_Stream2Mem_1_fu_86_m_axi_out_V_ARCACHE),
    .m_axi_out_V_ARPROT(grp_Stream2Mem_1_fu_86_m_axi_out_V_ARPROT),
    .m_axi_out_V_ARQOS(grp_Stream2Mem_1_fu_86_m_axi_out_V_ARQOS),
    .m_axi_out_V_ARREGION(grp_Stream2Mem_1_fu_86_m_axi_out_V_ARREGION),
    .m_axi_out_V_ARUSER(grp_Stream2Mem_1_fu_86_m_axi_out_V_ARUSER),
    .m_axi_out_V_RVALID(1'b0),
    .m_axi_out_V_RREADY(grp_Stream2Mem_1_fu_86_m_axi_out_V_RREADY),
    .m_axi_out_V_RDATA(32'd0),
    .m_axi_out_V_RLAST(1'b0),
    .m_axi_out_V_RID(1'd0),
    .m_axi_out_V_RUSER(1'd0),
    .m_axi_out_V_RRESP(2'd0),
    .m_axi_out_V_BVALID(m_axi_out_V_BVALID),
    .m_axi_out_V_BREADY(grp_Stream2Mem_1_fu_86_m_axi_out_V_BREADY),
    .m_axi_out_V_BRESP(m_axi_out_V_BRESP),
    .m_axi_out_V_BID(m_axi_out_V_BID),
    .m_axi_out_V_BUSER(m_axi_out_V_BUSER),
    .out_V_offset(out_V_offset1_i_reg_168),
    .out_V_offset1(tmp_48_reg_181)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_i_fu_114_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_Stream2Mem_1_fu_86_ap_start <= 1'b0;
    end else begin
        if (((tmp_i_fu_114_p2 == 1'd0) & (tmp_i_89_fu_124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_reg_grp_Stream2Mem_1_fu_86_ap_start <= 1'b1;
        end else if ((grp_Stream2Mem_1_fu_86_ap_ready == 1'b1)) begin
            ap_reg_grp_Stream2Mem_1_fu_86_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_Stream2Mem_fu_76_ap_start <= 1'b0;
    end else begin
        if (((tmp_i_fu_114_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_i_89_fu_124_p2 == 1'd1))) begin
            ap_reg_grp_Stream2Mem_fu_76_ap_start <= 1'b1;
        end else if ((grp_Stream2Mem_fu_76_ap_ready == 1'b1)) begin
            ap_reg_grp_Stream2Mem_fu_76_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_fu_114_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_i_89_fu_124_p2 == 1'd1))) begin
        rep_fu_66 <= rep_1_fu_149_p2;
    end else if (((tmp_i_fu_114_p2 == 1'd0) & (tmp_i_89_fu_124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        rep_fu_66 <= rep_2_fu_138_p2;
    end else if ((~((out_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        rep_fu_66 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        out_V_offset1_i_reg_168 <= {{out_V_offset_dout[31:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_fu_114_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_48_reg_181[31 : 18] <= tmp_48_fu_130_p2[31 : 18];
        tmp_i_89_reg_177 <= tmp_i_89_fu_124_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_i_fu_114_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_i_fu_114_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        if ((tmp_i_89_reg_177 == 1'd0)) begin
            in_V_V_read = grp_Stream2Mem_1_fu_86_in_V_V_read;
        end else if ((tmp_i_89_reg_177 == 1'd1)) begin
            in_V_V_read = grp_Stream2Mem_fu_76_in_V_V_read;
        end else begin
            in_V_V_read = 1'b0;
        end
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_i_89_reg_177 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_i_fu_114_p2 == 1'd0) & (tmp_i_89_fu_124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_out_V_AWADDR = grp_Stream2Mem_1_fu_86_m_axi_out_V_AWADDR;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (tmp_i_89_reg_177 == 1'd1)) | ((tmp_i_fu_114_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_i_89_fu_124_p2 == 1'd1)))) begin
        m_axi_out_V_AWADDR = grp_Stream2Mem_fu_76_m_axi_out_V_AWADDR;
    end else begin
        m_axi_out_V_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_i_89_reg_177 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_i_fu_114_p2 == 1'd0) & (tmp_i_89_fu_124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_out_V_AWBURST = grp_Stream2Mem_1_fu_86_m_axi_out_V_AWBURST;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (tmp_i_89_reg_177 == 1'd1)) | ((tmp_i_fu_114_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_i_89_fu_124_p2 == 1'd1)))) begin
        m_axi_out_V_AWBURST = grp_Stream2Mem_fu_76_m_axi_out_V_AWBURST;
    end else begin
        m_axi_out_V_AWBURST = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_i_89_reg_177 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_i_fu_114_p2 == 1'd0) & (tmp_i_89_fu_124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_out_V_AWCACHE = grp_Stream2Mem_1_fu_86_m_axi_out_V_AWCACHE;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (tmp_i_89_reg_177 == 1'd1)) | ((tmp_i_fu_114_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_i_89_fu_124_p2 == 1'd1)))) begin
        m_axi_out_V_AWCACHE = grp_Stream2Mem_fu_76_m_axi_out_V_AWCACHE;
    end else begin
        m_axi_out_V_AWCACHE = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_i_89_reg_177 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_i_fu_114_p2 == 1'd0) & (tmp_i_89_fu_124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_out_V_AWID = grp_Stream2Mem_1_fu_86_m_axi_out_V_AWID;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (tmp_i_89_reg_177 == 1'd1)) | ((tmp_i_fu_114_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_i_89_fu_124_p2 == 1'd1)))) begin
        m_axi_out_V_AWID = grp_Stream2Mem_fu_76_m_axi_out_V_AWID;
    end else begin
        m_axi_out_V_AWID = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_i_89_reg_177 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_i_fu_114_p2 == 1'd0) & (tmp_i_89_fu_124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_out_V_AWLEN = grp_Stream2Mem_1_fu_86_m_axi_out_V_AWLEN;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (tmp_i_89_reg_177 == 1'd1)) | ((tmp_i_fu_114_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_i_89_fu_124_p2 == 1'd1)))) begin
        m_axi_out_V_AWLEN = grp_Stream2Mem_fu_76_m_axi_out_V_AWLEN;
    end else begin
        m_axi_out_V_AWLEN = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_i_89_reg_177 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_i_fu_114_p2 == 1'd0) & (tmp_i_89_fu_124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_out_V_AWLOCK = grp_Stream2Mem_1_fu_86_m_axi_out_V_AWLOCK;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (tmp_i_89_reg_177 == 1'd1)) | ((tmp_i_fu_114_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_i_89_fu_124_p2 == 1'd1)))) begin
        m_axi_out_V_AWLOCK = grp_Stream2Mem_fu_76_m_axi_out_V_AWLOCK;
    end else begin
        m_axi_out_V_AWLOCK = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_i_89_reg_177 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_i_fu_114_p2 == 1'd0) & (tmp_i_89_fu_124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_out_V_AWPROT = grp_Stream2Mem_1_fu_86_m_axi_out_V_AWPROT;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (tmp_i_89_reg_177 == 1'd1)) | ((tmp_i_fu_114_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_i_89_fu_124_p2 == 1'd1)))) begin
        m_axi_out_V_AWPROT = grp_Stream2Mem_fu_76_m_axi_out_V_AWPROT;
    end else begin
        m_axi_out_V_AWPROT = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_i_89_reg_177 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_i_fu_114_p2 == 1'd0) & (tmp_i_89_fu_124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_out_V_AWQOS = grp_Stream2Mem_1_fu_86_m_axi_out_V_AWQOS;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (tmp_i_89_reg_177 == 1'd1)) | ((tmp_i_fu_114_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_i_89_fu_124_p2 == 1'd1)))) begin
        m_axi_out_V_AWQOS = grp_Stream2Mem_fu_76_m_axi_out_V_AWQOS;
    end else begin
        m_axi_out_V_AWQOS = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_i_89_reg_177 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_i_fu_114_p2 == 1'd0) & (tmp_i_89_fu_124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_out_V_AWREGION = grp_Stream2Mem_1_fu_86_m_axi_out_V_AWREGION;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (tmp_i_89_reg_177 == 1'd1)) | ((tmp_i_fu_114_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_i_89_fu_124_p2 == 1'd1)))) begin
        m_axi_out_V_AWREGION = grp_Stream2Mem_fu_76_m_axi_out_V_AWREGION;
    end else begin
        m_axi_out_V_AWREGION = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_i_89_reg_177 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_i_fu_114_p2 == 1'd0) & (tmp_i_89_fu_124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_out_V_AWSIZE = grp_Stream2Mem_1_fu_86_m_axi_out_V_AWSIZE;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (tmp_i_89_reg_177 == 1'd1)) | ((tmp_i_fu_114_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_i_89_fu_124_p2 == 1'd1)))) begin
        m_axi_out_V_AWSIZE = grp_Stream2Mem_fu_76_m_axi_out_V_AWSIZE;
    end else begin
        m_axi_out_V_AWSIZE = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_i_89_reg_177 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_i_fu_114_p2 == 1'd0) & (tmp_i_89_fu_124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_out_V_AWUSER = grp_Stream2Mem_1_fu_86_m_axi_out_V_AWUSER;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (tmp_i_89_reg_177 == 1'd1)) | ((tmp_i_fu_114_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_i_89_fu_124_p2 == 1'd1)))) begin
        m_axi_out_V_AWUSER = grp_Stream2Mem_fu_76_m_axi_out_V_AWUSER;
    end else begin
        m_axi_out_V_AWUSER = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_i_89_reg_177 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_i_fu_114_p2 == 1'd0) & (tmp_i_89_fu_124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_out_V_AWVALID = grp_Stream2Mem_1_fu_86_m_axi_out_V_AWVALID;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (tmp_i_89_reg_177 == 1'd1)) | ((tmp_i_fu_114_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_i_89_fu_124_p2 == 1'd1)))) begin
        m_axi_out_V_AWVALID = grp_Stream2Mem_fu_76_m_axi_out_V_AWVALID;
    end else begin
        m_axi_out_V_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_i_89_reg_177 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_i_fu_114_p2 == 1'd0) & (tmp_i_89_fu_124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_out_V_BREADY = grp_Stream2Mem_1_fu_86_m_axi_out_V_BREADY;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (tmp_i_89_reg_177 == 1'd1)) | ((tmp_i_fu_114_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_i_89_fu_124_p2 == 1'd1)))) begin
        m_axi_out_V_BREADY = grp_Stream2Mem_fu_76_m_axi_out_V_BREADY;
    end else begin
        m_axi_out_V_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_i_89_reg_177 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_i_fu_114_p2 == 1'd0) & (tmp_i_89_fu_124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_out_V_WDATA = grp_Stream2Mem_1_fu_86_m_axi_out_V_WDATA;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (tmp_i_89_reg_177 == 1'd1)) | ((tmp_i_fu_114_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_i_89_fu_124_p2 == 1'd1)))) begin
        m_axi_out_V_WDATA = grp_Stream2Mem_fu_76_m_axi_out_V_WDATA;
    end else begin
        m_axi_out_V_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_i_89_reg_177 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_i_fu_114_p2 == 1'd0) & (tmp_i_89_fu_124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_out_V_WID = grp_Stream2Mem_1_fu_86_m_axi_out_V_WID;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (tmp_i_89_reg_177 == 1'd1)) | ((tmp_i_fu_114_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_i_89_fu_124_p2 == 1'd1)))) begin
        m_axi_out_V_WID = grp_Stream2Mem_fu_76_m_axi_out_V_WID;
    end else begin
        m_axi_out_V_WID = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_i_89_reg_177 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_i_fu_114_p2 == 1'd0) & (tmp_i_89_fu_124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_out_V_WLAST = grp_Stream2Mem_1_fu_86_m_axi_out_V_WLAST;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (tmp_i_89_reg_177 == 1'd1)) | ((tmp_i_fu_114_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_i_89_fu_124_p2 == 1'd1)))) begin
        m_axi_out_V_WLAST = grp_Stream2Mem_fu_76_m_axi_out_V_WLAST;
    end else begin
        m_axi_out_V_WLAST = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_i_89_reg_177 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_i_fu_114_p2 == 1'd0) & (tmp_i_89_fu_124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_out_V_WSTRB = grp_Stream2Mem_1_fu_86_m_axi_out_V_WSTRB;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (tmp_i_89_reg_177 == 1'd1)) | ((tmp_i_fu_114_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_i_89_fu_124_p2 == 1'd1)))) begin
        m_axi_out_V_WSTRB = grp_Stream2Mem_fu_76_m_axi_out_V_WSTRB;
    end else begin
        m_axi_out_V_WSTRB = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_i_89_reg_177 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_i_fu_114_p2 == 1'd0) & (tmp_i_89_fu_124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_out_V_WUSER = grp_Stream2Mem_1_fu_86_m_axi_out_V_WUSER;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (tmp_i_89_reg_177 == 1'd1)) | ((tmp_i_fu_114_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_i_89_fu_124_p2 == 1'd1)))) begin
        m_axi_out_V_WUSER = grp_Stream2Mem_fu_76_m_axi_out_V_WUSER;
    end else begin
        m_axi_out_V_WUSER = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_i_89_reg_177 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_i_fu_114_p2 == 1'd0) & (tmp_i_89_fu_124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_out_V_WVALID = grp_Stream2Mem_1_fu_86_m_axi_out_V_WVALID;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (tmp_i_89_reg_177 == 1'd1)) | ((tmp_i_fu_114_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (tmp_i_89_fu_124_p2 == 1'd1)))) begin
        m_axi_out_V_WVALID = grp_Stream2Mem_fu_76_m_axi_out_V_WVALID;
    end else begin
        m_axi_out_V_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        out_V_offset_blk_n = out_V_offset_empty_n;
    end else begin
        out_V_offset_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((out_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        out_V_offset_read = 1'b1;
    end else begin
        out_V_offset_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((out_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_i_fu_114_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((out_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state3_on_subcall_done = (((tmp_i_89_reg_177 == 1'd0) & (grp_Stream2Mem_1_fu_86_ap_done == 1'b0)) | ((grp_Stream2Mem_fu_76_ap_done == 1'b0) & (tmp_i_89_reg_177 == 1'd1)));
end

assign grp_Stream2Mem_1_fu_86_ap_start = ap_reg_grp_Stream2Mem_1_fu_86_ap_start;

assign grp_Stream2Mem_fu_76_ap_start = ap_reg_grp_Stream2Mem_fu_76_ap_start;

assign m_axi_out_V_ARADDR = 32'd0;

assign m_axi_out_V_ARBURST = 2'd0;

assign m_axi_out_V_ARCACHE = 4'd0;

assign m_axi_out_V_ARID = 1'd0;

assign m_axi_out_V_ARLEN = 32'd0;

assign m_axi_out_V_ARLOCK = 2'd0;

assign m_axi_out_V_ARPROT = 3'd0;

assign m_axi_out_V_ARQOS = 4'd0;

assign m_axi_out_V_ARREGION = 4'd0;

assign m_axi_out_V_ARSIZE = 3'd0;

assign m_axi_out_V_ARUSER = 1'd0;

assign m_axi_out_V_ARVALID = 1'b0;

assign m_axi_out_V_RREADY = 1'b0;

assign rep_1_fu_149_p2 = (rep_fu_66 + 32'd16);

assign rep_2_fu_138_p2 = (rep_fu_66 + 32'd1);

assign tmp_48_fu_130_p2 = rep_fu_66 << 32'd18;

assign tmp_fu_120_p1 = rep_fu_66[3:0];

assign tmp_i_89_fu_124_p2 = ((tmp_fu_120_p1 == 4'd1) ? 1'b1 : 1'b0);

assign tmp_i_fu_114_p2 = ((rep_fu_66 == 32'd1) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_48_reg_181[17:0] <= 18'b000000000000000000;
end

endmodule //Stream2Mem_Batch
